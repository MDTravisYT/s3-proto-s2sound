 AS V1.42 Beta [Bld 251] - Source File Music.asm - Page 1 - 2/19/2024 10:3:17


    1/       0 :                        z80_ptr function x,(x)<<8&$FF00|(x)>>8&$7F|$80
    2/       0 :                        
    3/       0 : =$0                    zeroOffsetOptimization	= 0
    4/       0 :                        
    5/       0 :                        	include "MacroSetup.asm"
(1)    1/       0 :                     	padding off	; we don't want AS padding out dc.b instructions
(1)    2/       0 :                     	listing purecode	; Want listing file, but only the final code in expanded macros
(1)    3/       0 :                     	page	0	; Don't want form feeds
(1)    4/       0 :                     	supmode on	; we don't need warnings about privileged instructions
(1)    5/       0 :                     
(1)    6/       0 :                     notZ80 function cpu,(cpu<>128)&&(cpu<>32988)
(1)    7/       0 :                     
(1)    8/       0 :                     ; make org safer (impossible to overwrite previously assembled bytes)
(1)    9/       0 :                     ; and also make it work in Z80 code without creating a new segment
(1)   10/       0 :                     org macro address
(1)   11/       0 :                     	if notZ80(MOMCPU)
(1)   12/       0 :                     		if address < *
(1)   13/       0 :                     			error "too much stuff before org $\{address} ($\{(*-address)} bytes)"
(1)   14/       0 :                     		else
(1)   15/       0 :                     			!org address
(1)   16/       0 :                     		endif
(1)   17/       0 :                     	else
(1)   18/       0 :                     		if address < $
(1)   19/       0 :                     			error "too much stuff before org 0\{address}h (0\{($-address)}h bytes)"
(1)   20/       0 :                     		else
(1)   21/       0 :                     			while address > $
(1)   22/       0 :                     				db 0
(1)   23/       0 :                     			endm
(1)   24/       0 :                     		endif
(1)   25/       0 :                     	endif
(1)   26/       0 :                         endm
(1)   27/       0 :                     
(1)   28/       0 :                     ; define an alternate org that fills the extra space with 0s instead of FFs
(1)   29/       0 :                     org0 macro address
(1)   30/       0 :                     .diff := address - *
(1)   31/       0 :                     	if .diff < 0
(1)   32/       0 :                     		error "too much stuff before org0 $\{address} ($\{(-diff)} bytes)"
(1)   33/       0 :                     	else
(1)   34/       0 :                     		while .diff > 1024
(1)   35/       0 :                     			; AS can only generate 1 kb of code on a single line
(1)   36/       0 :                     			dc.b [1024]0
(1)   37/       0 :                     .diff := .diff - 1024
(1)   38/       0 :                     		endm
(1)   39/       0 :                     		dc.b [.diff]0
(1)   40/       0 :                     	endif
(1)   41/       0 :                         endm
(1)   42/       0 :                     
(1)   43/       0 :                     ; define the cnop pseudo-instruction
(1)   44/       0 :                     cnop macro offset,alignment
(1)   45/       0 :                     	if notZ80(MOMCPU)
(1)   46/       0 :                     		org (*-1+(alignment)-((*-1+(-(offset)))#(alignment)))
(1)   47/       0 :                     	else
(1)   48/       0 :                     		org ($-1+(alignment)-(($-1+(-(offset)))#(alignment)))
(1)   49/       0 :                     	endif
(1)   50/       0 :                         endm
(1)   51/       0 :                     
(1)   52/       0 :                     ; define an alternate cnop that fills the extra space with 0s instead of FFs
(1)   53/       0 :                     cnop0 macro offset,alignment
(1)   54/       0 :                     	org0 (*-1+(alignment)-((*-1+(-(offset)))#(alignment)))
(1)   55/       0 :                         endm
(1)   56/       0 :                     
(1)   57/       0 :                     ; redefine align in terms of cnop, because the built-in align can be stupid sometimes
(1)   58/       0 :                     align macro alignment
(1)   59/       0 :                     	cnop 0,alignment
(1)   60/       0 :                         endm
(1)   61/       0 :                     
(1)   62/       0 :                     ; define an alternate align that fills the extra space with 0s instead of FFs
(1)   63/       0 :                     align0 macro alignment
(1)   64/       0 :                     	cnop0 0,alignment
(1)   65/       0 :                         endm
(1)   66/       0 :                     
(1)   67/       0 :                     ; define the even pseudo-instruction
(1)   68/       0 :                     even macro
(1)   69/       0 :                     	if notZ80(MOMCPU)
(1)   70/       0 :                     		if (*)&1
(1)   71/       0 :                     			dc.b 0 ;ds.b 1
(1)   72/       0 :                     		endif
(1)   73/       0 :                     	else
(1)   74/       0 :                     		if ($)&1
(1)   75/       0 :                     			db 0
(1)   76/       0 :                     		endif
(1)   77/       0 :                     	endif
(1)   78/       0 :                         endm
(1)   79/       0 :                     
(1)   80/       0 :                     ; make ds work in Z80 code without creating a new segment
(1)   81/       0 :                     ds macro
(1)   82/       0 :                     	if notZ80(MOMCPU)
(1)   83/       0 :                     		!ds.ATTRIBUTE ALLARGS
(1)   84/       0 :                     	else
(1)   85/       0 :                     		rept ALLARGS
(1)   86/       0 :                     			db 0
(1)   87/       0 :                     		endm
(1)   88/       0 :                     	endif
(1)   89/       0 :                        endm
(1)   90/       0 :                     
(1)   91/       0 :                     ; define a trace macro
(1)   92/       0 :                     ; lets you easily check what address a location in this disassembly assembles to
(1)   93/       0 :                     trace macro optionalMessageWithoutQuotes
(1)   94/       0 :                     	if MOMPASS=1
(1)   95/       0 :                     		if ("ALLARGS"<>"")
(1)   96/       0 :                     			message "#\{tracenum/1.0}: line=\{MOMLINE/1.0} PC=$\{(*)&$FFFFFFFF} msg=ALLARGS"
(1)   97/       0 :                     		else
(1)   98/       0 :                     			message "#\{tracenum/1.0}: line=\{MOMLINE/1.0} PC=$\{(*)&$FFFFFFFF}"
(1)   99/       0 :                     		endif
(1)  100/       0 :                     tracenum := (tracenum+1)
(1)  101/       0 :                     	endif
(1)  102/       0 :                        endm
(1)  103/       0 : =$0                 tracenum := 0
(1)  104/       0 :                     
(1)  106/       0 :                         ; disable a space optimization in AS so we can build a bit-perfect ROM
(1)  107/       0 :                         ; (the hard way, but it requires no modification of AS itself)
(1)  108/       0 :                     
(1)  109/       0 :                     
(1)  110/       0 :                     chkop function op,ref,(substr(lowstring(op),0,strlen(ref))<>ref)
(1)  111/       0 :                     
(1)  112/       0 :                     ; 1-arg instruction that's self-patching to remove 0-offset optimization
(1)  113/       0 :                     insn1op	 macro oper,x
(1)  114/       0 :                     	  if (chkop("x","0(") && chkop("x","id(") && chkop("x","slot_rout(") && chkop("x","soundqueue.music0("))
(1)  115/       0 :                     		!oper	x
(1)  116/       0 :                     	  else
(1)  117/       0 :                     		!oper	1+x
(1)  118/       0 :                     		!org	*-1
(1)  119/       0 :                     		!dc.b	0
(1)  120/       0 :                     	  endif
(1)  121/       0 :                     	 endm
(1)  122/       0 :                     
(1)  123/       0 :                     ; 2-arg instruction that's self-patching to remove 0-offset optimization
(1)  124/       0 :                     insn2op	 macro oper,x,y
(1)  125/       0 :                     	  if (chkop("x","0(") && chkop("x","id(") && chkop("x","slot_rout(") && chkop("x","soundqueue.music0("))
(1)  126/       0 :                     		  if (chkop("y","0(") && chkop("y","id(") && chkop("y","slot_rout(") && chkop("y","soundqueue.music0("))
(1)  127/       0 :                     			!oper	x,y
(1)  128/       0 :                     		  else
(1)  129/       0 :                     			!oper	x,1+y
(1)  130/       0 :                     			!org	*-1
(1)  131/       0 :                     			!dc.b	0
(1)  132/       0 :                     		  endif
(1)  133/       0 :                     	  else
(1)  134/       0 :                     		if chkop("y","d")
(1)  135/       0 :                     		  if (chkop("y","0(") && chkop("y","id(") && chkop("y","slot_rout(") && chkop("y","soundqueue.music0("))
(1)  136/       0 :                     start:
(1)  137/       0 :                     			!oper	1+x,y
(1)  138/       0 :                     end:
(1)  139/       0 :                     			!org	start+3
(1)  140/       0 :                     			!dc.b	0
(1)  141/       0 :                     			!org	end
(1)  142/       0 :                     		  else
(1)  143/       0 :                     			!oper	1+x,1+y
(1)  144/       0 :                     			!org	*-3
(1)  145/       0 :                     			!dc.b	0
(1)  146/       0 :                     			!org	*+1
(1)  147/       0 :                     			!dc.b	0
(1)  148/       0 :                     		  endif
(1)  149/       0 :                     		else
(1)  150/       0 :                     			!oper	1+x,y
(1)  151/       0 :                     			!org	*-1
(1)  152/       0 :                     			!dc.b	0
(1)  153/       0 :                     		endif
(1)  154/       0 :                     	  endif
(1)  155/       0 :                     	 endm
(1)  156/       0 :                     
(1)  157/       0 :                     	; instructions that were used with 0(a#) syntax
(1)  158/       0 :                     	; defined to assemble as they originally did
(1)  159/       0 :                     _move	macro
(1)  160/       0 :                     		insn2op move.ATTRIBUTE, ALLARGS
(1)  161/       0 :                     	endm
(1)  162/       0 :                     _add	macro
(1)  163/       0 :                     		insn2op add.ATTRIBUTE, ALLARGS
(1)  164/       0 :                     	endm
(1)  165/       0 :                     _addq	macro
(1)  166/       0 :                     		insn2op addq.ATTRIBUTE, ALLARGS
(1)  167/       0 :                     	endm
(1)  168/       0 :                     _cmp	macro
(1)  169/       0 :                     		insn2op cmp.ATTRIBUTE, ALLARGS
(1)  170/       0 :                     	endm
(1)  171/       0 :                     _cmpi	macro
(1)  172/       0 :                     		insn2op cmpi.ATTRIBUTE, ALLARGS
(1)  173/       0 :                     	endm
(1)  174/       0 :                     _clr	macro
(1)  175/       0 :                     		insn1op clr.ATTRIBUTE, ALLARGS
(1)  176/       0 :                     	endm
(1)  177/       0 :                     _tst	macro
(1)  178/       0 :                     		insn1op tst.ATTRIBUTE, ALLARGS
(1)  179/       0 :                     	endm
(1)  180/       0 :                     
(1)  207/       0 :                     
(1)  208/       0 :                     bit function nBits,1<<(nBits-1)
(1)  209/       0 :                     signmask function val,nBits,-((-(val&bit(nBits)))&bit(nBits))
(1)  210/       0 :                     signextend function val,nBits,(val+signmask(val,nBits))!signmask(val,nBits)
(1)  211/       0 :                     signextendB function val,signextend(val,8)
    6/       0 :                        	include "Macros.asm"
(1)    1/       0 :                     ; ---------------------------------------------------------------------------
(1)    2/       0 :                     ; start the Z80
(1)    3/       0 :                     ; ---------------------------------------------------------------------------
(1)    4/       0 :                     startZ80:       macro
(1)    5/       0 :                     		move.w	#0,(z80_bus_request).l
(1)    6/       0 :                     		endm
(1)    7/       0 :                     
(1)    8/       0 :                     ; ---------------------------------------------------------------------------
(1)    9/       0 :                     ; stop the Z80
(1)   10/       0 :                     ; ---------------------------------------------------------------------------
(1)   11/       0 :                     stopZ80:        macro
(1)   12/       0 :                     		move.w	#$100,(z80_bus_request).l
(1)   13/       0 :                     		endm
(1)   14/       0 :                     
(1)   15/       0 :                     ; ---------------------------------------------------------------------------
(1)   16/       0 :                     ; wait for Z80 to stop
(1)   17/       0 :                     ; ---------------------------------------------------------------------------
(1)   18/       0 :                     
(1)   19/       0 :                     waitZ80:	macro
(1)   20/       0 :                     .wait:		btst	#0,(z80_bus_request).l
(1)   21/       0 :                     		bne.s	.wait
(1)   22/       0 :                     		endm
(1)   23/       0 :                     		
(1)   24/       0 : =$8000              Music_01_Ptr equ (Angel_Island_1_Snd_Data&$FFFF)|$8000
(1)   25/       0 : =$A210              Music_02_Ptr equ (Angel_Island_2_Snd_Data&$FFFF)|$8000  
(1)   26/       0 : =$BF24              Music_03_Ptr equ (Hydrocity_1_Snd_Data&$FFFF)|$8000 
(1)   27/       0 : =$D492              Music_04_Ptr equ (Hydrocity_2_Snd_Data&$FFFF)|$8000 
(1)   28/       0 : =$EE51              Music_05_Ptr equ (Marble_Garden_1_Snd_Data&$FFFF)|$8000 
(1)   29/       0 : =$F468              Music_06_Ptr equ (Marble_Garden_2_Snd_Data&$FFFF)|$8000
(1)   30/       0 : =$8000              Music_07_Ptr equ (Carnival_Night_1_Snd_Data&$FFFF)|$8000
(1)   31/       0 : =$9BBB              Music_08_Ptr equ (Carnival_Night_2_Snd_Data&$FFFF)|$8000
(1)   32/       0 : =$B99E              Music_09_Ptr equ (Flying_Battery_1_Snd_Data&$FFFF)|$8000
(1)   33/       0 : =$BF36              Music_0A_Ptr equ (Flying_Battery_2_Snd_Data&$FFFF)|$8000
(1)   34/       0 : =$C499              Music_0B_Ptr equ (Icecap_1_Snd_Data&$FFFF)|$8000
(1)   35/       0 : =$CA37              Music_0C_Ptr equ (Icecap_2_Snd_Data&$FFFF)|$8000
(1)   36/       0 : =$D04B              Music_0D_Ptr equ (Launch_Base_1_Snd_Data&$FFFF)|$8000
(1)   37/       0 : =$8000              Music_0E_Ptr equ (Launch_Base_2_Snd_Data&$FFFF)|$8000
(1)   38/       0 : =$A52A              Music_0F_Ptr equ (Mushroom_Valley_1_Snd_Data&$FFFF)|$8000
(1)   39/       0 : =$AA9C              Music_10_Ptr equ (Mushroom_Valley_2_Snd_Data&$FFFF)|$8000
(1)   40/       0 : =$B005              Music_11_Ptr equ (Sandopolis_1_Snd_Data&$FFFF)|$8000
(1)   41/       0 : =$B66F              Music_12_Ptr equ (Sandopolis_2_Snd_Data&$FFFF)|$8000
(1)   42/       0 : =$BC62              Music_13_Ptr equ (Lava_Reef_1_Snd_Data&$FFFF)|$8000
(1)   43/       0 : =$D04F              Music_14_Ptr equ (Lava_Reef_2_Snd_Data&$FFFF)|$8000
(1)   44/       0 : =$E642              Music_15_Ptr equ (Sky_Sanctuary_Snd_Data&$FFFF)|$8000
(1)   45/       0 : =$F954              Music_16_Ptr equ (Death_Egg_1_Snd_Data&$FFFF)|$8000
(1)   46/       0 : =$8000              Music_17_Ptr equ (Death_Egg_2_Snd_Data&$FFFF)|$8000
(1)   47/       0 : =$8412              Music_18_Ptr equ (Mini_Boss_Snd_Data&$FFFF)|$8000
(1)   48/       0 : =$8742              Music_19_Ptr equ (Boss_Snd_Data&$FFFF)|$8000
(1)   49/       0 : =$8C3E              Music_1A_Ptr equ (The_Doomsday_Snd_Data&$FFFF)|$8000
(1)   50/       0 : =$9521              Music_1B_Ptr equ (Glowing_Spheres_Bonus_Stage_Snd_Data&$FFFF)|$8000
(1)   51/       0 : =$9A84              Music_1C_Ptr equ (Special_Stage_Snd_Data&$FFFF)|$8000
(1)   52/       0 : =$A31C              Music_1D_Ptr equ (Slot_Machine_Bonus_Stage_Snd_Data&$FFFF)|$8000
(1)   53/       0 : =$AE04              Music_1E_Ptr equ (Gumball_Machine_Bonus_Stage_Snd_Data&$FFFF)|$8000
(1)   54/       0 : =$BB19              Music_1F_Ptr equ (Knuckles_Theme_Snd_Data&$FFFF)|$8000
(1)   55/       0 : =$BE82              Music_20_Ptr equ (Azure_Lake_Snd_Data&$FFFF)|$8000
(1)   56/       0 : =$C988              Music_21_Ptr equ (Balloon_Park_Snd_Data&$FFFF)|$8000
(1)   57/       0 : =$D620              Music_22_Ptr equ (Desert_Palace_Snd_Data&$FFFF)|$8000
(1)   58/       0 : =$8000              Music_23_Ptr equ (Chrome_Gadget_Snd_Data&$FFFF)|$8000
(1)   59/       0 : =$A24B              Music_24_Ptr equ (Endless_Mine_Snd_Data&$FFFF)|$8000
(1)   60/       0 : =$A993              Music_25_Ptr equ (Title_Screen_Snd_Data&$FFFF)|$8000
(1)   61/       0 : =$ADCC              Music_26_Ptr equ (Credits_Snd_Data&$FFFF)|$8000
(1)   62/       0 : =$B83C              Music_27_Ptr equ (Time_Game_Over_Snd_Data&$FFFF)|$8000
(1)   63/       0 : =$BA99              Music_28_Ptr equ (Continue_Snd_Data&$FFFF)|$8000
(1)   64/       0 : =$C27A              Music_29_Ptr equ (Level_Results_Snd_Data&$FFFF)|$8000
(1)   65/       0 : =$C76A              Music_2A_Ptr equ (Extra_Life_Snd_Data&$FFFF)|$8000
(1)   66/       0 : =$C96A              Music_2B_Ptr equ (Got_Emerald_Snd_Data&$FFFF)|$8000
(1)   67/       0 : =$CA38              Music_2C_Ptr equ (Invincibility_Snd_Data&$FFFF)|$8000
(1)   68/       0 : =$CCB8              Music_2D_Ptr equ (Competition_Menu_Snd_Data&$FFFF)|$8000
(1)   69/       0 : =$DEAA              Music_2E_Ptr equ (Super_Sonic_Theme_Snd_Data&$FFFF)|$8000
(1)   70/       0 : =$E95E              Music_2F_Ptr equ (Data_Select_Menu_Snd_Data&$FFFF)|$8000
(1)   71/       0 : =$8000              Music_30_Ptr equ (Final_Boss_Snd_Data&$FFFF)|$8000
(1)   72/       0 : =$8592              Music_31_Ptr equ (Panic_Snd_Data&$FFFF)|$8000
(1)   73/       0 :                     
(1)   74/       0 :                     
(1)   75/       0 :                     
(1)   76/       0 : =$8036              DAC_81_Ptr      equ (DAC_81_Setup&$FFFF)|$8000
(1)   77/       0 : =$803B              DAC_82_Ptr      equ (DAC_82_Setup&$FFFF)|$8000
(1)   78/       0 : =$8040              DAC_83_Ptr      equ (DAC_83_Setup&$FFFF)|$8000
(1)   79/       0 : =$8045              DAC_84_Ptr      equ (DAC_84_Setup&$FFFF)|$8000
(1)   80/       0 : =$804A              DAC_85_Ptr      equ (DAC_85_Setup&$FFFF)|$8000
(1)   81/       0 : =$804F              DAC_86_Ptr      equ (DAC_86_Setup&$FFFF)|$8000
(1)   82/       0 : =$8054              DAC_87_Ptr      equ (DAC_87_Setup&$FFFF)|$8000
(1)   83/       0 : =$8059              DAC_88_Ptr      equ (DAC_88_Setup&$FFFF)|$8000
(1)   84/       0 : =$805E              DAC_89_Ptr      equ (DAC_89_Setup&$FFFF)|$8000
(1)   85/       0 : =$8063              DAC_8A_Ptr      equ (DAC_8A_Setup&$FFFF)|$8000
(1)   86/       0 : =$8068              DAC_8B_Ptr      equ (DAC_8B_Setup&$FFFF)|$8000
(1)   87/       0 : =$806D              DAC_8C_Ptr      equ (DAC_8C_Setup&$FFFF)|$8000
(1)   88/       0 : =$8072              DAC_8D_Ptr      equ (DAC_8D_Setup&$FFFF)|$8000
(1)   89/       0 : =$8077              DAC_8E_Ptr      equ (DAC_8E_Setup&$FFFF)|$8000
(1)   90/       0 : =$807C              DAC_8F_Ptr      equ (DAC_8F_Setup&$FFFF)|$8000
(1)   91/       0 : =$8081              DAC_90_Ptr      equ (DAC_90_Setup&$FFFF)|$8000
(1)   92/       0 : =$8086              DAC_91_Ptr      equ (DAC_91_Setup&$FFFF)|$8000
(1)   93/       0 : =$808B              DAC_92_Ptr      equ (DAC_92_Setup&$FFFF)|$8000
(1)   94/       0 : =$8090              DAC_93_Ptr      equ (DAC_93_Setup&$FFFF)|$8000
(1)   95/       0 : =$8095              DAC_94_Ptr      equ (DAC_94_Setup&$FFFF)|$8000
(1)   96/       0 : =$809A              DAC_95_Ptr      equ (DAC_95_Setup&$FFFF)|$8000
(1)   97/       0 : =$809F              DAC_96_Ptr      equ (DAC_96_Setup&$FFFF)|$8000
(1)   98/       0 : =$80A4              DAC_97_Ptr      equ (DAC_97_Setup&$FFFF)|$8000
(1)   99/       0 : =$80A9              DAC_98_Ptr      equ (DAC_98_Setup&$FFFF)|$8000
(1)  100/       0 : =$80AE              DAC_99_Ptr      equ (DAC_99_Setup&$FFFF)|$8000
(1)  101/       0 : =$80B3              DAC_9A_Ptr      equ (DAC_9A_Setup&$FFFF)|$8000
(1)  102/       0 : =$80B8              DAC_9B_Ptr      equ (DAC_9B_Setup&$FFFF)|$8000
(1)  103/       0 :                     
(1)  104/       0 : =$790               DAC_81_Size           equ (DAC_81_Data_End-DAC_81_Data)  
(1)  105/       0 : =$83BD              DAC_81_Data_Ptr       equ (DAC_81_Data&$FFFF)|$8000 
(1)  106/       0 : =$4C0               DAC_82_To_85_Size     equ (DAC_82_To_85_Data_End-DAC_82_To_85_Data)  
(1)  107/       0 : =$8B4D              DAC_82_To_85_Data_Ptr equ (DAC_82_To_85_Data&$FFFF)|$8000 
(1)  108/       0 : =$300               DAC_86_Size           equ (DAC_86_Data_End-DAC_86_Data)   
(1)  109/       0 : =$80BD              DAC_86_Data_Ptr       equ (DAC_86_Data&$FFFF)|$8000
(1)  110/       0 : =$740               DAC_87_Size           equ (DAC_87_Data_End-DAC_87_Data)   
(1)  111/       0 : =$B8D8              DAC_87_Data_Ptr       equ (DAC_87_Data&$FFFF)|$8000
(1)  112/       0 : =$1250              DAC_88_Size           equ (DAC_88_Data_End-DAC_88_Data)   
(1)  113/       0 : =$9FED              DAC_88_Data_Ptr       equ (DAC_88_Data&$FFFF)|$8000
(1)  114/       0 : =$A20               DAC_89_Size           equ (DAC_89_Data_End-DAC_89_Data)   
(1)  115/       0 : =$C528              DAC_89_Data_Ptr       equ (DAC_89_Data&$FFFF)|$8000
(1)  116/       0 : =$160               DAC_8A_To_8B_Size     equ (DAC_8A_To_8B_Data_End-DAC_8A_To_8B_Data)  
(1)  117/       0 : =$B23D              DAC_8A_To_8B_Data_Ptr equ (DAC_8A_To_8B_Data&$FFFF)|$8000 
(1)  118/       0 : =$6B                DAC_8C_Size           equ (DAC_8C_Data_End-DAC_8C_Data)   
(1)  119/       0 : =$B39D              DAC_8C_Data_Ptr       equ (DAC_8C_Data&$FFFF)|$8000
(1)  120/       0 : =$4D0               DAC_8D_To_8E_Size     equ (DAC_8D_To_8E_Data_End-DAC_8D_To_8E_Data)  
(1)  121/       0 : =$B408              DAC_8D_To_8E_Data_Ptr equ (DAC_8D_To_8E_Data&$FFFF)|$8000 
(1)  122/       0 : =$510               DAC_8F_Size           equ (DAC_8F_Data_End-DAC_8F_Data)   
(1)  123/       0 : =$C018              DAC_8F_Data_Ptr       equ (DAC_8F_Data&$FFFF)|$8000
(1)  124/       0 : =$650               DAC_90_To_93_Size     equ (DAC_90_To_93_Data_End-DAC_90_To_93_Data)  
(1)  125/       0 : =$999D              DAC_90_To_93_Data_Ptr equ (DAC_90_To_93_Data&$FFFF)|$8000 
(1)  126/       0 : =$990               DAC_94_To_97_Size     equ (DAC_94_To_97_Data_End-DAC_94_To_97_Data)  
(1)  127/       0 : =$900D              DAC_94_To_97_Data_Ptr equ (DAC_94_To_97_Data&$FFFF)|$8000 
(1)  128/       0 : =$D1F               DAC_98_To_9A_Size     equ (DAC_98_To_9A_Data_End-DAC_98_To_9A_Data)  
(1)  129/       0 : =$CF48              DAC_98_To_9A_Data_Ptr equ (DAC_98_To_9A_Data&$FFFF)|$8000 
(1)  130/       0 : =$169D              DAC_9B_Size           equ (DAC_9B_Data_End-DAC_9B_Data)   
(1)  131/       0 : =$DC67              DAC_9B_Data_Ptr       equ (DAC_9B_Data&$FFFF)|$8000  
    7/       0 :                        
    8/       0 : =$3                    SonicDriverVer			= 3
    9/       0 :                        
   10/       0 : =$1                    use_s2_samples			= 1
   11/       0 :                        
   12/       0 : =$1                    use_s3d_samples			= 1
   13/       0 :                        
   14/       0 : =$1                    use_s3_samples			= 1
   15/       0 :                        
   16/       0 : =$1                    use_sk_samples			= 1
   17/       0 :                        		include		"_smps2asm_inc.asm"
(1)    1/       0 :                     ; ===========================================================================
(1)    2/       0 :                     ; Created by Flamewing, based on S1SMPS2ASM version 1.1 by Marc Gordon (AKA Cinossu)
(1)    3/       0 :                     ; ===========================================================================
(1)    4/       0 :                     ; Permission to use, copy, modify, and/or distribute this software for any
(1)    5/       0 :                     ; purpose with or without fee is hereby granted.
(1)    6/       0 :                     ;
(1)    7/       0 :                     ; THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
(1)    8/       0 :                     ; WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
(1)    9/       0 :                     ; MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
(1)   10/       0 :                     ; ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
(1)   11/       0 :                     ; WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
(1)   12/       0 :                     ; ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
(1)   13/       0 :                     ; OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
(1)   14/       0 :                     ; ===========================================================================
(1)   15/       0 :                     
(1)   16/       0 : =$1                 SMPS2ASMVer	= 1
(1)   17/       0 :                     
(1)   18/       0 :                     ; PSG conversion to S3/S&K/S3D drivers require a tone shift of 12 semi-tones.
(1)   19/       0 : =$C                 psgdelta	EQU 12
(1)   20/       0 :                     ; ---------------------------------------------------------------------------
(1)   21/       0 :                     ; Standard Octave Pitch Equates
(1)   22/       0 : =$88..$B8           	enum smpsPitch10lo=$88,smpsPitch09lo=$94,smpsPitch08lo=$A0,smpsPitch07lo=$AC,smpsPitch06lo=$B8
(1)   23/       0 : =$C4..$F4           	enum smpsPitch05lo=$C4,smpsPitch04lo=$D0,smpsPitch03lo=$DC,smpsPitch02lo=$E8,smpsPitch01lo=$F4
(1)   24/       0 : =$0..$30            	enum smpsPitch00=$00,smpsPitch01hi=$0C,smpsPitch02hi=$18,smpsPitch03hi=$24,smpsPitch04hi=$30
(1)   25/       0 : =$3C..$6C           	enum smpsPitch05hi=$3C,smpsPitch06hi=$48,smpsPitch07hi=$54,smpsPitch08hi=$60,smpsPitch09hi=$6C
(1)   26/       0 : =$78                	enum smpsPitch10hi=$78
(1)   27/       0 :                     ; ---------------------------------------------------------------------------
(1)   28/       0 :                     ; Note Equates
(1)   29/       0 : =$80..$8F           	enum nRst=$80+0,nC0,nCs0,nD0,nEb0,nE0,nF0,nFs0,nG0,nAb0,nA0,nBb0,nB0,nC1,nCs1,nD1
(1)   30/       0 : =$90..$9F           	enum nEb1=nD1+1,nE1,nF1,nFs1,nG1,nAb1,nA1,nBb1,nB1,nC2,nCs2,nD2,nEb2,nE2,nF2,nFs2
(1)   31/       0 : =$A0..$AF           	enum nG2=nFs2+1,nAb2,nA2,nBb2,nB2,nC3,nCs3,nD3,nEb3,nE3,nF3,nFs3,nG3,nAb3,nA3,nBb3
(1)   32/       0 : =$B0..$BF           	enum nB3=nBb3+1,nC4,nCs4,nD4,nEb4,nE4,nF4,nFs4,nG4,nAb4,nA4,nBb4,nB4,nC5,nCs5,nD5
(1)   33/       0 : =$C0..$CF           	enum nEb5=nD5+1,nE5,nF5,nFs5,nG5,nAb5,nA5,nBb5,nB5,nC6,nCs6,nD6,nEb6,nE6,nF6,nFs6
(1)   34/       0 : =$D0..$DF           	enum nG6=nFs6+1,nAb6,nA6,nBb6,nB6,nC7,nCs7,nD7,nEb7,nE7,nF7,nFs7,nG7,nAb7,nA7,nBb7
(1)   35/       0 :                     ; SMPS2ASM uses nMaxPSG for songs from S1/S2 drivers.
(1)   36/       0 :                     ; nMaxPSG1 and nMaxPSG2 are used only for songs from S3/S&K/S3D drivers.
(1)   37/       0 :                     ; The use of psgdelta is intended to undo the effects of PSGPitchConvert
(1)   38/       0 :                     ; and ensure that the ending note is indeed the maximum PSG frequency.
(1)   44/       0 : =$C7                nMaxPSG				EQU nBb6-psgdelta
(1)   45/       0 : =$D3                nMaxPSG1			EQU nBb6
(1)   46/       0 : =$D4                nMaxPSG2			EQU nB6
(1)   48/       0 :                     	
(1)   49/       0 :                     
(1)   50/       0 :                     ; ---------------------------------------------------------------------------
(1)   51/       0 :                     ; PSG volume envelope equates
(1)   52/       0 : =$1..$6             		enum fTone_01=$01,fTone_02,fTone_03,fTone_04,fTone_05,fTone_06
(1)   53/       0 : =$7..$C             		enum fTone_07=fTone_06+1,fTone_08,fTone_09,fTone_0A,fTone_0B,fTone_0C
(1)   54/       0 : =$D                 		enum fTone_0D=fTone_0C+1
(1)   55/       0 :                     ; ---------------------------------------------------------------------------
(1)   56/       0 :                     ; DAC Equates
(1)   57/       0 : =$81..$87           			enum dCrackerKick=$81,dCrackerSnare,dCrackerTimpaniHi,dCrackerTimpaniMid,dCrackerTimpaniLow,dCrackerLessgo,dCrackerHaa
(1)   58/       0 :                     ; ---------------------------------------------------------------------------
(1)   59/       0 :                     ; Channel IDs for SFX
(1)   60/       0 : =$80                cPSG1				EQU $80
(1)   61/       0 : =$A0                cPSG2				EQU $A0
(1)   62/       0 : =$C0                cPSG3				EQU $C0
(1)   63/       0 : =$E0                cNoise				EQU $E0	; Not for use in S3/S&K/S3D
(1)   64/       0 : =$2                 cFM3				EQU $02
(1)   65/       0 : =$4                 cFM4				EQU $04
(1)   66/       0 : =$5                 cFM5				EQU $05
(1)   67/       0 : =$6                 cFM6				EQU $06	; Only in S3/S&K/S3D, overrides DAC
(1)   68/       0 :                     ; ---------------------------------------------------------------------------
(1)   69/       0 :                     ; Conversion macros and functions
(1)   70/       0 :                     
(1)   71/       0 :                     conv0To256  function n,((n==0)<<8)|n
(1)   72/       0 :                     s2TempotoS1 function n,(((768-n)>>1)/(256-n))&$FF
(1)   73/       0 :                     s2TempotoS3 function n,($100-((n==0)|n))&$FF
(1)   74/       0 :                     s1TempotoS2 function n,((((conv0To256(n)-1)<<8)+(conv0To256(n)>>1))/conv0To256(n))&$FF
(1)   75/       0 :                     s1TempotoS3 function n,s2TempotoS3(s1TempotoS2(n))
(1)   76/       0 :                     s3TempotoS1 function n,s2TempotoS1(s2TempotoS3(n))
(1)   77/       0 :                     s3TempotoS2 function n,s2TempotoS3(n)
(1)   78/       0 :                     
(1)   79/       0 :                     convertMainTempoMod macro mod
(1)   80/       0 :                     	if ((SourceDriver>=3)&&(SonicDriverVer>=3))||(SonicDriverVer==SourceDriver)
(1)   81/       0 :                     		dc.b	mod
(1)   82/       0 :                     	elseif SourceDriver==1
(1)   83/       0 :                     		if mod==1
(1)   84/       0 :                     			fatal "Invalid main tempo of 1 in song from Sonic 1"
(1)   85/       0 :                     		endif
(1)   86/       0 :                     		if SonicDriverVer==2
(1)   87/       0 :                     			dc.b	s1TempotoS2(mod)
(1)   88/       0 :                     		else;if SonicDriverVer>=3
(1)   89/       0 :                     			dc.b	s1TempotoS3(mod)
(1)   90/       0 :                     		endif
(1)   91/       0 :                     	elseif SourceDriver==2
(1)   92/       0 :                     		if mod==0
(1)   93/       0 :                     			fatal "Invalid main tempo of 0 in song from Sonic 2"
(1)   94/       0 :                     		endif
(1)   95/       0 :                     		if SonicDriverVer==1
(1)   96/       0 :                     			dc.b	s2TempotoS1(mod)
(1)   97/       0 :                     		else;if SonicDriverVer>=3
(1)   98/       0 :                     			dc.b	s2TempotoS3(mod)
(1)   99/       0 :                     		endif
(1)  100/       0 :                     	else;if SourceDriver>=3
(1)  101/       0 :                     		if mod==0
(1)  102/       0 :                     			message "Performing approximate conversion of Sonic 3 main tempo modifier of 0"
(1)  103/       0 :                     		endif
(1)  104/       0 :                     		if SonicDriverVer==1
(1)  105/       0 :                     			dc.b	s3TempotoS1(mod)
(1)  106/       0 :                     		else;if SonicDriverVer==2
(1)  107/       0 :                     			dc.b	s3TempotoS2(mod)
(1)  108/       0 :                     		endif
(1)  109/       0 :                     	endif
(1)  110/       0 :                     	endm
(1)  111/       0 :                     
(1)  112/       0 :                     ; PSG conversion to S3/S&K/S3D drivers require a tone shift of 12 semi-tones.
(1)  113/       0 :                     PSGPitchConvert macro pitch
(1)  114/       0 :                     	if (SonicDriverVer>=3)&&(SourceDriver<3)
(1)  115/       0 :                     		dc.b	(pitch+psgdelta)&$FF
(1)  116/       0 :                     	elseif (SonicDriverVer<3)&&(SourceDriver>=3)
(1)  117/       0 :                     		dc.b	(pitch-psgdelta)&$FF
(1)  118/       0 :                     	else
(1)  119/       0 :                     		dc.b	pitch
(1)  120/       0 :                     	endif
(1)  121/       0 :                     	endm
(1)  122/       0 :                     
(1)  123/       0 :                     CheckedChannelPointer macro loc
(1)  124/       0 :                     	if SonicDriverVer<>1
(1)  125/       0 :                     		dc.w	z80_ptr(loc)
(1)  126/       0 :                     	else
(1)  127/       0 :                     		if MOMPASS==2
(1)  128/       0 :                     			if loc<songStart
(1)  129/       0 :                     				fatal "Tracks for Sonic 1 songs must come after the start of the song"
(1)  130/       0 :                     			endif
(1)  131/       0 :                     		endif
(1)  132/       0 :                     		dc.w	loc-songStart
(1)  133/       0 :                     	endif
(1)  134/       0 :                     	endm
(1)  135/       0 :                     ; ---------------------------------------------------------------------------
(1)  136/       0 :                     ; Header Macros
(1)  137/       0 :                     smpsHeaderStartSong macro ver, sourcesmps2asmver
(1)  138/       0 :                     
(1)  139/       0 :                     SourceDriver set ver
(1)  140/       0 :                     
(1)  141/       0 :                     	if ("sourcesmps2asmver"<>"")
(1)  142/       0 :                     SourceSMPS2ASM set sourcesmps2asmver
(1)  143/       0 :                     	else
(1)  144/       0 :                     SourceSMPS2ASM set 0
(1)  145/       0 :                     	endif
(1)  146/       0 :                     
(1)  147/       0 :                     songStart set *
(1)  148/       0 :                     
(1)  149/       0 :                     	if MOMPASS==2
(1)  150/       0 :                     	if SMPS2ASMVer < SourceSMPS2ASM
(1)  151/       0 :                     	message "Song at 0x\{songStart} was made for a newer version of SMPS2ASM (this is version \{SMPS2ASMVer}, but song wants at least version \{SourceSMPS2ASM})."
(1)  152/       0 :                     	endif
(1)  153/       0 :                     	endif
(1)  154/       0 :                     
(1)  155/       0 :                     	endm
(1)  156/       0 :                     
(1)  157/       0 :                     smpsHeaderVoiceNull macro
(1)  158/       0 :                     	if songStart<>*
(1)  159/       0 :                     		fatal "Missing smpsHeaderStartSong"
(1)  160/       0 :                     	endif
(1)  161/       0 :                     	dc.w	$0000
(1)  162/       0 :                     	endm
(1)  163/       0 :                     
(1)  164/       0 :                     ; Header - Set up Voice Location
(1)  165/       0 :                     ; Common to music and SFX
(1)  166/       0 :                     smpsHeaderVoice macro loc
(1)  167/       0 :                     	if songStart<>*
(1)  168/       0 :                     		fatal "Missing smpsHeaderStartSong"
(1)  169/       0 :                     	endif
(1)  170/       0 :                     	if SonicDriverVer<>1
(1)  171/       0 :                     		dc.w	z80_ptr(loc)
(1)  172/       0 :                     	else
(1)  173/       0 :                     		if MOMPASS==2
(1)  174/       0 :                     		if loc<songStart
(1)  175/       0 :                     			fatal "Voice banks for Sonic 1 songs must come after the song"
(1)  176/       0 :                     		endif
(1)  177/       0 :                     		endif
(1)  178/       0 :                     		dc.w	loc-songStart
(1)  179/       0 :                     	endif
(1)  180/       0 :                     	endm
(1)  181/       0 :                     
(1)  182/       0 :                     ; Header - Set up Voice Location as S3's Universal Voice Bank
(1)  183/       0 :                     ; Common to music and SFX
(1)  184/       0 :                     smpsHeaderVoiceUVB macro
(1)  185/       0 :                     	if songStart<>*
(1)  186/       0 :                     		fatal "Missing smpsHeaderStartSong"
(1)  187/       0 :                     	endif
(1)  188/       0 :                     	if SonicDriverVer>=5
(1)  189/       0 :                     		dc.w	z80_ptr(z80_UniVoiceBank)
(1)  190/       0 :                     	elseif SonicDriverVer>=3
(1)  191/       0 :                     		dc.w	little_endian(z80_UniVoiceBank)
(1)  192/       0 :                     	else
(1)  193/       0 :                     		fatal "Universal Voice Bank does not exist in Sonic 1 or Sonic 2 drivers"
(1)  194/       0 :                     	endif
(1)  195/       0 :                     	endm
(1)  196/       0 :                     
(1)  197/       0 :                     ; Header macros for music (not for SFX)
(1)  198/       0 :                     ; Header - Set up Channel Usage
(1)  199/       0 :                     smpsHeaderChan macro fm,psg
(1)  200/       0 :                     	dc.b	fm,psg
(1)  201/       0 :                     	endm
(1)  202/       0 :                     
(1)  203/       0 :                     ; Header - Set up Tempo
(1)  204/       0 :                     smpsHeaderTempo macro div,mod
(1)  205/       0 :                     	dc.b	div
(1)  206/       0 :                     	convertMainTempoMod mod
(1)  207/       0 :                     	endm
(1)  208/       0 :                     
(1)  209/       0 :                     ; Header - Set up DAC Channel
(1)  210/       0 :                     smpsHeaderDAC macro loc,pitch,vol
(1)  211/       0 :                     	CheckedChannelPointer loc
(1)  212/       0 :                     	if ("pitch"<>"")
(1)  213/       0 :                     		dc.b	pitch
(1)  214/       0 :                     		if ("vol"<>"")
(1)  215/       0 :                     			dc.b	vol
(1)  216/       0 :                     		else
(1)  217/       0 :                     			dc.b	$00
(1)  218/       0 :                     		endif
(1)  219/       0 :                     	else
(1)  220/       0 :                     		dc.w	$00
(1)  221/       0 :                     	endif
(1)  222/       0 :                     	endm
(1)  223/       0 :                     
(1)  224/       0 :                     ; Header - Set up FM Channel
(1)  225/       0 :                     smpsHeaderFM macro loc,pitch,vol
(1)  226/       0 :                     	CheckedChannelPointer loc
(1)  227/       0 :                     	dc.b	pitch,vol
(1)  228/       0 :                     	endm
(1)  229/       0 :                     
(1)  230/       0 :                     ; Header - Set up PSG Channel
(1)  231/       0 :                     smpsHeaderPSG macro loc,pitch,vol,mod,voice
(1)  232/       0 :                     	CheckedChannelPointer loc
(1)  233/       0 :                     	PSGPitchConvert pitch
(1)  234/       0 :                     	dc.b	vol,mod,voice
(1)  235/       0 :                     	endm
(1)  236/       0 :                     
(1)  237/       0 :                     ; Header macros for SFX (not for music)
(1)  238/       0 :                     ; Header - Set up Tempo
(1)  239/       0 :                     smpsHeaderTempoSFX macro div
(1)  240/       0 :                     	dc.b	div
(1)  241/       0 :                     	endm
(1)  242/       0 :                     
(1)  243/       0 :                     ; Header - Set up Channel Usage
(1)  244/       0 :                     smpsHeaderChanSFX macro chan
(1)  245/       0 :                     	dc.b	chan
(1)  246/       0 :                     	endm
(1)  247/       0 :                     
(1)  248/       0 :                     ; Header - Set up FM Channel
(1)  249/       0 :                     smpsHeaderSFXChannel macro chanid,loc,pitch,vol
(1)  250/       0 :                     	if (SonicDriverVer>=3)&&(chanid==cNoise)
(1)  251/       0 :                     		fatal "Using channel ID of cNoise ($E0) in Sonic 3 driver is dangerous. Fix the song so that it turns into a noise channel instead."
(1)  252/       0 :                     	elseif (SonicDriverVer<3)&&(chanid==cFM6)
(1)  253/       0 :                     		fatal "Using channel ID of FM6 ($06) in Sonic 1 or Sonic 2 drivers is unsupported. Change it to another channel."
(1)  254/       0 :                     	endif
(1)  255/       0 :                     	dc.b	$80,chanid
(1)  256/       0 :                     	CheckedChannelPointer loc
(1)  257/       0 :                     	if (chanid&$80)<>0
(1)  258/       0 :                     		PSGPitchConvert pitch
(1)  259/       0 :                     	else
(1)  260/       0 :                     		dc.b	pitch
(1)  261/       0 :                     	endif
(1)  262/       0 :                     	dc.b	vol
(1)  263/       0 :                     	endm
(1)  264/       0 :                     ; ---------------------------------------------------------------------------
(1)  265/       0 :                     ; Co-ord Flag Macros and Equates
(1)  266/       0 :                     ; E0xx - Panning, AMS, FMS
(1)  267/       0 :                     smpsPan macro direction,amsfms
(1)  268/       0 :                     panNone set $00
(1)  269/       0 :                     panRight set $40
(1)  270/       0 :                     panLeft set $80
(1)  271/       0 :                     panCentre set $C0
(1)  272/       0 :                     panCenter set $C0 ; silly Americans :U
(1)  273/       0 :                     	dc.b $E0,direction+amsfms
(1)  274/       0 :                     	endm
(1)  275/       0 :                     
(1)  276/       0 :                     ; E1xx - Set channel detune to val
(1)  277/       0 :                     smpsDetune macro val
(1)  278/       0 :                     	dc.b	$E1,val
(1)  279/       0 :                     	endm
(1)  280/       0 :                     
(1)  281/       0 :                     ; E2xx - Useless
(1)  282/       0 :                     smpsNop macro val
(1)  283/       0 :                     	if SonicDriverVer<3
(1)  284/       0 :                     		dc.b	$E2,val
(1)  285/       0 :                     	endif
(1)  286/       0 :                     	endm
(1)  287/       0 :                     
(1)  288/       0 :                     ; Return (used after smpsCall)
(1)  289/       0 :                     smpsReturn macro val
(1)  290/       0 :                     	if SonicDriverVer>=3
(1)  291/       0 :                     		dc.b	$F9
(1)  292/       0 :                     	else
(1)  293/       0 :                     		dc.b	$E3
(1)  294/       0 :                     	endif
(1)  295/       0 :                     	endm
(1)  296/       0 :                     
(1)  297/       0 :                     ; Fade in previous song (ie. 1-Up)
(1)  298/       0 :                     smpsFade macro val
(1)  299/       0 :                     	if SonicDriverVer>=3
(1)  300/       0 :                     		dc.b	$E2
(1)  301/       0 :                     		if ("val"<>"")
(1)  302/       0 :                     			dc.b	val
(1)  303/       0 :                     		else
(1)  304/       0 :                     			dc.b	$FF
(1)  305/       0 :                     		endif
(1)  306/       0 :                     		if SourceDriver<3
(1)  307/       0 :                     			smpsStop
(1)  308/       0 :                     		endif
(1)  309/       0 :                     	elseif (SourceDriver>=3) && ("val"<>"") && ("val"<>"$FF")
(1)  310/       0 :                     		; This is one of those weird S3+ "fades" that we don't need
(1)  311/       0 :                     	else
(1)  312/       0 :                     		dc.b	$E4
(1)  313/       0 :                     	endif
(1)  314/       0 :                     	endm
(1)  315/       0 :                     
(1)  316/       0 :                     ; E5xx - Set channel tempo divider to xx
(1)  317/       0 :                     smpsChanTempoDiv macro val
(1)  318/       0 :                     	if SonicDriverVer>=5
(1)  319/       0 :                     		; New flag unique to Flamewing's modified S&K driver
(1)  320/       0 :                     		dc.b	$FF,$08,val
(1)  321/       0 :                     	elseif SonicDriverVer==3
(1)  322/       0 :                     		fatal "Coord. Flag to set tempo divider of a single channel does not exist in S3 driver. Use Flamewing's modified S&K sound driver instead."
(1)  323/       0 :                     	else
(1)  324/       0 :                     		dc.b	$E5,val
(1)  325/       0 :                     	endif
(1)  326/       0 :                     	endm
(1)  327/       0 :                     
(1)  328/       0 :                     ; E6xx - Alter Volume by xx
(1)  329/       0 :                     smpsAlterVol macro val
(1)  330/       0 :                     	dc.b	$E6,val
(1)  331/       0 :                     	endm
(1)  332/       0 :                     
(1)  333/       0 :                     ; E7 - Prevent attack of next note
(1)  334/       0 : =$E7                smpsNoAttack	EQU $E7
(1)  335/       0 :                     
(1)  336/       0 :                     ; E8xx - Set note fill to xx
(1)  337/       0 :                     smpsNoteFill macro val
(1)  338/       0 :                     	if (SonicDriverVer>=5)&&(SourceDriver<3)
(1)  339/       0 :                     		; Unique to Flamewing's modified driver
(1)  340/       0 :                     		dc.b	$FF,$0A,val
(1)  341/       0 :                     	else
(1)  342/       0 :                     		if (SonicDriverVer>=3)&&(SourceDriver<3)
(1)  343/       0 :                     			message "Note fill will not work as intended unless you divide the fill value by the tempo divider or complain to Flamewing to add an appropriate coordination flag for it."
(1)  344/       0 :                     		elseif (SonicDriverVer<3)&&(SourceDriver>=3)
(1)  345/       0 :                     			message "Note fill will not work as intended unless you multiply the fill value by the tempo divider or complain to Flamewing to add an appropriate coordination flag for it."
(1)  346/       0 :                     		endif
(1)  347/       0 :                     		dc.b	$E8,val
(1)  348/       0 :                     	endif
(1)  349/       0 :                     	endm
(1)  350/       0 :                     
(1)  351/       0 :                     ; Add xx to channel pitch
(1)  352/       0 :                     smpsChangeTransposition macro val
(1)  353/       0 :                     	if SonicDriverVer>=3
(1)  354/       0 :                     		dc.b	$FB,val
(1)  355/       0 :                     	else
(1)  356/       0 :                     		dc.b	$E9,val
(1)  357/       0 :                     	endif
(1)  358/       0 :                     	endm
(1)  359/       0 :                     
(1)  360/       0 :                     ; Set music tempo modifier to xx
(1)  361/       0 :                     smpsSetTempoMod macro mod
(1)  362/       0 :                     	if SonicDriverVer>=3
(1)  363/       0 :                     		dc.b	$FF,$00
(1)  364/       0 :                     	else
(1)  365/       0 :                     		dc.b	$EA
(1)  366/       0 :                     	endif
(1)  367/       0 :                     	convertMainTempoMod mod
(1)  368/       0 :                     	endm
(1)  369/       0 :                     
(1)  370/       0 :                     ; Set music tempo divider to xx
(1)  371/       0 :                     smpsSetTempoDiv macro val
(1)  372/       0 :                     	if SonicDriverVer>=3
(1)  373/       0 :                     		dc.b	$FF,$04,val
(1)  374/       0 :                     	else
(1)  375/       0 :                     		dc.b	$EB,val
(1)  376/       0 :                     	endif
(1)  377/       0 :                     	endm
(1)  378/       0 :                     
(1)  379/       0 :                     ; ECxx - Set Volume to xx
(1)  380/       0 :                     smpsSetVol macro val
(1)  381/       0 :                     	if SonicDriverVer>=3
(1)  382/       0 :                     		dc.b	$E4,val
(1)  383/       0 :                     	else
(1)  384/       0 :                     		fatal "Coord. Flag to set volume (instead of volume attenuation) does not exist in S1 or S2 drivers. Complain to Flamewing to add it."
(1)  385/       0 :                     	endif
(1)  386/       0 :                     	endm
(1)  387/       0 :                     
(1)  388/       0 :                     ; Works on all drivers
(1)  389/       0 :                     smpsPSGAlterVol macro vol
(1)  390/       0 :                     	dc.b	$EC,vol
(1)  391/       0 :                     	endm
(1)  392/       0 :                     
(1)  393/       0 :                     ; Clears pushing sound flag in S1
(1)  394/       0 :                     smpsClearPush macro
(1)  395/       0 :                     	if SonicDriverVer==1
(1)  396/       0 :                     		dc.b	$ED
(1)  397/       0 :                     	else
(1)  398/       0 :                     		fatal "Coord. Flag to clear S1 push block flag does not exist in S2 or S3 drivers. Complain to Flamewing to add it."
(1)  399/       0 :                     	endif
(1)  400/       0 :                     	endm
(1)  401/       0 :                     
(1)  402/       0 :                     ; Stops special SFX (S1 only) and restarts overridden music track
(1)  403/       0 :                     smpsStopSpecial macro
(1)  404/       0 :                     	if SonicDriverVer==1
(1)  405/       0 :                     		dc.b	$EE
(1)  406/       0 :                     	else
(1)  407/       0 :                     		message "Coord. Flag to stop special SFX does not exist in S2 or S3 drivers. Complain to Flamewing to add it. With adequate caution, smpsStop can do this job."
(1)  408/       0 :                     		smpsStop
(1)  409/       0 :                     	endif
(1)  410/       0 :                     	endm
(1)  411/       0 :                     
(1)  412/       0 :                     ; EFxx[yy] - Set Voice of FM channel to xx; xx < 0 means yy present
(1)  413/       0 :                     smpsFMvoice macro voice,songID
(1)  414/       0 :                     	if (SonicDriverVer>=3)&&("songID"<>"")
(1)  415/       0 :                     		dc.b	$EF,voice|$80,songID+$81
(1)  416/       0 :                     	else
(1)  417/       0 :                     		dc.b	$EF,voice
(1)  418/       0 :                     	endif
(1)  419/       0 :                     	endm
(1)  420/       0 :                     
(1)  421/       0 :                     ; F0wwxxyyzz - Modulation - ww: wait time - xx: modulation speed - yy: change per step - zz: number of steps
(1)  422/       0 :                     smpsModSet macro wait,speed,change,step
(1)  423/       0 :                     	dc.b	$F0
(1)  424/       0 :                     	if (SonicDriverVer>=3)&&(SourceDriver<3)
(1)  425/       0 :                     		dc.b	wait+1,speed,change,((step+1) * speed) & $FF
(1)  426/       0 :                     	elseif (SonicDriverVer<3)&&(SourceDriver>=3)
(1)  427/       0 :                     		dc.b	wait-1,speed,change,conv0To256(step)/conv0To256(speed)-1
(1)  428/       0 :                     	else
(1)  429/       0 :                     		dc.b	wait,speed,change,step
(1)  430/       0 :                     	endif
(1)  431/       0 :                     	;dc.b	speed,change,step
(1)  432/       0 :                     	endm
(1)  433/       0 :                     
(1)  434/       0 :                     ; Turn on Modulation
(1)  435/       0 :                     smpsModOn macro type
(1)  436/       0 :                     	if SonicDriverVer>=3
(1)  437/       0 :                     		if "type"<>""
(1)  438/       0 :                     			dc.b	$F4,type
(1)  439/       0 :                     		else
(1)  440/       0 :                     			dc.b	$F4,$80
(1)  441/       0 :                     		endif
(1)  442/       0 :                     	else
(1)  443/       0 :                     		dc.b	$F1
(1)  444/       0 :                     	endif
(1)  445/       0 :                     	endm
(1)  446/       0 :                     
(1)  447/       0 :                     ; F2 - End of channel
(1)  448/       0 :                     smpsStop macro
(1)  449/       0 :                     	dc.b	$F2
(1)  450/       0 :                     	endm
(1)  451/       0 :                     
(1)  452/       0 :                     ; F3xx - PSG waveform to xx
(1)  453/       0 :                     smpsPSGform macro form
(1)  454/       0 :                     	dc.b	$F3,form
(1)  455/       0 :                     	endm
(1)  456/       0 :                     
(1)  457/       0 :                     ; Turn off Modulation
(1)  458/       0 :                     smpsModOff macro
(1)  459/       0 :                     	if SonicDriverVer>=3
(1)  460/       0 :                     		dc.b	$FA
(1)  461/       0 :                     	else
(1)  462/       0 :                     		dc.b	$F4
(1)  463/       0 :                     	endif
(1)  464/       0 :                     	endm
(1)  465/       0 :                     
(1)  466/       0 :                     ; F5xx - PSG voice to xx
(1)  467/       0 :                     smpsPSGvoice macro voice
(1)  468/       0 :                     	dc.b	$F5,voice
(1)  469/       0 :                     	endm
(1)  470/       0 :                     
(1)  471/       0 :                     ; F6xxxx - Jump to xxxx
(1)  472/       0 :                     smpsJump macro loc
(1)  473/       0 :                     	dc.b	$F6
(1)  474/       0 :                     	if SonicDriverVer<>1
(1)  475/       0 :                     		dc.w	z80_ptr(loc)
(1)  476/       0 :                     	else
(1)  477/       0 :                     		dc.w	loc-*-1
(1)  478/       0 :                     	endif
(1)  479/       0 :                     	endm
(1)  480/       0 :                     
(1)  481/       0 :                     ; F7xxyyzzzz - Loop back to zzzz yy times, xx being the loop index for loop recursion fixing
(1)  482/       0 :                     smpsLoop macro index,loops,loc
(1)  483/       0 :                     	dc.b	$F7
(1)  484/       0 :                     	dc.b	index,loops
(1)  485/       0 :                     	if SonicDriverVer<>1
(1)  486/       0 :                     		dc.w	z80_ptr(loc)
(1)  487/       0 :                     	else
(1)  488/       0 :                     		dc.w	loc-*-1
(1)  489/       0 :                     	endif
(1)  490/       0 :                     	endm
(1)  491/       0 :                     
(1)  492/       0 :                     ; F8xxxx - Call pattern at xxxx, saving return point
(1)  493/       0 :                     smpsCall macro loc
(1)  494/       0 :                     	dc.b	$F8
(1)  495/       0 :                     	if SonicDriverVer<>1
(1)  496/       0 :                     		dc.w	z80_ptr(loc)
(1)  497/       0 :                     	else
(1)  498/       0 :                     		dc.w	loc-*-1
(1)  499/       0 :                     	endif
(1)  500/       0 :                     	endm
(1)  501/       0 :                     ; ---------------------------------------------------------------------------
(1)  502/       0 :                     ; Alter Volume
(1)  503/       0 :                     smpsFMAlterVol macro val1,val2
(1)  504/       0 :                     	if (SonicDriverVer>=3)&&("val2"<>"")
(1)  505/       0 :                     		dc.b	$E5,val1,val2
(1)  506/       0 :                     	else
(1)  507/       0 :                     		dc.b	$E6,val1
(1)  508/       0 :                     	endif
(1)  509/       0 :                     	endm
(1)  510/       0 :                     
(1)  511/       0 :                     ; S3/S&K/S3D-only coordination flags
(1)  513/       0 :                     ; Silences FM channel then stops as per smpsStop
(1)  514/       0 :                     smpsStopFM macro
(1)  515/       0 :                     	dc.b	$E3
(1)  516/       0 :                     	endm
(1)  517/       0 :                     
(1)  518/       0 :                     ; Spindash Rev
(1)  519/       0 :                     smpsSpindashRev macro
(1)  520/       0 :                     	dc.b	$E9
(1)  521/       0 :                     	endm
(1)  522/       0 :                     
(1)  523/       0 :                     smpsPlayDACSample macro sample
(1)  524/       0 :                     	dc.b	$EA,(sample&$7F)
(1)  525/       0 :                     	endm
(1)  526/       0 :                     
(1)  527/       0 :                     smpsConditionalJump macro index,loc
(1)  528/       0 :                     	dc.b	$EB
(1)  529/       0 :                     	dc.b	index
(1)  530/       0 :                     	dc.w	z80_ptr(loc)
(1)  531/       0 :                     	endm
(1)  532/       0 :                     
(1)  533/       0 :                     ; Set note values to xx-$40
(1)  534/       0 :                     smpsSetNote macro val
(1)  535/       0 :                     	dc.b	$ED,val
(1)  536/       0 :                     	endm
(1)  537/       0 :                     
(1)  538/       0 :                     smpsFMICommand macro reg,val
(1)  539/       0 :                     	dc.b	$EE,reg,val
(1)  540/       0 :                     	endm
(1)  541/       0 :                     
(1)  542/       0 :                     ; Set Modulation
(1)  543/       0 :                     smpsModChange2 macro fmmod,psgmod
(1)  544/       0 :                     	dc.b	$F1,fmmod,psgmod
(1)  545/       0 :                     	endm
(1)  546/       0 :                     
(1)  547/       0 :                     ; Set Modulation
(1)  548/       0 :                     smpsModChange macro val
(1)  549/       0 :                     	dc.b	$F4,val
(1)  550/       0 :                     	endm
(1)  551/       0 :                     
(1)  552/       0 :                     ; FCxxxx - Jump to xxxx
(1)  553/       0 :                     smpsContinuousLoop macro loc
(1)  554/       0 :                     	dc.b	$FC
(1)  555/       0 :                     	dc.w	z80_ptr(loc)
(1)  556/       0 :                     	endm
(1)  557/       0 :                     
(1)  558/       0 :                     smpsAlternateSMPS macro flag
(1)  559/       0 :                     	dc.b	$FD,flag
(1)  560/       0 :                     	endm
(1)  561/       0 :                     
(1)  562/       0 :                     smpsFM3SpecialMode macro ind1,ind2,ind3,ind4
(1)  563/       0 :                     	dc.b	$FE,ind1,ind2,ind3,ind4
(1)  564/       0 :                     	endm
(1)  565/       0 :                     
(1)  566/       0 :                     smpsPlaySound macro index
(1)  567/       0 :                     	if SonicDriverVer>=5
(1)  568/       0 :                     		message "smpsPlaySound only plays SFX in Flamedriver; use smpsPlayMusic to play music or fade effects."
(1)  569/       0 :                     	endif
(1)  570/       0 :                     	dc.b	$FF,$01,index
(1)  571/       0 :                     	endm
(1)  572/       0 :                     
(1)  573/       0 :                     smpsHaltMusic macro flag
(1)  574/       0 :                     	dc.b	$FF,$02,flag
(1)  575/       0 :                     	endm
(1)  576/       0 :                     
(1)  577/       0 :                     smpsCopyData macro data,len
(1)  578/       0 :                     	fatal "Coord. Flag to copy data should not be used. Complain to Flamewing if any music uses it."
(1)  579/       0 :                     	dc.b	$FF,$03
(1)  580/       0 :                     	dc.w	little_endian(data)
(1)  581/       0 :                     	dc.b	len
(1)  582/       0 :                     	endm
(1)  583/       0 :                     
(1)  584/       0 :                     smpsSSGEG macro op1,op2,op3,op4
(1)  585/       0 :                     	dc.b	$FF,$05,op1,op3,op2,op4
(1)  586/       0 :                     	endm
(1)  587/       0 :                     
(1)  588/       0 :                     smpsFMVolEnv macro tone,mask
(1)  589/       0 :                     	dc.b	$FF,$06,tone,mask
(1)  590/       0 :                     	endm
(1)  591/       0 :                     
(1)  592/       0 :                     smpsResetSpindashRev macro val
(1)  593/       0 :                     	dc.b	$FF,$07
(1)  594/       0 :                     	endm
(1)  595/       0 :                     
(1)  596/       0 :                     	; Flags ported from other drivers.
(1)  614/       0 :                     
(1)  616/       0 :                     ; ---------------------------------------------------------------------------
(1)  617/       0 :                     ; S1/S2 only coordination flag
(1)  618/       0 :                     ; Sets D1L to maximum volume (minimum attenuation) and RR to maximum for operators 3 and 4 of FM1
(1)  619/       0 :                     smpsMaxRelRate macro
(1)  620/       0 :                     	if SonicDriverVer>=3
(1)  621/       0 :                     		; Emulate it in S3/S&K/S3D driver
(1)  622/       0 :                     		smpsFMICommand $88,$0F
(1)  623/       0 :                     		smpsFMICommand $8C,$0F
(1)  624/       0 :                     	else
(1)  625/       0 :                     		dc.b	$F9
(1)  626/       0 :                     	endif
(1)  627/       0 :                     	endm
(1)  628/       0 :                     ; ---------------------------------------------------------------------------
(1)  629/       0 :                     ; Backwards compatibility
(1)  630/       0 :                     smpsAlterNote macro
(1)  631/       0 :                     	smpsDetune	ALLARGS
(1)  632/       0 :                     	endm
(1)  633/       0 :                     
(1)  634/       0 :                     smpsAlterPitch macro
(1)  635/       0 :                     	smpsChangeTransposition	ALLARGS
(1)  636/       0 :                     	endm
(1)  637/       0 :                     
(1)  638/       0 :                     smpsFMFlutter macro
(1)  639/       0 :                     	smpsFMVolEnv	ALLARGS
(1)  640/       0 :                     	endm
(1)  641/       0 :                     
(1)  642/       0 :                     smpsWeirdD1LRR macro
(1)  643/       0 :                     	smpsMaxRelRate ALLARGS
(1)  644/       0 :                     	endm
(1)  645/       0 :                     
(1)  646/       0 :                     smpsSetvoice macro
(1)  647/       0 :                     	smpsFMvoice ALLARGS
(1)  648/       0 :                     	endm
(1)  649/       0 :                     ; ---------------------------------------------------------------------------
(1)  650/       0 :                     ; Macros for FM instruments
(1)  651/       0 :                     ; Voices - Feedback
(1)  652/       0 :                     smpsVcFeedback macro val
(1)  653/       0 :                     vcFeedback set val
(1)  654/       0 :                     	endm
(1)  655/       0 :                     
(1)  656/       0 :                     ; Voices - Algorithm
(1)  657/       0 :                     smpsVcAlgorithm macro val
(1)  658/       0 :                     vcAlgorithm set val
(1)  659/       0 :                     	endm
(1)  660/       0 :                     
(1)  661/       0 :                     smpsVcUnusedBits macro val,d1r1,d1r2,d1r3,d1r4
(1)  662/       0 :                     vcUnusedBits set val
(1)  663/       0 :                     	if ("d1r1"<>"")&&("d1r2"<>"")&&("d1r3"<>"")&&("d1r4"<>"")
(1)  664/       0 :                     vcD1R1Unk set d1r1<<5
(1)  665/       0 :                     vcD1R2Unk set d1r2<<5
(1)  666/       0 :                     vcD1R3Unk set d1r3<<5
(1)  667/       0 :                     vcD1R4Unk set d1r4<<5
(1)  668/       0 :                     	else
(1)  669/       0 :                     vcD1R1Unk set 0
(1)  670/       0 :                     vcD1R2Unk set 0
(1)  671/       0 :                     vcD1R3Unk set 0
(1)  672/       0 :                     vcD1R4Unk set 0
(1)  673/       0 :                     	endif
(1)  674/       0 :                     	endm
(1)  675/       0 :                     
(1)  676/       0 :                     ; Voices - Detune
(1)  677/       0 :                     smpsVcDetune macro op1,op2,op3,op4
(1)  678/       0 :                     vcDT1 set op1
(1)  679/       0 :                     vcDT2 set op2
(1)  680/       0 :                     vcDT3 set op3
(1)  681/       0 :                     vcDT4 set op4
(1)  682/       0 :                     	endm
(1)  683/       0 :                     
(1)  684/       0 :                     ; Voices - Coarse-Frequency
(1)  685/       0 :                     smpsVcCoarseFreq macro op1,op2,op3,op4
(1)  686/       0 :                     vcCF1 set op1
(1)  687/       0 :                     vcCF2 set op2
(1)  688/       0 :                     vcCF3 set op3
(1)  689/       0 :                     vcCF4 set op4
(1)  690/       0 :                     	endm
(1)  691/       0 :                     
(1)  692/       0 :                     ; Voices - Rate Scale
(1)  693/       0 :                     smpsVcRateScale macro op1,op2,op3,op4
(1)  694/       0 :                     vcRS1 set op1
(1)  695/       0 :                     vcRS2 set op2
(1)  696/       0 :                     vcRS3 set op3
(1)  697/       0 :                     vcRS4 set op4
(1)  698/       0 :                     	endm
(1)  699/       0 :                     
(1)  700/       0 :                     ; Voices - Attack Rate
(1)  701/       0 :                     smpsVcAttackRate macro op1,op2,op3,op4
(1)  702/       0 :                     vcAR1 set op1
(1)  703/       0 :                     vcAR2 set op2
(1)  704/       0 :                     vcAR3 set op3
(1)  705/       0 :                     vcAR4 set op4
(1)  706/       0 :                     	endm
(1)  707/       0 :                     
(1)  708/       0 :                     ; Voices - Amplitude Modulation
(1)  709/       0 :                     ; The original SMPS2ASM erroneously assumed the 6th and 7th bits
(1)  710/       0 :                     ; were the Amplitude Modulation.
(1)  711/       0 :                     ; According to several docs, however, it's actually the high bit.
(1)  712/       0 :                     smpsVcAmpMod macro op1,op2,op3,op4
(1)  713/       0 :                     	if SourceSMPS2ASM==0
(1)  714/       0 :                     vcAM1 set op1<<5
(1)  715/       0 :                     vcAM2 set op2<<5
(1)  716/       0 :                     vcAM3 set op3<<5
(1)  717/       0 :                     vcAM4 set op4<<5
(1)  718/       0 :                     	else
(1)  719/       0 :                     vcAM1 set op1<<7
(1)  720/       0 :                     vcAM2 set op2<<7
(1)  721/       0 :                     vcAM3 set op3<<7
(1)  722/       0 :                     vcAM4 set op4<<7
(1)  723/       0 :                     	endif
(1)  724/       0 :                     	endm
(1)  725/       0 :                     
(1)  726/       0 :                     ; Voices - First Decay Rate
(1)  727/       0 :                     smpsVcDecayRate1 macro op1,op2,op3,op4
(1)  728/       0 :                     vcD1R1 set op1
(1)  729/       0 :                     vcD1R2 set op2
(1)  730/       0 :                     vcD1R3 set op3
(1)  731/       0 :                     vcD1R4 set op4
(1)  732/       0 :                     	endm
(1)  733/       0 :                     
(1)  734/       0 :                     ; Voices - Second Decay Rate
(1)  735/       0 :                     smpsVcDecayRate2 macro op1,op2,op3,op4
(1)  736/       0 :                     vcD2R1 set op1
(1)  737/       0 :                     vcD2R2 set op2
(1)  738/       0 :                     vcD2R3 set op3
(1)  739/       0 :                     vcD2R4 set op4
(1)  740/       0 :                     	endm
(1)  741/       0 :                     
(1)  742/       0 :                     ; Voices - Decay Level
(1)  743/       0 :                     smpsVcDecayLevel macro op1,op2,op3,op4
(1)  744/       0 :                     vcDL1 set op1
(1)  745/       0 :                     vcDL2 set op2
(1)  746/       0 :                     vcDL3 set op3
(1)  747/       0 :                     vcDL4 set op4
(1)  748/       0 :                     	endm
(1)  749/       0 :                     
(1)  750/       0 :                     ; Voices - Release Rate
(1)  751/       0 :                     smpsVcReleaseRate macro op1,op2,op3,op4
(1)  752/       0 :                     vcRR1 set op1
(1)  753/       0 :                     vcRR2 set op2
(1)  754/       0 :                     vcRR3 set op3
(1)  755/       0 :                     vcRR4 set op4
(1)  756/       0 :                     	endm
(1)  757/       0 :                     
(1)  758/       0 :                     ; Voices - Total Level
(1)  759/       0 :                     ; The original SMPS2ASM decides TL high bits automatically,
(1)  760/       0 :                     ; but later versions leave it up to the user.
(1)  761/       0 :                     ; Alternatively, if we're converting an SMPS 68k song to SMPS Z80,
(1)  762/       0 :                     ; then we *want* the TL bits to match the algorithm, because SMPS 68k
(1)  763/       0 :                     ; prefers the algorithm over the TL bits, ignoring the latter, while
(1)  764/       0 :                     ; SMPS Z80 does the opposite.
(1)  765/       0 :                     ; Unfortunately, there's nothing we can do if we're trying to convert
(1)  766/       0 :                     ; an SMPS Z80 song to SMPS 68k. It will ignore the bits no matter
(1)  767/       0 :                     ; what we do, so we just print a warning.
(1)  768/       0 :                     smpsVcTotalLevel macro op1,op2,op3,op4
(1)  769/       0 :                     vcTL1 set op1
(1)  770/       0 :                     vcTL2 set op2
(1)  771/       0 :                     vcTL3 set op3
(1)  772/       0 :                     vcTL4 set op4
(1)  773/       0 :                     	dc.b	(vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)  774/       0 :                     ;   0     1     2     3     4     5     6     7
(1)  775/       0 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)  776/       0 :                     	if SourceSMPS2ASM==0
(1)  777/       0 :                     vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)  778/       0 :                     vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)  779/       0 :                     vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)  780/       0 :                     vcTLMask1 set $80
(1)  781/       0 :                     	else
(1)  782/       0 :                     vcTLMask4 set 0
(1)  783/       0 :                     vcTLMask3 set 0
(1)  784/       0 :                     vcTLMask2 set 0
(1)  785/       0 :                     vcTLMask1 set 0
(1)  786/       0 :                     	endif
(1)  787/       0 :                     
(1)  788/       0 :                     	if (SonicDriverVer>=3)&&(SourceDriver<3)
(1)  789/       0 :                     vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)  790/       0 :                     vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)  791/       0 :                     vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)  792/       0 :                     vcTLMask1 set $80
(1)  793/       0 :                     vcTL1 set vcTL1&$7F
(1)  794/       0 :                     vcTL2 set vcTL2&$7F
(1)  795/       0 :                     vcTL3 set vcTL3&$7F
(1)  796/       0 :                     vcTL4 set vcTL4&$7F
(1)  797/       0 :                     	elseif (SonicDriverVer<3)&&(SourceDriver>=3)&&(((vcTL1&$80)<>$80)||((vcTL2&$80)<>((vcAlgorithm>=5)<<7))||((vcTL3&$80)<>((vcAlgorithm>=4)<<7))||((vcTL4&$80)<>((vcAlgorithm==7)<<7)))
(1)  798/       0 :                     		if MOMPASS==2
(1)  799/       0 :                     			message "Voice at 0x\{*} has TL bits that do not match its algorithm setting. This voice will not work in S1/S2 drivers."
(1)  800/       0 :                     		endif
(1)  801/       0 :                     	endif
(1)  802/       0 :                     
(1)  803/       0 :                     	if SonicDriverVer==2
(1)  804/       0 :                     		dc.b	(vcDT4<<4)+vcCF4       ,(vcDT2<<4)+vcCF2       ,(vcDT3<<4)+vcCF3       ,(vcDT1<<4)+vcCF1
(1)  805/       0 :                     		dc.b	(vcRS4<<6)+vcAR4       ,(vcRS2<<6)+vcAR2       ,(vcRS3<<6)+vcAR3       ,(vcRS1<<6)+vcAR1
(1)  806/       0 :                     		dc.b	vcAM4|vcD1R4|vcD1R4Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)  807/       0 :                     		dc.b	vcD2R4                 ,vcD2R2                 ,vcD2R3                 ,vcD2R1
(1)  808/       0 :                     		dc.b	(vcDL4<<4)+vcRR4       ,(vcDL2<<4)+vcRR2       ,(vcDL3<<4)+vcRR3       ,(vcDL1<<4)+vcRR1
(1)  809/       0 :                     		dc.b	vcTL4|vcTLMask4        ,vcTL2|vcTLMask2        ,vcTL3|vcTLMask3        ,vcTL1|vcTLMask1
(1)  810/       0 :                     	else
(1)  811/       0 :                     		dc.b	(vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)  812/       0 :                     		dc.b	(vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)  813/       0 :                     		dc.b	vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)  814/       0 :                     		dc.b	vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)  815/       0 :                     		dc.b	(vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)  816/       0 :                     		dc.b	vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)  817/       0 :                     	endif
(1)  818/       0 :                     	endm
(1)  819/       0 :                     
(1)  820/       0 :                     
   18/       0 :                        
   19/       0 :                        ;		MUSIC STARTS HERE
   20/       0 :                        
   21/       0 : (MACRO)                	align	$B0000
   21/       0 :  (MACRO-2)                     cnop 0,$B0000
   21/       0 :   (MACRO-3)                            org (*-1+($B0000)-((*-1+(-(0)))#($B0000)))
   21/   B0000 :                                                !org (*-1+($B0000)-((*-1+(-(0)))#($B0000)))
   22/   B0000 :                        
   23/   B0000 :                        
   24/   B0000 :                        
   25/   B0000 :                        ; Z80 Bank $16
   26/   B0000 :                            ;            align   $8000
   27/   B0000 :                        Angel_Island_1_Snd_Data:                                       ; Offset_0x0B0000
   28/   B0000 :                                        binclude  "sounds\aiz_1.snd"
   29/   B2210 :                        Angel_Island_2_Snd_Data:                                       ; Offset_0x0B2210
   30/   B2210 :                                        binclude  "sounds\aiz_2.snd"
   31/   B3F24 :                        Hydrocity_1_Snd_Data:                                          ; Offset_0x0B3F24
   32/   B3F24 :                                        binclude  "sounds\hz_1.snd"                
   33/   B5492 :                        Hydrocity_2_Snd_Data:                                          ; Offset_0x0B5492
   34/   B5492 :                                        binclude  "sounds\hz_2.snd"
   35/   B6E51 :                        Marble_Garden_1_Snd_Data:                                      ; Offset_0x0B6E51
   36/   B6E51 :                                        binclude  "sounds\mgz_1.snd"  
   37/   B7468 :                        Marble_Garden_2_Snd_Data:                                      ; Offset_0x0B7468
   38/   B7468 :                                        binclude  "sounds\mgz_2.snd"
   39/   B8000 :                        ; Z80 Bank $17    
   40/   B8000 : (MACRO)                                align   $8000
   40/   B8000 :  (MACRO-2)                     cnop 0,$8000
   40/   B8000 :   (MACRO-3)                            org (*-1+($8000)-((*-1+(-(0)))#($8000)))
   40/   B8000 :                                                !org (*-1+($8000)-((*-1+(-(0)))#($8000)))
   41/   B8000 :                        Carnival_Night_1_Snd_Data:                                     ; Offset_0x0B8000
   42/   B8000 :                                        binclude  "sounds\cnz_1.snd"
   43/   B9BBB :                        Carnival_Night_2_Snd_Data:                                     ; Offset_0x0B9BBB
   44/   B9BBB :                                        binclude  "sounds\cnz_2.snd"                                                             
   45/   BB99E :                        Flying_Battery_1_Snd_Data:                                     ; Offset_0x0BB99E
   46/   BB99E :                                        binclude  "sounds\fbz_1.snd" 
   47/   BBF36 :                        Flying_Battery_2_Snd_Data:                                     ; Offset_0x0BBF36
   48/   BBF36 :                                        binclude  "sounds\fbz_2.snd"                                               
   49/   BC499 :                        Icecap_1_Snd_Data:                                             ; Offset_0x0BC499
   50/   BC499 :                                        binclude  "sounds\iz_1.snd"
   51/   BCA37 :                        Icecap_2_Snd_Data:                                             ; Offset_0x0BCA37
   52/   BCA37 :                                        binclude  "sounds\iz_2.snd"   
   53/   BD04B :                        Launch_Base_1_Snd_Data:                                        ; Offset_0x0BD04B
   54/   BD04B :                                        binclude  "sounds\lbz_1.snd"   
   55/   BFAB4 :                        ;-------------------------------------------------------------------------------
   56/   BFAB4 :                        
   57/   BFAB4 :                        ;-------------------------------------------------------------------------------                
   58/   BFAB4 :                        ; Z80 Bank $18
   59/   BFAB4 : (MACRO)                                align   $8000
   59/   BFAB4 :  (MACRO-2)                     cnop 0,$8000
   59/   BFAB4 :   (MACRO-3)                            org (*-1+($8000)-((*-1+(-(0)))#($8000)))
   59/   C0000 :                                                !org (*-1+($8000)-((*-1+(-(0)))#($8000)))
   60/   C0000 :                        Launch_Base_2_Snd_Data:                                        ; Offset_0x0C0000
   61/   C0000 :                                        binclude  "sounds\lbz_2.snd"                                              
   62/   C252A :                        Mushroom_Valley_1_Snd_Data:                                    ; Offset_0x0C252A
   63/   C252A :                                        binclude  "sounds\mvz_1.snd" 
   64/   C2A9C :                        Mushroom_Valley_2_Snd_Data:                                    ; Offset_0x0C2A9C
   65/   C2A9C :                                        binclude  "sounds\mvz_2.snd" 
   66/   C3005 :                        Sandopolis_1_Snd_Data:                                         ; Offset_0x0C3005
   67/   C3005 :                                        binclude  "sounds\sz_1.snd" 
   68/   C366F :                        Sandopolis_2_Snd_Data:                                         ; Offset_0x0C366F
   69/   C366F :                                        binclude  "sounds\sz_2.snd" 
   70/   C3C62 :                        Lava_Reef_1_Snd_Data:                                          ; Offset_0x0C3C62
   71/   C3C62 :                                        binclude  "sounds\lrz_1.snd" 
   72/   C504F :                        Lava_Reef_2_Snd_Data:                                          ; Offset_0x0C504F
   73/   C504F :                                        binclude  "sounds\lrz_2.snd" 
   74/   C6642 :                        Sky_Sanctuary_Snd_Data:                                        ; Offset_0x0C6642
   75/   C6642 :                                        binclude  "sounds\ssz.snd" 
   76/   C7954 :                        Death_Egg_1_Snd_Data:                                          ; Offset_0x0C7954
   77/   C7954 :                                        binclude  "sounds\dez_1.snd" 
   78/   C8000 :                        ; Z80 Bank $19  
   79/   C8000 : (MACRO)                                align   $8000
   79/   C8000 :  (MACRO-2)                     cnop 0,$8000
   79/   C8000 :   (MACRO-3)                            org (*-1+($8000)-((*-1+(-(0)))#($8000)))
   79/   C8000 :                                                !org (*-1+($8000)-((*-1+(-(0)))#($8000)))
   80/   C8000 :                        Death_Egg_2_Snd_Data:                                          ; Offset_0x0C8000
   81/   C8000 :                                        binclude  "sounds\dez_2.snd"
   82/   C8412 :                        Mini_Boss_Snd_Data:                                            ; Offset_0x0C8412
   83/   C8412 :                                        binclude  "sounds\miniboss.snd"
   84/   C8742 :                        Boss_Snd_Data:                                                 ; Offset_0x0C8742
   85/   C8742 :                                        binclude  "sounds\boss.snd"
   86/   C8C3E :                        The_Doomsday_Snd_Data:                                         ; Offset_0x0C8C3E
   87/   C8C3E :                                        binclude  "sounds\tdz.snd"
   88/   C9521 :                        Glowing_Spheres_Bonus_Stage_Snd_Data:                          ; Offset_0x0C9521
   89/   C9521 :                                        binclude  "sounds\gs_bs.snd"
   90/   C9A84 :                        Special_Stage_Snd_Data:                                        ; Offset_0x0C9A84
   91/   C9A84 :                                        binclude  "sounds\ss.snd"
   92/   CA31C :                        Slot_Machine_Bonus_Stage_Snd_Data:                             ; Offset_0x0CA31C
   93/   CA31C :                                        binclude  "sounds\sm_bs.snd"
   94/   CAE04 :                        Gumball_Machine_Bonus_Stage_Snd_Data:                          ; Offset_0x0CAE04
   95/   CAE04 :                                        binclude  "sounds\gm_bs.snd"
   96/   CBB19 :                        Knuckles_Theme_Snd_Data:                                       ; Offset_0x0CBB19
   97/   CBB19 :                                        binclude  "sounds\knuckles.snd"
   98/   CBE82 :                        Azure_Lake_Snd_Data:                                           ; Offset_0x0CBE82
   99/   CBE82 :                                        binclude  "sounds\alz.snd"
  100/   CC988 :                        Balloon_Park_Snd_Data:                                         ; Offset_0x0CC988
  101/   CC988 :                                        binclude  "sounds\bpz.snd"
  102/   CD620 :                        Desert_Palace_Snd_Data:                                        ; Offset_0x0CD620
  103/   CD620 :                                        binclude  "sounds\dpz.snd"
  104/   CF962 :                        ;-------------------------------------------------------------------------------                
  105/   CF962 :                        Asm_Code_3:                                                    ; Offset_0x0CF962
  106/   CF962 : 0A                                     dc.b    $0A
  107/   CF963 : 2020 2020 2020 2020                    dc.b    '                Lea     ScrollBBase+($b*64)+(27*2),A1', $0D, $0A
         CF96B : 2020 2020 2020 2020
         CF973 : 4C65 6120 2020 2020
         CF97B : 5363 726F 6C6C 4242
         CF983 : 6173 652B 2824 622A
         CF98B : 3634 292B 2832 372A
         CF993 : 3229 2C41 310D 0A   
  108/   CF99A : 2020 2020 2020 2020                    dc.b    '                Jsr     Word_2GVRAM    ', $0D, $0A    
         CF9A2 : 2020 2020 2020 2020
         CF9AA : 4A73 7220 2020 2020
         CF9B2 : 576F 7264 5F32 4756
         CF9BA : 5241 4D20 2020 200D 0A
  109/   CF9C3 : 2020 2020 2020 2020                    dc.b    '                Move.w  #AsciiOffset+CHR_Palette0+CHR_HighPri,D5 ; Color is different if in impulse.', $0D, $0A, $0D, $0A
         CF9CB : 2020 2020 2020 2020
         CF9D3 : 4D6F 7665 2E77 2020
         CF9DB : 2341 7363 6969 4F66
         CF9E3 : 6673 6574 2B43 4852
         CF9EB : 5F50 616C 6574 7465
         CF9F3 : 302B 4348 525F 4869
         CF9FB : 6768 5072 692C 4435
         CFA03 : 203B 2043 6F6C 6F72
         CFA0B : 2069 7320 6469 6666
         CFA13 : 6572 656E 7420 6966
         CFA1B : 2069 6E20 696D 7075
         CFA23 : 6C73 652E 0D0A 0D0A   
  110/   CFA2B : 2020 2020 2020 2020                    dc.b    '                Bra     @DoneSeperators', $0D, $0A, $0D, $0A
         CFA33 : 2020 2020 2020 2020
         CFA3B : 4272 6120 2020 2020
         CFA43 : 4044 6F6E 6553 6570
         CFA4B : 6572 6174 6F72 730D
         CFA53 : 0A0D 0A               
  111/   CFA56 : 404E 6F74 496D 7075                    dc.b    '@NotImpulse:', $0D, $0A
         CFA5E : 6C73 653A 0D0A      
  112/   CFA64 : 2020 2020 2020 2020                    dc.b    "                Move.w  #AsciiOffset+CHR_Palette3+CHR_HighPri+'.',D0        ; Place decimal points and '/' seperators.", $0D, $0A
         CFA6C : 2020 2020 2020 2020
         CFA74 : 4D6F 7665 2E77 2020
         CFA7C : 2341 7363 6969 4F66
         CFA84 : 6673 6574 2B43 4852
         CFA8C : 5F50 616C 6574 7465
         CFA94 : 332B 4348 525F 4869
         CFA9C : 6768 5072 692B 272E
         CFAA4 : 272C 4430 2020 2020
         CFAAC : 2020 2020 3B20 506C
         CFAB4 : 6163 6520 6465 6369
         CFABC : 6D61 6C20 706F 696E
         CFAC4 : 7473 2061 6E64 2027
         CFACC : 2F27 2073 6570 6572
         CFAD4 : 6174 6F72 732E 0D0A   
  113/   CFADC : 2020 2020 2020 2020                    dc.b    '                Lea     ScrollBBase+($5*64)+(28*2),A1           ', $0D, $0A           
         CFAE4 : 2020 2020 2020 2020
         CFAEC : 4C65 6120 2020 2020
         CFAF4 : 5363 726F 6C6C 4242
         CFAFC : 6173 652B 2824 352A
         CFB04 : 3634 292B 2832 382A
         CFB0C : 3229 2C41 3120 2020
         CFB14 : 2020 2020 2020 2020
         CFB1C : 0D0A                  
  114/   CFB1E : 2020 2020 2020 2020                    dc.b    '                Jsr     Word_2GVRAM     ', $0D, $0A     
         CFB26 : 2020 2020 2020 2020
         CFB2E : 4A73 7220 2020 2020
         CFB36 : 576F 7264 5F32 4756
         CFB3E : 5241 4D20 2020 2020
         CFB46 : 0D0A                  
  115/   CFB48 : 2020 2020 2020 2020                    dc.b    '                Lea     ScrollBBase+($7*64)+(27*2),A1', $0D, $0A
         CFB50 : 2020 2020 2020 2020
         CFB58 : 4C65 6120 2020 2020
         CFB60 : 5363 726F 6C6C 4242
         CFB68 : 6173 652B 2824 372A
         CFB70 : 3634 292B 2832 372A
         CFB78 : 3229 2C41 310D 0A   
  116/   CFB7F : 2020 2020 2020 2020                    dc.b    '                Jsr     Word_2GVRAM     ', $0D, $0A     
         CFB87 : 2020 2020 2020 2020
         CFB8F : 4A73 7220 2020 2020
         CFB97 : 576F 7264 5F32 4756
         CFB9F : 5241 4D20 2020 2020
         CFBA7 : 0D0A                  
  117/   CFBA9 : 2020 2020 2020 2020                    dc.b    '                Lea     ScrollBBase+($d*64)+(28*2),A1', $0D, $0A
         CFBB1 : 2020 2020 2020 2020
         CFBB9 : 4C65 6120 2020 2020
         CFBC1 : 5363 726F 6C6C 4242
         CFBC9 : 6173 652B 2824 642A
         CFBD1 : 3634 292B 2832 382A
         CFBD9 : 3229 2C41 310D 0A   
  118/   CFBE0 : 2020 2020 2020 2020                    dc.b    '                Jsr     Word_2GVRAM     ', $0D, $0A     
         CFBE8 : 2020 2020 2020 2020
         CFBF0 : 4A73 7220 2020 2020
         CFBF8 : 576F 7264 5F32 4756
         CFC00 : 5241 4D20 2020 2020
         CFC08 : 0D0A                  
  119/   CFC0A : 2020 2020 2020 2020                    dc.b    "                Move.w  #AsciiOffset+CHR_Palette3+CHR_HighPri+'/',D0  ", $0D, $0A  
         CFC12 : 2020 2020 2020 2020
         CFC1A : 4D6F 7665 2E77 2020
         CFC22 : 2341 7363 6969 4F66
         CFC2A : 6673 6574 2B43 4852
         CFC32 : 5F50 616C 6574 7465
         CFC3A : 332B 4348 525F 4869
         CFC42 : 6768 5072 692B 272F
         CFC4A : 272C 4430 2020 0D0A   
  120/   CFC52 : 2020 2020 2020 2020                    dc.b    '                Lea     ScrollBBase+($9*64)+(27*2),A1', $0D, $0A
         CFC5A : 2020 2020 2020 2020
         CFC62 : 4C65 6120 2020 2020
         CFC6A : 5363 726F 6C6C 4242
         CFC72 : 6173 652B 2824 392A
         CFC7A : 3634 292B 2832 372A
         CFC82 : 3229 2C41 310D 0A   
  121/   CFC89 : 2020 2020 2020 2020                    dc.b    '                Jsr     Word_2GVRAM    ', $0D, $0A    
         CFC91 : 2020 2020 2020 2020
         CFC99 : 4A73 7220 2020 2020
         CFCA1 : 576F 7264 5F32 4756
         CFCA9 : 5241 4D20 2020 200D 0A
  122/   CFCB2 : 2020 2020 2020 2020                    dc.b    '                Lea     ScrollBBase+($b*64)+(27*2),A1', $0D, $0A
         CFCBA : 2020 2020 2020 2020
         CFCC2 : 4C65 6120 2020 2020
         CFCCA : 5363 726F 6C6C 4242
         CFCD2 : 6173 652B 2824 622A
         CFCDA : 3634 292B 2832 372A
         CFCE2 : 3229 2C41 310D 0A   
  123/   CFCE9 : 2020 2020 2020 2020                    dc.b    '                Jsr     Word_2GVRAM    ', $0D, $0A    
         CFCF1 : 2020 2020 2020 2020
         CFCF9 : 4A73 7220 2020 2020
         CFD01 : 576F 7264 5F32 4756
         CFD09 : 5241 4D20 2020 200D 0A
  124/   CFD12 : 2020 2020 2020 2020                    dc.b    '                Move.w  #AsciiOffset+CHR_Palette3+CHR_HighPri,D5 ; Set up character color.', $0D, $0A, $0D, $0A
         CFD1A : 2020 2020 2020 2020
         CFD22 : 4D6F 7665 2E77 2020
         CFD2A : 2341 7363 6969 4F66
         CFD32 : 6673 6574 2B43 4852
         CFD3A : 5F50 616C 6574 7465
         CFD42 : 332B 4348 525F 4869
         CFD4A : 6768 5072 692C 4435
         CFD52 : 203B 2053 6574 2075
         CFD5A : 7020 6368 6172 6163
         CFD62 : 7465 7220 636F 6C6F
         CFD6A : 722E 0D0A 0D0A      
  125/   CFD70 : 4044 6F6E 6553 6570                    dc.b    '@DoneSeperators:', $0D, $0A
         CFD78 : 6572 6174 6F72 733A
         CFD80 : 0D0A                  
  126/   CFD82 : 2020 2020 2020 2020                    dc.b    '                Move.w  CurrentDistance,D7                      ; Get whole part of DISTANCE.', $0D, $0A
         CFD8A : 2020 2020 2020 2020
         CFD92 : 4D6F 7665 2E77 2020
         CFD9A : 4375 7272 656E 7444
         CFDA2 : 6973 7461 6E63 652C
         CFDAA : 4437 2020 2020 2020
         CFDB2 : 2020 2020 2020 2020
         CFDBA : 2020 2020 2020 2020
         CFDC2 : 3B20 4765 7420 7768
         CFDCA : 6F6C 6520 7061 7274
         CFDD2 : 206F 6620 4449 5354
         CFDDA : 414E 4345 2E0D 0A   
  127/   CFDE1 : 2020 2020 2020 2020                    dc.b    '                Moveq   #3,D6                                   ; Three characters.', $0D, $0A
         CFDE9 : 2020 2020 2020 2020
         CFDF1 : 4D6F 7665 7120 2020
         CFDF9 : 2333 2C44 3620 2020
         CFE01 : 2020 2020 2020 2020
         CFE09 : 2020 2020 2020 2020
         CFE11 : 2020 2020 2020 2020
         CFE19 : 2020 2020 2020 2020
         CFE21 : 3B20 5468 7265 6520
         CFE29 : 6368 6172 6163 7465
         CFE31 : 7273 2E0D 0A         
  128/   CFE36 : 2020 2020 2020 2020                    dc.b    "                Moveq   #'$',D2                                 ; Lead with a spaces.", $0D, $0A
         CFE3E : 2020 2020 2020 2020
         CFE46 : 4D6F 7665 7120 2020
         CFE4E : 2327 2427 2C44 3220
         CFE56 : 2020 2020 2020 2020
         CFE5E : 2020 2020 2020 2020
         CFE66 : 2020 2020 2020 2020
         CFE6E : 2020 2020 2020 2020
         CFE76 : 3B20 4C65 6164 2077
         CFE7E : 6974 6820 6120 7370
         CFE86 : 6163 6573 2E0D 0A   
  129/   CFE8D : 2020 2020 2020 2020                    dc.b    '                Lea     ScrollBBase+($5*64)+(25*2),A1           ; Screen destination.', $0D, $0A
         CFE95 : 2020 2020 2020 2020
         CFE9D : 4C65 6120 2020 2020
         CFEA5 : 5363 726F 6C6C 4242
         CFEAD : 6173 652B 2824 352A
         CFEB5 : 3634 292B 2832 352A
         CFEBD : 3229 2C41 3120 2020
         CFEC5 : 2020 2020 2020 2020
         CFECD : 3B20 5363 7265 656E
         CFED5 : 2064 6573 7469 6E61
         CFEDD : 7469 6F6E 2E0D 0A   
  130/   CFEE4 : 2020 2020 2020 2020                    dc.b    '                Jsr     PrintVal                                ; Print it.', $0D, $0A
         CFEEC : 2020 2020 2020 2020
         CFEF4 : 4A73 7220 2020 2020
         CFEFC : 5072 696E 7456 616C
         CFF04 : 2020 2020 2020 2020
         CFF0C : 2020 2020 2020 2020
         CFF14 : 2020 2020 2020 2020
         CFF1C : 2020 2020 2020 2020
         CFF24 : 3B20 5072 696E 7420
         CFF2C : 6974 2E0D 0A         
  131/   CFF31 : 2020 2020 2020 2020                    dc.b    '                Move.w  CurrentDistance+2,D7                    ; Get fractional part of DISTANCE.', $0D, $0A
         CFF39 : 2020 2020 2020 2020
         CFF41 : 4D6F 7665 2E77 2020
         CFF49 : 4375 7272 656E 7444
         CFF51 : 6973 7461 6E63 652B
         CFF59 : 322C 4437 2020 2020
         CFF61 : 2020 2020 2020 2020
         CFF69 : 2020 2020 2020 2020
         CFF71 : 3B20 4765 7420 6672
         CFF79 : 6163 7469 6F6E 616C
         CFF81 : 2070 6172 7420 6F66
         CFF89 : 2044 4953 5441 4E43
         CFF91 : 452E 0D0A            
  132/   CFF95 : 2020 2020 2020 2020                    dc.b    '                Moveq   #2,D6                                   ; Two digits.', $0D, $0A
         CFF9D : 2020 2020 2020 2020
         CFFA5 : 4D6F 7665 7120 2020
         CFFAD : 2332 2C44 3620 2020
         CFFB5 : 2020 2020 2020 2020
         CFFBD : 2020 2020 2020 2020
         CFFC5 : 2020 2020 2020 2020
         CFFCD : 2020 2020 2020 2020
         CFFD5 : 3B20 5477 6F20 6469
         CFFDD : 6769 7473 2E0D 0A   
  133/   CFFE4 : 2020 2020 2020 2020                    dc.b    "                Move.w  #'0'"
         CFFEC : 2020 2020 2020 2020
         CFFF4 : 4D6F 7665 2E77 2020
         CFFFC : 2327 3027            
  134/   D0000 :                        ;-------------------------------------------------------------------------------                                
  135/   D0000 :                        ; Z80 Bank $1A
  136/   D0000 : (MACRO)                                align   $8000
  136/   D0000 :  (MACRO-2)                     cnop 0,$8000
  136/   D0000 :   (MACRO-3)                            org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  136/   D0000 :                                                !org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  137/   D0000 :                        Chrome_Gadget_Snd_Data:                                        ; Offset_0x0D0000
  138/   D0000 :                                        binclude  "sounds\cgz.snd"
  139/   D224B :                        Endless_Mine_Snd_Data:                                         ; Offset_0x0D224B
  140/   D224B :                                        binclude  "sounds\emz.snd"
  141/   D2993 :                        Title_Screen_Snd_Data:                                         ; Offset_0x0D2993
  142/   D2993 :                                        binclude  "sounds\ts.snd"
  143/   D2DCC :                        Credits_Snd_Data:                                              ; Offset_0x0D2DCC
  144/   D2DCC :                                        binclude  "sounds\credits.snd"
  145/   D383C :                        Time_Game_Over_Snd_Data:                                       ; Offset_0x0D383C
  146/   D383C :                                        binclude  "sounds\tgovr.snd"
  147/   D3A99 :                        Continue_Snd_Data:                                             ; Offset_0x0D3A99
  148/   D3A99 :                                        binclude  "sounds\continue.snd"
  149/   D427A :                        Level_Results_Snd_Data:                                        ; Offset_0x0D427A
  150/   D427A :                                        binclude  "sounds\results.snd"
  151/   D476A :                        Extra_Life_Snd_Data:                                           ; Offset_0x0D476A
  152/   D476A :                                        binclude  "sounds\1up.snd"
  153/   D496A :                        Got_Emerald_Snd_Data:                                          ; Offset_0x0D496A
  154/   D496A :                                        binclude  "sounds\emerald.snd"
  155/   D4A38 :                        Invincibility_Snd_Data:                                        ; Offset_0x0D4A38
  156/   D4A38 :                                        binclude  "sounds\invcblty.snd"
  157/   D4CB8 :                        Competition_Menu_Snd_Data:                                     ; Offset_0x0D4CB8
  158/   D4CB8 :                                        binclude  "sounds\2p_menu.snd"
  159/   D5EAA :                        Super_Sonic_Theme_Snd_Data:                                    ; Offset_0x0D5EAA
  160/   D5EAA :                                        binclude  "sounds\s_sonic.snd"
  161/   D695E :                        Data_Select_Menu_Snd_Data:                                     ; Offset_0x0D695E
  162/   D695E :                                        binclude  "sounds\menu.snd"
  163/   D8000 :                        ; Z80 Bank $1B
  164/   D8000 : (MACRO)                                align   $8000
  164/   D8000 :  (MACRO-2)                     cnop 0,$8000
  164/   D8000 :   (MACRO-3)                            org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  164/   D8000 :                                                !org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  165/   D8000 :                        Final_Boss_Snd_Data:                                           ; Offset_0x0D8000
  166/   D8000 :                                        binclude  "sounds\f_boss.snd"
  167/   D8592 :                        Panic_Snd_Data:                                                ; Offset_0x0D8592
  168/   D8592 :                                        binclude  "sounds\panic.snd"                                 
  169/   D86C0 :                        ;-------------------------------------------------------------------------------
  170/   D86C0 :                        ; Offset_0x0D86C0:
  171/   D86C0 : (MACRO)                		align	$8000
  171/   D86C0 :  (MACRO-2)                     cnop 0,$8000
  171/   D86C0 :   (MACRO-3)                            org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  171/   E0000 :                                                !org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  172/   E0000 :                        ;-------------------------------------------------------------------------------                                
  173/   E0000 :                        Z80_Driver:                                                    ; Offset_0x0E0000
  174/   E0000 :                                        binclude  "sounds\z80_drv.bin"
  175/   E16A0 :                        ; Offset_0x0E16A0               
  176/   E16A0 : 0080                                   dc.w    (((Music_01_Ptr>>$08)|(Music_01_Ptr<<$08))&$FFFF) ;$8000
  177/   E16A2 : 10A2                                   dc.w    (((Music_02_Ptr>>$08)|(Music_02_Ptr<<$08))&$FFFF) ;$A210
  178/   E16A4 : 24BF                                   dc.w    (((Music_03_Ptr>>$08)|(Music_03_Ptr<<$08))&$FFFF) ;$BF24
  179/   E16A6 : 92D4                                   dc.w    (((Music_04_Ptr>>$08)|(Music_04_Ptr<<$08))&$FFFF) ;$D492
  180/   E16A8 : 51EE                                   dc.w    (((Music_05_Ptr>>$08)|(Music_05_Ptr<<$08))&$FFFF) ;$EE51
  181/   E16AA : 68F4                                   dc.w    (((Music_06_Ptr>>$08)|(Music_06_Ptr<<$08))&$FFFF) ;$F468
  182/   E16AC :                                        
  183/   E16AC : 0080                                   dc.w    (((Music_07_Ptr>>$08)|(Music_07_Ptr<<$08))&$FFFF) ;$8000
  184/   E16AE : BB9B                                   dc.w    (((Music_08_Ptr>>$08)|(Music_08_Ptr<<$08))&$FFFF) ;$9BBB
  185/   E16B0 : 9EB9                                   dc.w    (((Music_09_Ptr>>$08)|(Music_09_Ptr<<$08))&$FFFF) ;$B99E
  186/   E16B2 : 36BF                                   dc.w    (((Music_0A_Ptr>>$08)|(Music_0A_Ptr<<$08))&$FFFF) ;$BF36
  187/   E16B4 : 99C4                                   dc.w    (((Music_0B_Ptr>>$08)|(Music_0B_Ptr<<$08))&$FFFF) ;$C499
  188/   E16B6 : 37CA                                   dc.w    (((Music_0C_Ptr>>$08)|(Music_0C_Ptr<<$08))&$FFFF) ;$CA37
  189/   E16B8 : 4BD0                                   dc.w    (((Music_0D_Ptr>>$08)|(Music_0D_Ptr<<$08))&$FFFF) ;$D04B
  190/   E16BA :                                        
  191/   E16BA : 0080                                   dc.w    (((Music_0E_Ptr>>$08)|(Music_0E_Ptr<<$08))&$FFFF) ;$8000
  192/   E16BC : 2AA5                                   dc.w    (((Music_0F_Ptr>>$08)|(Music_0F_Ptr<<$08))&$FFFF) ;$A52A
  193/   E16BE : 9CAA                                   dc.w    (((Music_10_Ptr>>$08)|(Music_10_Ptr<<$08))&$FFFF) ;$AA9C
  194/   E16C0 : 05B0                                   dc.w    (((Music_11_Ptr>>$08)|(Music_11_Ptr<<$08))&$FFFF) ;$B005
  195/   E16C2 : 6FB6                                   dc.w    (((Music_12_Ptr>>$08)|(Music_12_Ptr<<$08))&$FFFF) ;$B66F
  196/   E16C4 : 62BC                                   dc.w    (((Music_13_Ptr>>$08)|(Music_13_Ptr<<$08))&$FFFF) ;$BC62
  197/   E16C6 : 4FD0                                   dc.w    (((Music_14_Ptr>>$08)|(Music_14_Ptr<<$08))&$FFFF) ;$D04F
  198/   E16C8 : 42E6                                   dc.w    (((Music_15_Ptr>>$08)|(Music_15_Ptr<<$08))&$FFFF) ;$E642
  199/   E16CA : 54F9                                   dc.w    (((Music_16_Ptr>>$08)|(Music_16_Ptr<<$08))&$FFFF) ;$F954
  200/   E16CC :                                        
  201/   E16CC : 0080                                   dc.w    (((Music_17_Ptr>>$08)|(Music_17_Ptr<<$08))&$FFFF) ;$8000
  202/   E16CE : 1284                                   dc.w    (((Music_18_Ptr>>$08)|(Music_18_Ptr<<$08))&$FFFF) ;$8412
  203/   E16D0 : 4287                                   dc.w    (((Music_19_Ptr>>$08)|(Music_19_Ptr<<$08))&$FFFF) ;$8742
  204/   E16D2 : 3E8C                                   dc.w    (((Music_1A_Ptr>>$08)|(Music_1A_Ptr<<$08))&$FFFF) ;$8C3E
  205/   E16D4 : 2195                                   dc.w    (((Music_1B_Ptr>>$08)|(Music_1B_Ptr<<$08))&$FFFF) ;$9521
  206/   E16D6 : 849A                                   dc.w    (((Music_1C_Ptr>>$08)|(Music_1C_Ptr<<$08))&$FFFF) ;$9A84
  207/   E16D8 : 1CA3                                   dc.w    (((Music_1D_Ptr>>$08)|(Music_1D_Ptr<<$08))&$FFFF) ;$A31C
  208/   E16DA : 04AE                                   dc.w    (((Music_1E_Ptr>>$08)|(Music_1E_Ptr<<$08))&$FFFF) ;$AE04
  209/   E16DC : 19BB                                   dc.w    (((Music_1F_Ptr>>$08)|(Music_1F_Ptr<<$08))&$FFFF) ;$BB19
  210/   E16DE : 82BE                                   dc.w    (((Music_20_Ptr>>$08)|(Music_20_Ptr<<$08))&$FFFF) ;$BE82
  211/   E16E0 : 88C9                                   dc.w    (((Music_21_Ptr>>$08)|(Music_21_Ptr<<$08))&$FFFF) ;$C988
  212/   E16E2 : 20D6                                   dc.w    (((Music_22_Ptr>>$08)|(Music_22_Ptr<<$08))&$FFFF) ;$D620
  213/   E16E4 :                                        
  214/   E16E4 : 0080                                   dc.w    (((Music_23_Ptr>>$08)|(Music_23_Ptr<<$08))&$FFFF) ;$8000
  215/   E16E6 : 4BA2                                   dc.w    (((Music_24_Ptr>>$08)|(Music_24_Ptr<<$08))&$FFFF) ;$A24B
  216/   E16E8 : 93A9                                   dc.w    (((Music_25_Ptr>>$08)|(Music_25_Ptr<<$08))&$FFFF) ;$A993
  217/   E16EA : CCAD                                   dc.w    (((Music_26_Ptr>>$08)|(Music_26_Ptr<<$08))&$FFFF) ;$ADCC
  218/   E16EC : 3CB8                                   dc.w    (((Music_27_Ptr>>$08)|(Music_27_Ptr<<$08))&$FFFF) ;$B83C
  219/   E16EE : 99BA                                   dc.w    (((Music_28_Ptr>>$08)|(Music_28_Ptr<<$08))&$FFFF) ;$BA99
  220/   E16F0 : 7AC2                                   dc.w    (((Music_29_Ptr>>$08)|(Music_29_Ptr<<$08))&$FFFF) ;$C27A
  221/   E16F2 : 6AC7                                   dc.w    (((Music_2A_Ptr>>$08)|(Music_2A_Ptr<<$08))&$FFFF) ;$C76A
  222/   E16F4 : 6AC9                                   dc.w    (((Music_2B_Ptr>>$08)|(Music_2B_Ptr<<$08))&$FFFF) ;$C96A
  223/   E16F6 : 38CA                                   dc.w    (((Music_2C_Ptr>>$08)|(Music_2C_Ptr<<$08))&$FFFF) ;$CA38
  224/   E16F8 : B8CC                                   dc.w    (((Music_2D_Ptr>>$08)|(Music_2D_Ptr<<$08))&$FFFF) ;$CCB8
  225/   E16FA : AADE                                   dc.w    (((Music_2E_Ptr>>$08)|(Music_2E_Ptr<<$08))&$FFFF) ;$DEAA
  226/   E16FC : 5EE9                                   dc.w    (((Music_2F_Ptr>>$08)|(Music_2F_Ptr<<$08))&$FFFF) ;$E95E
  227/   E16FE :                                        
  228/   E16FE : 0080                                   dc.w    (((Music_30_Ptr>>$08)|(Music_30_Ptr<<$08))&$FFFF) ;$8000
  229/   E1700 : 9285                                   dc.w    (((Music_31_Ptr>>$08)|(Music_31_Ptr<<$08))&$FFFF) ;$8592
  230/   E1702 :                        
  231/   E1702 :                        ; Offset_0x0E1702:
  232/   E1702 :                        
  233/   E1702 : =$800B                 Sfx_20_Ptr   equ     (Sound20&$FFFF)|$8000   
  234/   E1702 : =$8021                 Sfx_21_Ptr   equ     (Sound21&$FFFF)|$8000   
  235/   E1702 : =$804B                 Sfx_22_Ptr   equ     (Sound22&$FFFF)|$8000   
  236/   E1702 : =$806A                 Sfx_23_Ptr   equ     (Sound23&$FFFF)|$8000   
  237/   E1702 : =$809C                 Sfx_24_Ptr   equ     (Sound24&$FFFF)|$8000   
  238/   E1702 : =$80D1                 Sfx_25_Ptr   equ     (Sound25&$FFFF)|$8000   
  239/   E1702 : =$80FD                 Sfx_26_Ptr   equ     (Sound26&$FFFF)|$8000   
  240/   E1702 : =$812C                 Sfx_27_Ptr   equ     (Sound27&$FFFF)|$8000   
  241/   E1702 : =$8158                 Sfx_28_Ptr   equ     (Sound28&$FFFF)|$8000   
  242/   E1702 : =$8167                 Sfx_29_Ptr   equ     (Sound29&$FFFF)|$8000   
  243/   E1702 : =$8179                 Sfx_2A_Ptr   equ     (Sound2A&$FFFF)|$8000   
  244/   E1702 : =$81BA                 Sfx_2B_Ptr   equ     (Sound2B&$FFFF)|$8000   
  245/   E1702 : =$81D9                 Sfx_2C_Ptr   equ     (Sound2C&$FFFF)|$8000   
  246/   E1702 : =$820D                 Sfx_2D_Ptr   equ     (Sound2D&$FFFF)|$8000   
  247/   E1702 : =$8243                 Sfx_2E_Ptr   equ     (Sound2E&$FFFF)|$8000   
  248/   E1702 : =$828D                 Sfx_2F_Ptr   equ     (Sound2F&$FFFF)|$8000   
  249/   E1702 : =$82BA                 Sfx_30_Ptr   equ     (Sound30&$FFFF)|$8000   
  250/   E1702 : =$82EB                 Sfx_31_Ptr   equ     (Sound31&$FFFF)|$8000   
  251/   E1702 : =$8317                 Sfx_32_Ptr   equ     (Sound32&$FFFF)|$8000   
  252/   E1702 : =$8366                 Sfx_33_Ptr   equ     (Sound33&$FFFF)|$8000   
  253/   E1702 : =$8397                 Sfx_34_Ptr   equ     (Sound34&$FFFF)|$8000   
  254/   E1702 : =$83F2                 Sfx_35_Ptr   equ     (Sound35&$FFFF)|$8000   
  255/   E1702 : =$8407                 Sfx_36_Ptr   equ     (Sound36&$FFFF)|$8000   
  256/   E1702 : =$8424                 Sfx_37_Ptr   equ     (Sound37&$FFFF)|$8000   
  257/   E1702 : =$845F                 Sfx_38_Ptr   equ     (Sound38&$FFFF)|$8000   
  258/   E1702 : =$847C                 Sfx_39_Ptr   equ     (Sound39&$FFFF)|$8000   
  259/   E1702 : =$84C6                 Sfx_3A_Ptr   equ     (Sound3A&$FFFF)|$8000   
  260/   E1702 : =$84EE                 Sfx_3B_Ptr   equ     (Sound3B&$FFFF)|$8000   
  261/   E1702 : =$8519                 Sfx_3C_Ptr   equ     (Sound3C&$FFFF)|$8000   
  262/   E1702 : =$855A                 Sfx_3D_Ptr   equ     (Sound3D&$FFFF)|$8000   
  263/   E1702 : =$85AD                 Sfx_3E_Ptr   equ     (Sound3E&$FFFF)|$8000   
  264/   E1702 : =$85E7                 Sfx_3F_Ptr   equ     (Sound3F&$FFFF)|$8000   
  265/   E1702 : =$8659                 Sfx_40_Ptr   equ     (Sound40&$FFFF)|$8000   
  266/   E1702 : =$8672                 Sfx_41_Ptr   equ     (Sound41&$FFFF)|$8000   
  267/   E1702 : =$86AC                 Sfx_42_Ptr   equ     (Sound42&$FFFF)|$8000   
  268/   E1702 : =$86BD                 Sfx_43_Ptr   equ     (Sound43&$FFFF)|$8000   
  269/   E1702 : =$8737                 Sfx_44_Ptr   equ     (Sound44&$FFFF)|$8000   
  270/   E1702 : =$875F                 Sfx_45_Ptr   equ     (Sound45&$FFFF)|$8000   
  271/   E1702 : =$87C6                 Sfx_46_Ptr   equ     (Sound46&$FFFF)|$8000   
  272/   E1702 : =$87EE                 Sfx_47_Ptr   equ     (Sound47&$FFFF)|$8000   
  273/   E1702 : =$881C                 Sfx_48_Ptr   equ     (Sound48&$FFFF)|$8000   
  274/   E1702 : =$882D                 Sfx_49_Ptr   equ     (Sound49&$FFFF)|$8000   
  275/   E1702 : =$885A                 Sfx_4A_Ptr   equ     (Sound4A&$FFFF)|$8000   
  276/   E1702 : =$8887                 Sfx_4B_Ptr   equ     (Sound4B&$FFFF)|$8000   
  277/   E1702 : =$88BA                 Sfx_4C_Ptr   equ     (Sound4C&$FFFF)|$8000   
  278/   E1702 : =$88F4                 Sfx_4D_Ptr   equ     (Sound4D&$FFFF)|$8000   
  279/   E1702 : =$8901                 Sfx_4E_Ptr   equ     (Sound4E&$FFFF)|$8000   
  280/   E1702 : =$8916                 Sfx_4F_Ptr   equ     (Sound4F&$FFFF)|$8000   
  281/   E1702 : =$894D                 Sfx_50_Ptr   equ     (Sound50&$FFFF)|$8000   
  282/   E1702 : =$8980                 Sfx_51_Ptr   equ     (Sound51&$FFFF)|$8000   
  283/   E1702 : =$89B9                 Sfx_52_Ptr   equ     (Sound52&$FFFF)|$8000   
  284/   E1702 : =$89F6                 Sfx_53_Ptr   equ     (Sound53&$FFFF)|$8000   
  285/   E1702 : =$8A35                 Sfx_54_Ptr   equ     (Sound54&$FFFF)|$8000   
  286/   E1702 : =$8A76                 Sfx_55_Ptr   equ     (Sound55&$FFFF)|$8000   
  287/   E1702 : =$8AA0                 Sfx_56_Ptr   equ     (Sound56&$FFFF)|$8000   
  288/   E1702 : =$8AE5                 Sfx_57_Ptr   equ     (Sound57&$FFFF)|$8000   
  289/   E1702 : =$8B0D                 Sfx_58_Ptr   equ     (Sound58&$FFFF)|$8000   
  290/   E1702 : =$8B37                 Sfx_59_Ptr   equ     (Sound59&$FFFF)|$8000   
  291/   E1702 : =$8B90                 Sfx_5A_Ptr   equ     (Sound5A&$FFFF)|$8000   
  292/   E1702 : =$8BBD                 Sfx_5B_Ptr   equ     (Sound5B&$FFFF)|$8000   
  293/   E1702 : =$8BF1                 Sfx_5C_Ptr   equ     (Sound5C&$FFFF)|$8000   
  294/   E1702 : =$8C38                 Sfx_5D_Ptr   equ     (Sound5D&$FFFF)|$8000   
  295/   E1702 : =$8C60                 Sfx_5E_Ptr   equ     (Sound5E&$FFFF)|$8000   
  296/   E1702 : =$8C9A                 Sfx_5F_Ptr   equ     (Sound5F&$FFFF)|$8000   
  297/   E1702 : =$8D36                 Sfx_60_Ptr   equ     (Sound60&$FFFF)|$8000   
  298/   E1702 : =$8D71                 Sfx_61_Ptr   equ     (Sound61&$FFFF)|$8000   
  299/   E1702 : =$8DCE                 Sfx_62_Ptr   equ     (Sound62&$FFFF)|$8000   
  300/   E1702 : =$8E05                 Sfx_63_Ptr   equ     (Sound63&$FFFF)|$8000   
  301/   E1702 : =$8E34                 Sfx_64_Ptr   equ     (Sound64&$FFFF)|$8000   
  302/   E1702 : =$8E5C                 Sfx_65_Ptr   equ     (Sound65&$FFFF)|$8000   
  303/   E1702 : =$8E7D                 Sfx_66_Ptr   equ     (Sound66&$FFFF)|$8000   
  304/   E1702 : =$8EB7                 Sfx_67_Ptr   equ     (Sound67&$FFFF)|$8000   
  305/   E1702 : =$8ED8                 Sfx_68_Ptr   equ     (Sound68&$FFFF)|$8000   
  306/   E1702 : =$8F02                 Sfx_69_Ptr   equ     (Sound69&$FFFF)|$8000   
  307/   E1702 : =$8F3F                 Sfx_6A_Ptr   equ     (Sound6A&$FFFF)|$8000   
  308/   E1702 : =$8F6A                 Sfx_6B_Ptr   equ     (Sound6B&$FFFF)|$8000   
  309/   E1702 : =$8F94                 Sfx_6C_Ptr   equ     (Sound6C&$FFFF)|$8000   
  310/   E1702 : =$8FFF                 Sfx_6D_Ptr   equ     (Sound6D&$FFFF)|$8000   
  311/   E1702 : =$902B                 Sfx_6E_Ptr   equ     (Sound6E&$FFFF)|$8000   
  312/   E1702 : =$9069                 Sfx_6F_Ptr   equ     (Sound6F&$FFFF)|$8000   
  313/   E1702 : =$90AC                 Sfx_70_Ptr   equ     (Sound70&$FFFF)|$8000   
  314/   E1702 : =$8000                 Sfx_NN_Ptr   equ     (SoundNN&$FFFF)|$8000   
  315/   E1702 :                        
  316/   E1702 :                        
  317/   E1702 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  318/   E1704 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  319/   E1706 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  320/   E1708 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  321/   E170A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  322/   E170C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  323/   E170E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  324/   E1710 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  325/   E1712 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  326/   E1714 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  327/   E1716 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  328/   E1718 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  329/   E171A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  330/   E171C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  331/   E171E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  332/   E1720 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  333/   E1722 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  334/   E1724 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  335/   E1726 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  336/   E1728 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  337/   E172A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  338/   E172C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  339/   E172E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  340/   E1730 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  341/   E1732 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  342/   E1734 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  343/   E1736 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  344/   E1738 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  345/   E173A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  346/   E173C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  347/   E173E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  348/   E1740 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  349/   E1742 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  350/   E1744 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  351/   E1746 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  352/   E1748 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  353/   E174A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  354/   E174C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  355/   E174E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  356/   E1750 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  357/   E1752 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  358/   E1754 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  359/   E1756 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  360/   E1758 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  361/   E175A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  362/   E175C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  363/   E175E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  364/   E1760 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  365/   E1762 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  366/   E1764 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  367/   E1766 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  368/   E1768 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  369/   E176A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  370/   E176C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  371/   E176E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  372/   E1770 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  373/   E1772 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  374/   E1774 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  375/   E1776 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  376/   E1778 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  377/   E177A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  378/   E177C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  379/   E177E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  380/   E1780 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  381/   E1782 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  382/   E1784 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  383/   E1786 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  384/   E1788 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  385/   E178A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  386/   E178C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  387/   E178E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  388/   E1790 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  389/   E1792 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  390/   E1794 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  391/   E1796 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  392/   E1798 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  393/   E179A : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  394/   E179C : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  395/   E179E : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  396/   E17A0 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  397/   E17A2 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  398/   E17A4 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  399/   E17A6 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  400/   E17A8 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  401/   E17AA : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  402/   E17AC : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  403/   E17AE : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  404/   E17B0 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  405/   E17B2 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  406/   E17B4 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  407/   E17B6 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  408/   E17B8 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  409/   E17BA : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  410/   E17BC : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  411/   E17BE : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  412/   E17C0 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  413/   E17C2 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  414/   E17C4 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  415/   E17C6 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  416/   E17C8 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  417/   E17CA : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  418/   E17CC : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  419/   E17CE : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  420/   E17D0 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  421/   E17D2 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  422/   E17D4 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  423/   E17D6 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  424/   E17D8 : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  425/   E17DA : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  426/   E17DC : 0080                                   dc.w    (((Sfx_NN_Ptr>>$08)|(Sfx_NN_Ptr<<$08))&$FFFF)      
  427/   E17DE :                        
  428/   E17DE : 0B80                                   dc.w    (((Sfx_20_Ptr>>$08)|(Sfx_20_Ptr<<$08))&$FFFF)      
  429/   E17E0 : 2180                                   dc.w    (((Sfx_21_Ptr>>$08)|(Sfx_21_Ptr<<$08))&$FFFF)      
  430/   E17E2 : 4B80                                   dc.w    (((Sfx_22_Ptr>>$08)|(Sfx_22_Ptr<<$08))&$FFFF)      
  431/   E17E4 : 6A80                                   dc.w    (((Sfx_23_Ptr>>$08)|(Sfx_23_Ptr<<$08))&$FFFF)      
  432/   E17E6 : 9C80                                   dc.w    (((Sfx_24_Ptr>>$08)|(Sfx_24_Ptr<<$08))&$FFFF)      
  433/   E17E8 : D180                                   dc.w    (((Sfx_25_Ptr>>$08)|(Sfx_25_Ptr<<$08))&$FFFF)      
  434/   E17EA : FD80                                   dc.w    (((Sfx_26_Ptr>>$08)|(Sfx_26_Ptr<<$08))&$FFFF)      
  435/   E17EC : 2C81                                   dc.w    (((Sfx_27_Ptr>>$08)|(Sfx_27_Ptr<<$08))&$FFFF)      
  436/   E17EE : 5881                                   dc.w    (((Sfx_28_Ptr>>$08)|(Sfx_28_Ptr<<$08))&$FFFF)      
  437/   E17F0 : 6781                                   dc.w    (((Sfx_29_Ptr>>$08)|(Sfx_29_Ptr<<$08))&$FFFF)      
  438/   E17F2 : 7981                                   dc.w    (((Sfx_2A_Ptr>>$08)|(Sfx_2A_Ptr<<$08))&$FFFF)      
  439/   E17F4 : BA81                                   dc.w    (((Sfx_2B_Ptr>>$08)|(Sfx_2B_Ptr<<$08))&$FFFF)      
  440/   E17F6 : D981                                   dc.w    (((Sfx_2C_Ptr>>$08)|(Sfx_2C_Ptr<<$08))&$FFFF)      
  441/   E17F8 : 0D82                                   dc.w    (((Sfx_2D_Ptr>>$08)|(Sfx_2D_Ptr<<$08))&$FFFF)      
  442/   E17FA : 4382                                   dc.w    (((Sfx_2E_Ptr>>$08)|(Sfx_2E_Ptr<<$08))&$FFFF)      
  443/   E17FC : 8D82                                   dc.w    (((Sfx_2F_Ptr>>$08)|(Sfx_2F_Ptr<<$08))&$FFFF)      
  444/   E17FE : BA82                                   dc.w    (((Sfx_30_Ptr>>$08)|(Sfx_30_Ptr<<$08))&$FFFF)      
  445/   E1800 : EB82                                   dc.w    (((Sfx_31_Ptr>>$08)|(Sfx_31_Ptr<<$08))&$FFFF)      
  446/   E1802 : 1783                                   dc.w    (((Sfx_32_Ptr>>$08)|(Sfx_32_Ptr<<$08))&$FFFF)      
  447/   E1804 : 6683                                   dc.w    (((Sfx_33_Ptr>>$08)|(Sfx_33_Ptr<<$08))&$FFFF)      
  448/   E1806 : 9783                                   dc.w    (((Sfx_34_Ptr>>$08)|(Sfx_34_Ptr<<$08))&$FFFF)      
  449/   E1808 : F283                                   dc.w    (((Sfx_35_Ptr>>$08)|(Sfx_35_Ptr<<$08))&$FFFF)      
  450/   E180A : 0784                                   dc.w    (((Sfx_36_Ptr>>$08)|(Sfx_36_Ptr<<$08))&$FFFF)      
  451/   E180C : 2484                                   dc.w    (((Sfx_37_Ptr>>$08)|(Sfx_37_Ptr<<$08))&$FFFF)      
  452/   E180E : 5F84                                   dc.w    (((Sfx_38_Ptr>>$08)|(Sfx_38_Ptr<<$08))&$FFFF)      
  453/   E1810 : 7C84                                   dc.w    (((Sfx_39_Ptr>>$08)|(Sfx_39_Ptr<<$08))&$FFFF)      
  454/   E1812 : C684                                   dc.w    (((Sfx_3A_Ptr>>$08)|(Sfx_3A_Ptr<<$08))&$FFFF)      
  455/   E1814 : EE84                                   dc.w    (((Sfx_3B_Ptr>>$08)|(Sfx_3B_Ptr<<$08))&$FFFF)      
  456/   E1816 : 1985                                   dc.w    (((Sfx_3C_Ptr>>$08)|(Sfx_3C_Ptr<<$08))&$FFFF)      
  457/   E1818 : 5A85                                   dc.w    (((Sfx_3D_Ptr>>$08)|(Sfx_3D_Ptr<<$08))&$FFFF)      
  458/   E181A : AD85                                   dc.w    (((Sfx_3E_Ptr>>$08)|(Sfx_3E_Ptr<<$08))&$FFFF)      
  459/   E181C : E785                                   dc.w    (((Sfx_3F_Ptr>>$08)|(Sfx_3F_Ptr<<$08))&$FFFF)     
  460/   E181E : 5986                                   dc.w    (((Sfx_40_Ptr>>$08)|(Sfx_40_Ptr<<$08))&$FFFF)      
  461/   E1820 : 7286                                   dc.w    (((Sfx_41_Ptr>>$08)|(Sfx_41_Ptr<<$08))&$FFFF)      
  462/   E1822 : AC86                                   dc.w    (((Sfx_42_Ptr>>$08)|(Sfx_42_Ptr<<$08))&$FFFF)      
  463/   E1824 : BD86                                   dc.w    (((Sfx_43_Ptr>>$08)|(Sfx_43_Ptr<<$08))&$FFFF)      
  464/   E1826 : 3787                                   dc.w    (((Sfx_44_Ptr>>$08)|(Sfx_44_Ptr<<$08))&$FFFF)      
  465/   E1828 : 5F87                                   dc.w    (((Sfx_45_Ptr>>$08)|(Sfx_45_Ptr<<$08))&$FFFF)      
  466/   E182A : C687                                   dc.w    (((Sfx_46_Ptr>>$08)|(Sfx_46_Ptr<<$08))&$FFFF)      
  467/   E182C : EE87                                   dc.w    (((Sfx_47_Ptr>>$08)|(Sfx_47_Ptr<<$08))&$FFFF)      
  468/   E182E : 1C88                                   dc.w    (((Sfx_48_Ptr>>$08)|(Sfx_48_Ptr<<$08))&$FFFF)      
  469/   E1830 : 2D88                                   dc.w    (((Sfx_49_Ptr>>$08)|(Sfx_49_Ptr<<$08))&$FFFF)      
  470/   E1832 : 5A88                                   dc.w    (((Sfx_4A_Ptr>>$08)|(Sfx_4A_Ptr<<$08))&$FFFF)      
  471/   E1834 : 8788                                   dc.w    (((Sfx_4B_Ptr>>$08)|(Sfx_4B_Ptr<<$08))&$FFFF)      
  472/   E1836 : BA88                                   dc.w    (((Sfx_4C_Ptr>>$08)|(Sfx_4C_Ptr<<$08))&$FFFF)      
  473/   E1838 : F488                                   dc.w    (((Sfx_4D_Ptr>>$08)|(Sfx_4D_Ptr<<$08))&$FFFF)      
  474/   E183A : 0189                                   dc.w    (((Sfx_4E_Ptr>>$08)|(Sfx_4E_Ptr<<$08))&$FFFF)      
  475/   E183C : 1689                                   dc.w    (((Sfx_4F_Ptr>>$08)|(Sfx_4F_Ptr<<$08))&$FFFF)    
  476/   E183E : 4D89                                   dc.w    (((Sfx_50_Ptr>>$08)|(Sfx_50_Ptr<<$08))&$FFFF)      
  477/   E1840 : 8089                                   dc.w    (((Sfx_51_Ptr>>$08)|(Sfx_51_Ptr<<$08))&$FFFF)      
  478/   E1842 : B989                                   dc.w    (((Sfx_52_Ptr>>$08)|(Sfx_52_Ptr<<$08))&$FFFF)      
  479/   E1844 : F689                                   dc.w    (((Sfx_53_Ptr>>$08)|(Sfx_53_Ptr<<$08))&$FFFF)      
  480/   E1846 : 358A                                   dc.w    (((Sfx_54_Ptr>>$08)|(Sfx_54_Ptr<<$08))&$FFFF)      
  481/   E1848 : 768A                                   dc.w    (((Sfx_55_Ptr>>$08)|(Sfx_55_Ptr<<$08))&$FFFF)      
  482/   E184A : A08A                                   dc.w    (((Sfx_56_Ptr>>$08)|(Sfx_56_Ptr<<$08))&$FFFF)      
  483/   E184C : E58A                                   dc.w    (((Sfx_57_Ptr>>$08)|(Sfx_57_Ptr<<$08))&$FFFF)      
  484/   E184E : 0D8B                                   dc.w    (((Sfx_58_Ptr>>$08)|(Sfx_58_Ptr<<$08))&$FFFF)      
  485/   E1850 : 378B                                   dc.w    (((Sfx_59_Ptr>>$08)|(Sfx_59_Ptr<<$08))&$FFFF)      
  486/   E1852 : 908B                                   dc.w    (((Sfx_5A_Ptr>>$08)|(Sfx_5A_Ptr<<$08))&$FFFF)      
  487/   E1854 : BD8B                                   dc.w    (((Sfx_5B_Ptr>>$08)|(Sfx_5B_Ptr<<$08))&$FFFF)      
  488/   E1856 : F18B                                   dc.w    (((Sfx_5C_Ptr>>$08)|(Sfx_5C_Ptr<<$08))&$FFFF)      
  489/   E1858 : 388C                                   dc.w    (((Sfx_5D_Ptr>>$08)|(Sfx_5D_Ptr<<$08))&$FFFF)      
  490/   E185A : 608C                                   dc.w    (((Sfx_5E_Ptr>>$08)|(Sfx_5E_Ptr<<$08))&$FFFF)      
  491/   E185C : 9A90                                   dc.w    (((Sfx_6F_Ptr>>$08)|(Sfx_5F_Ptr<<$08))&$FFFF)        
  492/   E185E : 368D                                   dc.w    (((Sfx_60_Ptr>>$08)|(Sfx_60_Ptr<<$08))&$FFFF)      
  493/   E1860 : 718D                                   dc.w    (((Sfx_61_Ptr>>$08)|(Sfx_61_Ptr<<$08))&$FFFF)      
  494/   E1862 : CE8D                                   dc.w    (((Sfx_62_Ptr>>$08)|(Sfx_62_Ptr<<$08))&$FFFF)      
  495/   E1864 : 058E                                   dc.w    (((Sfx_63_Ptr>>$08)|(Sfx_63_Ptr<<$08))&$FFFF)      
  496/   E1866 : 348E                                   dc.w    (((Sfx_64_Ptr>>$08)|(Sfx_64_Ptr<<$08))&$FFFF)      
  497/   E1868 : 5C8E                                   dc.w    (((Sfx_65_Ptr>>$08)|(Sfx_65_Ptr<<$08))&$FFFF)      
  498/   E186A : 7D8E                                   dc.w    (((Sfx_66_Ptr>>$08)|(Sfx_66_Ptr<<$08))&$FFFF)      
  499/   E186C : B78E                                   dc.w    (((Sfx_67_Ptr>>$08)|(Sfx_67_Ptr<<$08))&$FFFF)      
  500/   E186E : D88E                                   dc.w    (((Sfx_68_Ptr>>$08)|(Sfx_68_Ptr<<$08))&$FFFF)      
  501/   E1870 : 028F                                   dc.w    (((Sfx_69_Ptr>>$08)|(Sfx_69_Ptr<<$08))&$FFFF)      
  502/   E1872 : 3F8F                                   dc.w    (((Sfx_6A_Ptr>>$08)|(Sfx_6A_Ptr<<$08))&$FFFF)      
  503/   E1874 : 6A8F                                   dc.w    (((Sfx_6B_Ptr>>$08)|(Sfx_6B_Ptr<<$08))&$FFFF)      
  504/   E1876 : 948F                                   dc.w    (((Sfx_6C_Ptr>>$08)|(Sfx_6C_Ptr<<$08))&$FFFF)      
  505/   E1878 : FF8F                                   dc.w    (((Sfx_6D_Ptr>>$08)|(Sfx_6D_Ptr<<$08))&$FFFF)      
  506/   E187A : 2B90                                   dc.w    (((Sfx_6E_Ptr>>$08)|(Sfx_6E_Ptr<<$08))&$FFFF)      
  507/   E187C : 6990                                   dc.w    (((Sfx_6F_Ptr>>$08)|(Sfx_6F_Ptr<<$08))&$FFFF)       
  508/   E187E : AC90                                   dc.w    (((Sfx_70_Ptr>>$08)|(Sfx_70_Ptr<<$08))&$FFFF)       
  509/   E1880 :                        
  510/   E1880 :                        
  511/   E1880 :                        ;-------------------------------------------------------------------------------
  512/   E1880 : (MACRO)                	align	$8000
  512/   E1880 :  (MACRO-2)                     cnop 0,$8000
  512/   E1880 :   (MACRO-3)                            org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  512/   E8000 :                                                !org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  513/   E8000 :                        ;-------------------------------------------------------------------------------                 
  514/   E8000 :                        SoundNN:	include "sfx-improved/NULL.asm"
(1)    1/   E8000 :                     Sound20_Null_Header:
(1)    2/   E8000 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8000 :                     
(1)    2/   E8000 : =$3                 SourceDriver set 3
(1)    2/   E8000 :                     
(1)    2/   E8000 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8000 :                     
(1)    2/   E8000 : =$E8000             songStart set *
(1)    2/   E8000 :                     
(1)    2/   E8000 :                     
(1)    3/   E8000 : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E8000 : 0000                        dc.w    $0000
(1)    4/   E8002 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8002 : 01                          dc.b    $01
(1)    5/   E8003 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8003 : 01                          dc.b    $01
(1)    6/   E8004 :                     
(1)    7/   E8004 : (MACRO)             	smpsHeaderSFXChannel cPSG1, Sound20_Null_PSG1,	$F4, $00
(1)    7/   E8004 : 8080                        dc.b    $80,CPSG1
(1)    7/   E8006 :  (MACRO-2)                  CheckedChannelPointer SOUND20_NULL_PSG1
(1)    7/   E8006 : 0A80                                dc.w    z80_ptr(SOUND20_NULL_PSG1)
(1)    7/   E8008 :  (MACRO-2)                          PSGPitchConvert $F4
(1)    7/   E8008 : F4                                  dc.b    $F4
(1)    7/   E8009 : 00                          dc.b    $00
(1)    8/   E800A :                     
(1)    9/   E800A :                     ; PSG1 Data
(1)   10/   E800A :                     Sound20_Null_PSG1:
(1)   11/   E800A : (MACRO)             	smpsStop
(1)   11/   E800A : F2                          dc.b    $F2
(1)   12/   E800B :                     	
(1)   13/   E800B :                     
  515/   E800B :                        Sound20:	include "sfx-improved/A0 - Jump.asm"
(1)    1/   E800B :                     Sound20_Jump_Header:
(1)    2/   E800B : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E800B :                     
(1)    2/   E800B : =$3                 SourceDriver set 3
(1)    2/   E800B :                     
(1)    2/   E800B : =$0                 SourceSMPS2ASM set 0
(1)    2/   E800B :                     
(1)    2/   E800B : =$E800B             songStart set *
(1)    2/   E800B :                     
(1)    2/   E800B :                     
(1)    3/   E800B : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E800B : 0000                        dc.w    $0000
(1)    4/   E800D : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E800D : 01                          dc.b    $01
(1)    5/   E800E : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E800E : 01                          dc.b    $01
(1)    6/   E800F :                     
(1)    7/   E800F : (MACRO)             	smpsHeaderSFXChannel cPSG1, Sound20_Jump_PSG1,	$F4, $00
(1)    7/   E800F : 8080                        dc.b    $80,CPSG1
(1)    7/   E8011 :  (MACRO-2)                  CheckedChannelPointer SOUND20_JUMP_PSG1
(1)    7/   E8011 : 1580                                dc.w    z80_ptr(SOUND20_JUMP_PSG1)
(1)    7/   E8013 :  (MACRO-2)                          PSGPitchConvert $F4
(1)    7/   E8013 : F4                                  dc.b    $F4
(1)    7/   E8014 : 00                          dc.b    $00
(1)    8/   E8015 :                     
(1)    9/   E8015 :                     ; PSG1 Data
(1)   10/   E8015 :                     Sound20_Jump_PSG1:
(1)   11/   E8015 : (MACRO)             	smpsPSGvoice        $00
(1)   11/   E8015 : F500                        dc.b    $F5,$00
(1)   12/   E8017 : 9E05                	dc.b	nF2, $05
(1)   13/   E8019 : (MACRO)             	smpsModSet          $02, $01, $F8, $65
(1)   13/   E8019 : F0                          dc.b    $F0
(1)   13/   E801A : 0201 F865                           dc.b    $02,$01,$F8,$65
(1)   13/   E801E :                             ;dc.b   $01,$F8,$65
(1)   14/   E801E : A315                	dc.b	nBb2, $15
(1)   15/   E8020 : (MACRO)             	smpsStop
(1)   15/   E8020 : F2                          dc.b    $F2
(1)   16/   E8021 :                     
  516/   E8021 :                        Sound21:	include "sfx-improved/A1 - Checkpoint.asm"
(1)    1/   E8021 :                     Sound21_Checkpoint_Header:
(1)    2/   E8021 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8021 :                     
(1)    2/   E8021 : =$3                 SourceDriver set 3
(1)    2/   E8021 :                     
(1)    2/   E8021 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8021 :                     
(1)    2/   E8021 : =$E8021             songStart set *
(1)    2/   E8021 :                     
(1)    2/   E8021 :                     
(1)    3/   E8021 : (MACRO)             	smpsHeaderVoice     Sound21_Checkpoint_Voices
(1)    3/   E8021 : 2B80                                dc.w    z80_ptr(SOUND21_CHECKPOINT_VOICES)
(1)    4/   E8023 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8023 : 01                          dc.b    $01
(1)    5/   E8024 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8024 : 01                          dc.b    $01
(1)    6/   E8025 :                     
(1)    7/   E8025 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound21_Checkpoint_FM5,	$00, $01
(1)    7/   E8025 : 8005                        dc.b    $80,CFM5
(1)    7/   E8027 :  (MACRO-2)                  CheckedChannelPointer SOUND21_CHECKPOINT_FM5
(1)    7/   E8027 : 4480                                dc.w    z80_ptr(SOUND21_CHECKPOINT_FM5)
(1)    7/   E8029 : 00                                  dc.b    $00
(1)    7/   E802A : 01                          dc.b    $01
(1)    8/   E802B :                     
(1)    9/   E802B :                     Sound21_Checkpoint_Voices:
(1)   10/   E802B :                     ;	Voice $00
(1)   11/   E802B :                     ;	$3C
(1)   12/   E802B :                     ;	$05, $01, $0A, $01, 	$56, $5C, $5C, $5C, 	$0E, $11, $11, $11
(1)   13/   E802B :                     ;	$09, $0A, $06, $0A, 	$4F, $3F, $3F, $3F, 	$17, $80, $20, $80
(1)   14/   E802B : (MACRO)             	smpsVcAlgorithm     $04
(1)   14/   E802B : =$4                 vcAlgorithm set $04
(1)   15/   E802B : (MACRO)             	smpsVcFeedback      $07
(1)   15/   E802B : =$7                 vcFeedback set $07
(1)   16/   E802B : (MACRO)             	smpsVcUnusedBits    $00
(1)   16/   E802B : =$0                 vcUnusedBits set $00
(1)   16/   E802B : =$0                 vcD1R1Unk set 0
(1)   16/   E802B : =$0                 vcD1R2Unk set 0
(1)   16/   E802B : =$0                 vcD1R3Unk set 0
(1)   16/   E802B : =$0                 vcD1R4Unk set 0
(1)   17/   E802B : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   17/   E802B : =$0                 vcDT1 set $00
(1)   17/   E802B : =$0                 vcDT2 set $00
(1)   17/   E802B : =$0                 vcDT3 set $00
(1)   17/   E802B : =$0                 vcDT4 set $00
(1)   18/   E802B : (MACRO)             	smpsVcCoarseFreq    $01, $0A, $01, $05
(1)   18/   E802B : =$1                 vcCF1 set $01
(1)   18/   E802B : =$A                 vcCF2 set $0A
(1)   18/   E802B : =$1                 vcCF3 set $01
(1)   18/   E802B : =$5                 vcCF4 set $05
(1)   19/   E802B : (MACRO)             	smpsVcRateScale     $01, $01, $01, $01
(1)   19/   E802B : =$1                 vcRS1 set $01
(1)   19/   E802B : =$1                 vcRS2 set $01
(1)   19/   E802B : =$1                 vcRS3 set $01
(1)   19/   E802B : =$1                 vcRS4 set $01
(1)   20/   E802B : (MACRO)             	smpsVcAttackRate    $1C, $1C, $1C, $16
(1)   20/   E802B : =$1C                vcAR1 set $1C
(1)   20/   E802B : =$1C                vcAR2 set $1C
(1)   20/   E802B : =$1C                vcAR3 set $1C
(1)   20/   E802B : =$16                vcAR4 set $16
(1)   21/   E802B : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   21/   E802B : =$0                 vcAM1 set $00<<5
(1)   21/   E802B : =$0                 vcAM2 set $00<<5
(1)   21/   E802B : =$0                 vcAM3 set $00<<5
(1)   21/   E802B : =$0                 vcAM4 set $00<<5
(1)   22/   E802B : (MACRO)             	smpsVcDecayRate1    $11, $11, $11, $0E
(1)   22/   E802B : =$11                vcD1R1 set $11
(1)   22/   E802B : =$11                vcD1R2 set $11
(1)   22/   E802B : =$11                vcD1R3 set $11
(1)   22/   E802B : =$E                 vcD1R4 set $0E
(1)   23/   E802B : (MACRO)             	smpsVcDecayRate2    $0A, $06, $0A, $09
(1)   23/   E802B : =$A                 vcD2R1 set $0A
(1)   23/   E802B : =$6                 vcD2R2 set $06
(1)   23/   E802B : =$A                 vcD2R3 set $0A
(1)   23/   E802B : =$9                 vcD2R4 set $09
(1)   24/   E802B : (MACRO)             	smpsVcDecayLevel    $03, $03, $03, $04
(1)   24/   E802B : =$3                 vcDL1 set $03
(1)   24/   E802B : =$3                 vcDL2 set $03
(1)   24/   E802B : =$3                 vcDL3 set $03
(1)   24/   E802B : =$4                 vcDL4 set $04
(1)   25/   E802B : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   25/   E802B : =$F                 vcRR1 set $0F
(1)   25/   E802B : =$F                 vcRR2 set $0F
(1)   25/   E802B : =$F                 vcRR3 set $0F
(1)   25/   E802B : =$F                 vcRR4 set $0F
(1)   26/   E802B : (MACRO)             	smpsVcTotalLevel    $00, $20, $00, $17
(1)   26/   E802B : =$0                 vcTL1 set $00
(1)   26/   E802B : =$20                vcTL2 set $20
(1)   26/   E802B : =$0                 vcTL3 set $00
(1)   26/   E802B : =$17                vcTL4 set $17
(1)   26/   E802B : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   26/   E802C :                     ;   0     1     2     3     4     5     6     7
(1)   26/   E802C :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   26/   E802C : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   26/   E802C : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   26/   E802C : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   26/   E802C : =$80                vcTLMask1 set $80
(1)   26/   E802C :                     
(1)   26/   E802C :                     
(1)   26/   E802C : 0501 0A01                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   26/   E8030 : 565C 5C5C                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   26/   E8034 : 0E11 1111                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   26/   E8038 : 090A 060A                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   26/   E803C : 4F3F 3F3F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   26/   E8040 : 1780 2080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   27/   E8044 :                     
(1)   28/   E8044 :                     ; FM5 Data
(1)   29/   E8044 :                     Sound21_Checkpoint_FM5:
(1)   30/   E8044 : (MACRO)             	smpsSetvoice        $00
(1)   30/   E8044 :  (MACRO-2)                  smpsFMvoice $00
(1)   30/   E8044 : EF00                                dc.b    $EF,$00
(1)   31/   E8046 : BD06 BA16           	dc.b	nC5, $06, nA4, $16
(1)   32/   E804A : (MACRO)             	smpsStop
(1)   32/   E804A : F2                          dc.b    $F2
(1)   33/   E804B :                     
  517/   E804B :                        Sound22:	include "sfx-improved/A2 - Spike Switch.asm"
(1)    1/   E804B :                     Sound22_SpikeSwitch_Header:
(1)    2/   E804B : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E804B :                     
(1)    2/   E804B : =$3                 SourceDriver set 3
(1)    2/   E804B :                     
(1)    2/   E804B : =$0                 SourceSMPS2ASM set 0
(1)    2/   E804B :                     
(1)    2/   E804B : =$E804B             songStart set *
(1)    2/   E804B :                     
(1)    2/   E804B :                     
(1)    3/   E804B : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E804B : 0000                        dc.w    $0000
(1)    4/   E804D : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E804D : 01                          dc.b    $01
(1)    5/   E804E : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E804E : 01                          dc.b    $01
(1)    6/   E804F :                     
(1)    7/   E804F : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound22_SpikeSwitch_PSG3,	$00, $00
(1)    7/   E804F : 80C0                        dc.b    $80,CPSG3
(1)    7/   E8051 :  (MACRO-2)                  CheckedChannelPointer SOUND22_SPIKESWITCH_PSG3
(1)    7/   E8051 : 5580                                dc.w    z80_ptr(SOUND22_SPIKESWITCH_PSG3)
(1)    7/   E8053 :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E8053 : 00                                  dc.b    $00
(1)    7/   E8054 : 00                          dc.b    $00
(1)    8/   E8055 :                     
(1)    9/   E8055 :                     ; PSG3 Data
(1)   10/   E8055 :                     Sound22_SpikeSwitch_PSG3:
(1)   11/   E8055 : (MACRO)             	smpsModSet          $01, $01, $F0, $08
(1)   11/   E8055 : F0                          dc.b    $F0
(1)   11/   E8056 : 0101 F008                           dc.b    $01,$01,$F0,$08
(1)   11/   E805A :                             ;dc.b   $01,$F0,$08
(1)   12/   E805A : (MACRO)             	smpsPSGform         $E7
(1)   12/   E805A : F3E7                        dc.b    $F3,$E7
(1)   13/   E805C : C004 CA04           	dc.b	nEb5, $04, nCs6, $04
(1)   14/   E8060 :                     
(1)   15/   E8060 :                     Sound22_SpikeSwitch_Loop00:
(1)   16/   E8060 : C001                	dc.b	nEb5, $01
(1)   17/   E8062 : (MACRO)             	smpsPSGAlterVol     $01
(1)   17/   E8062 : EC01                        dc.b    $EC,$01
(1)   18/   E8064 : (MACRO)             	smpsLoop            $00, $06, Sound22_SpikeSwitch_Loop00
(1)   18/   E8064 : F7                          dc.b    $F7
(1)   18/   E8065 : 0006                        dc.b    $00,$06
(1)   18/   E8067 : 6080                                dc.w    z80_ptr(SOUND22_SPIKESWITCH_LOOP00)
(1)   19/   E8069 : (MACRO)             	smpsStop
(1)   19/   E8069 : F2                          dc.b    $F2
(1)   20/   E806A :                     
  518/   E806A :                        Sound23:	include "sfx-improved/A3 - Hurt.asm"
(1)    1/   E806A :                     Sound23_Hurt_Header:
(1)    2/   E806A : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E806A :                     
(1)    2/   E806A : =$3                 SourceDriver set 3
(1)    2/   E806A :                     
(1)    2/   E806A : =$0                 SourceSMPS2ASM set 0
(1)    2/   E806A :                     
(1)    2/   E806A : =$E806A             songStart set *
(1)    2/   E806A :                     
(1)    2/   E806A :                     
(1)    3/   E806A : (MACRO)             	smpsHeaderVoice     Sound23_Hurt_Voices
(1)    3/   E806A : 8380                                dc.w    z80_ptr(SOUND23_HURT_VOICES)
(1)    4/   E806C : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E806C : 01                          dc.b    $01
(1)    5/   E806D : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E806D : 01                          dc.b    $01
(1)    6/   E806E :                     
(1)    7/   E806E : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound23_Hurt_FM5,	$F4, $00
(1)    7/   E806E : 8005                        dc.b    $80,CFM5
(1)    7/   E8070 :  (MACRO-2)                  CheckedChannelPointer SOUND23_HURT_FM5
(1)    7/   E8070 : 7480                                dc.w    z80_ptr(SOUND23_HURT_FM5)
(1)    7/   E8072 : F4                                  dc.b    $F4
(1)    7/   E8073 : 00                          dc.b    $00
(1)    8/   E8074 :                     
(1)    9/   E8074 :                     ; FM5 Data
(1)   10/   E8074 :                     Sound23_Hurt_FM5:
(1)   11/   E8074 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8074 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8074 : EF00                                dc.b    $EF,$00
(1)   12/   E8076 : B007 E7AD           	dc.b	nB3, $07, smpsNoAttack, nAb3
(1)   13/   E807A :                     
(1)   14/   E807A :                     Sound23_Hurt_Loop00:
(1)   15/   E807A : 01                  	dc.b	$01
(1)   16/   E807B : (MACRO)             	smpsAlterVol        $01
(1)   16/   E807B : E601                        dc.b    $E6,$01
(1)   17/   E807D : (MACRO)             	smpsLoop            $00, $2F, Sound23_Hurt_Loop00
(1)   17/   E807D : F7                          dc.b    $F7
(1)   17/   E807E : 002F                        dc.b    $00,$2F
(1)   17/   E8080 : 7A80                                dc.w    z80_ptr(SOUND23_HURT_LOOP00)
(1)   18/   E8082 : (MACRO)             	smpsStop
(1)   18/   E8082 : F2                          dc.b    $F2
(1)   19/   E8083 :                     
(1)   20/   E8083 :                     Sound23_Hurt_Voices:
(1)   21/   E8083 :                     ;	Voice $00
(1)   22/   E8083 :                     ;	$30
(1)   23/   E8083 :                     ;	$30, $30, $30, $30, 	$9E, $D8, $DC, $DC, 	$0E, $0A, $04, $05
(1)   24/   E8083 :                     ;	$08, $08, $08, $08, 	$BF, $BF, $BF, $BF, 	$14, $3C, $14, $80
(1)   25/   E8083 : (MACRO)             	smpsVcAlgorithm     $00
(1)   25/   E8083 : =$0                 vcAlgorithm set $00
(1)   26/   E8083 : (MACRO)             	smpsVcFeedback      $06
(1)   26/   E8083 : =$6                 vcFeedback set $06
(1)   27/   E8083 : (MACRO)             	smpsVcUnusedBits    $00
(1)   27/   E8083 : =$0                 vcUnusedBits set $00
(1)   27/   E8083 : =$0                 vcD1R1Unk set 0
(1)   27/   E8083 : =$0                 vcD1R2Unk set 0
(1)   27/   E8083 : =$0                 vcD1R3Unk set 0
(1)   27/   E8083 : =$0                 vcD1R4Unk set 0
(1)   28/   E8083 : (MACRO)             	smpsVcDetune        $03, $03, $03, $03
(1)   28/   E8083 : =$3                 vcDT1 set $03
(1)   28/   E8083 : =$3                 vcDT2 set $03
(1)   28/   E8083 : =$3                 vcDT3 set $03
(1)   28/   E8083 : =$3                 vcDT4 set $03
(1)   29/   E8083 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   29/   E8083 : =$0                 vcCF1 set $00
(1)   29/   E8083 : =$0                 vcCF2 set $00
(1)   29/   E8083 : =$0                 vcCF3 set $00
(1)   29/   E8083 : =$0                 vcCF4 set $00
(1)   30/   E8083 : (MACRO)             	smpsVcRateScale     $03, $03, $03, $02
(1)   30/   E8083 : =$3                 vcRS1 set $03
(1)   30/   E8083 : =$3                 vcRS2 set $03
(1)   30/   E8083 : =$3                 vcRS3 set $03
(1)   30/   E8083 : =$2                 vcRS4 set $02
(1)   31/   E8083 : (MACRO)             	smpsVcAttackRate    $1C, $1C, $18, $1E
(1)   31/   E8083 : =$1C                vcAR1 set $1C
(1)   31/   E8083 : =$1C                vcAR2 set $1C
(1)   31/   E8083 : =$18                vcAR3 set $18
(1)   31/   E8083 : =$1E                vcAR4 set $1E
(1)   32/   E8083 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   32/   E8083 : =$0                 vcAM1 set $00<<5
(1)   32/   E8083 : =$0                 vcAM2 set $00<<5
(1)   32/   E8083 : =$0                 vcAM3 set $00<<5
(1)   32/   E8083 : =$0                 vcAM4 set $00<<5
(1)   33/   E8083 : (MACRO)             	smpsVcDecayRate1    $05, $04, $0A, $0E
(1)   33/   E8083 : =$5                 vcD1R1 set $05
(1)   33/   E8083 : =$4                 vcD1R2 set $04
(1)   33/   E8083 : =$A                 vcD1R3 set $0A
(1)   33/   E8083 : =$E                 vcD1R4 set $0E
(1)   34/   E8083 : (MACRO)             	smpsVcDecayRate2    $08, $08, $08, $08
(1)   34/   E8083 : =$8                 vcD2R1 set $08
(1)   34/   E8083 : =$8                 vcD2R2 set $08
(1)   34/   E8083 : =$8                 vcD2R3 set $08
(1)   34/   E8083 : =$8                 vcD2R4 set $08
(1)   35/   E8083 : (MACRO)             	smpsVcDecayLevel    $0B, $0B, $0B, $0B
(1)   35/   E8083 : =$B                 vcDL1 set $0B
(1)   35/   E8083 : =$B                 vcDL2 set $0B
(1)   35/   E8083 : =$B                 vcDL3 set $0B
(1)   35/   E8083 : =$B                 vcDL4 set $0B
(1)   36/   E8083 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   36/   E8083 : =$F                 vcRR1 set $0F
(1)   36/   E8083 : =$F                 vcRR2 set $0F
(1)   36/   E8083 : =$F                 vcRR3 set $0F
(1)   36/   E8083 : =$F                 vcRR4 set $0F
(1)   37/   E8083 : (MACRO)             	smpsVcTotalLevel    $00, $14, $3C, $14
(1)   37/   E8083 : =$0                 vcTL1 set $00
(1)   37/   E8083 : =$14                vcTL2 set $14
(1)   37/   E8083 : =$3C                vcTL3 set $3C
(1)   37/   E8083 : =$14                vcTL4 set $14
(1)   37/   E8083 : 30                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   37/   E8084 :                     ;   0     1     2     3     4     5     6     7
(1)   37/   E8084 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   37/   E8084 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   37/   E8084 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   37/   E8084 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   37/   E8084 : =$80                vcTLMask1 set $80
(1)   37/   E8084 :                     
(1)   37/   E8084 :                     
(1)   37/   E8084 : 3030 3030                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   37/   E8088 : 9ED8 DCDC                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   37/   E808C : 0E0A 0405                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   37/   E8090 : 0808 0808                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   37/   E8094 : BFBF BFBF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   37/   E8098 : 143C 1480                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   38/   E809C :                     
(1)   39/   E809C :                     
  519/   E809C :                        Sound24:	include "sfx-improved/A4 - Skidding.asm"
(1)    1/   E809C :                     Sound24_Skidding_Header:
(1)    2/   E809C : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E809C :                     
(1)    2/   E809C : =$3                 SourceDriver set 3
(1)    2/   E809C :                     
(1)    2/   E809C : =$0                 SourceSMPS2ASM set 0
(1)    2/   E809C :                     
(1)    2/   E809C : =$E809C             songStart set *
(1)    2/   E809C :                     
(1)    2/   E809C :                     
(1)    3/   E809C : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E809C : 0000                        dc.w    $0000
(1)    4/   E809E : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E809E : 01                          dc.b    $01
(1)    5/   E809F : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E809F : 02                          dc.b    $02
(1)    6/   E80A0 :                     
(1)    7/   E80A0 : (MACRO)             	smpsHeaderSFXChannel cPSG2, Sound24_Skidding_PSG2,	$F4, $00
(1)    7/   E80A0 : 80A0                        dc.b    $80,CPSG2
(1)    7/   E80A2 :  (MACRO-2)                  CheckedChannelPointer SOUND24_SKIDDING_PSG2
(1)    7/   E80A2 : AC80                                dc.w    z80_ptr(SOUND24_SKIDDING_PSG2)
(1)    7/   E80A4 :  (MACRO-2)                          PSGPitchConvert $F4
(1)    7/   E80A4 : F4                                  dc.b    $F4
(1)    7/   E80A5 : 00                          dc.b    $00
(1)    8/   E80A6 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound24_Skidding_PSG3,	$F4, $00
(1)    8/   E80A6 : 80C0                        dc.b    $80,CPSG3
(1)    8/   E80A8 :  (MACRO-2)                  CheckedChannelPointer SOUND24_SKIDDING_PSG3
(1)    8/   E80A8 : BE80                                dc.w    z80_ptr(SOUND24_SKIDDING_PSG3)
(1)    8/   E80AA :  (MACRO-2)                          PSGPitchConvert $F4
(1)    8/   E80AA : F4                                  dc.b    $F4
(1)    8/   E80AB : 00                          dc.b    $00
(1)    9/   E80AC :                     
(1)   10/   E80AC :                     ; PSG2 Data
(1)   11/   E80AC :                     Sound24_Skidding_PSG2:
(1)   12/   E80AC : (MACRO)             	smpsPSGvoice        $00
(1)   12/   E80AC : F500                        dc.b    $F5,$00
(1)   13/   E80AE : AF01 80AF 8003      	dc.b	nBb3, $01, nRst, nBb3, nRst, $03
(1)   14/   E80B4 :                     
(1)   15/   E80B4 :                     Sound24_Skidding_Loop01:
(1)   16/   E80B4 : AF01 8001           	dc.b	nBb3, $01, nRst, $01
(1)   17/   E80B8 : (MACRO)             	smpsLoop            $00, $0B, Sound24_Skidding_Loop01
(1)   17/   E80B8 : F7                          dc.b    $F7
(1)   17/   E80B9 : 000B                        dc.b    $00,$0B
(1)   17/   E80BB : B480                                dc.w    z80_ptr(SOUND24_SKIDDING_LOOP01)
(1)   18/   E80BD : (MACRO)             	smpsStop
(1)   18/   E80BD : F2                          dc.b    $F2
(1)   19/   E80BE :                     
(1)   20/   E80BE :                     ; PSG3 Data
(1)   21/   E80BE :                     Sound24_Skidding_PSG3:
(1)   22/   E80BE : (MACRO)             	smpsPSGvoice        $00
(1)   22/   E80BE : F500                        dc.b    $F5,$00
(1)   23/   E80C0 : 8001 AD80 AD80 03   	dc.b	nRst, $01, nAb3, nRst, nAb3, nRst, $03
(1)   24/   E80C7 :                     
(1)   25/   E80C7 :                     Sound24_Skidding_Loop00:
(1)   26/   E80C7 : AD01 8001           	dc.b	nAb3, $01, nRst, $01
(1)   27/   E80CB : (MACRO)             	smpsLoop            $00, $0B, Sound24_Skidding_Loop00
(1)   27/   E80CB : F7                          dc.b    $F7
(1)   27/   E80CC : 000B                        dc.b    $00,$0B
(1)   27/   E80CE : C780                                dc.w    z80_ptr(SOUND24_SKIDDING_LOOP00)
(1)   28/   E80D0 : (MACRO)             	smpsStop
(1)   28/   E80D0 : F2                          dc.b    $F2
(1)   29/   E80D1 :                     
  520/   E80D1 :                        Sound25:	include "sfx-improved/A5 - Block Push.asm"
(1)    1/   E80D1 :                     Sound25_BlockPush_Header:
(1)    2/   E80D1 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E80D1 :                     
(1)    2/   E80D1 : =$3                 SourceDriver set 3
(1)    2/   E80D1 :                     
(1)    2/   E80D1 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E80D1 :                     
(1)    2/   E80D1 : =$E80D1             songStart set *
(1)    2/   E80D1 :                     
(1)    2/   E80D1 :                     
(1)    3/   E80D1 : (MACRO)             	smpsHeaderVoice     Sound25_BlockPush_Voices
(1)    3/   E80D1 : E480                                dc.w    z80_ptr(SOUND25_BLOCKPUSH_VOICES)
(1)    4/   E80D3 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E80D3 : 01                          dc.b    $01
(1)    5/   E80D4 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E80D4 : 01                          dc.b    $01
(1)    6/   E80D5 :                     
(1)    7/   E80D5 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound25_BlockPush_FM5,	$00, $00
(1)    7/   E80D5 : 8005                        dc.b    $80,CFM5
(1)    7/   E80D7 :  (MACRO-2)                  CheckedChannelPointer SOUND25_BLOCKPUSH_FM5
(1)    7/   E80D7 : DB80                                dc.w    z80_ptr(SOUND25_BLOCKPUSH_FM5)
(1)    7/   E80D9 : 00                                  dc.b    $00
(1)    7/   E80DA : 00                          dc.b    $00
(1)    8/   E80DB :                     
(1)    9/   E80DB :                     ; FM5 Data
(1)   10/   E80DB :                     Sound25_BlockPush_FM5:
(1)   11/   E80DB : (MACRO)             	smpsSetvoice        $00
(1)   11/   E80DB :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E80DB : EF00                                dc.b    $EF,$00
(1)   12/   E80DD : 8001 8B0A 8002      	dc.b	nRst, $01, nBb0, $0A, nRst, $02
(1)   13/   E80E3 : (MACRO)             	smpsStop
(1)   13/   E80E3 : F2                          dc.b    $F2
(1)   14/   E80E4 :                     
(1)   15/   E80E4 :                     Sound25_BlockPush_Voices:
(1)   16/   E80E4 :                     ;	Voice $00
(1)   17/   E80E4 :                     ;	$FA
(1)   18/   E80E4 :                     ;	$21, $30, $10, $32, 	$2F, $1F, $2F, $2F, 	$05, $08, $09, $02
(1)   19/   E80E4 :                     ;	$06, $0F, $06, $02, 	$1F, $2F, $4F, $2F, 	$0F, $1A, $0E, $80
(1)   20/   E80E4 : (MACRO)             	smpsVcAlgorithm     $02
(1)   20/   E80E4 : =$2                 vcAlgorithm set $02
(1)   21/   E80E4 : (MACRO)             	smpsVcFeedback      $07
(1)   21/   E80E4 : =$7                 vcFeedback set $07
(1)   22/   E80E4 : (MACRO)             	smpsVcUnusedBits    $03
(1)   22/   E80E4 : =$3                 vcUnusedBits set $03
(1)   22/   E80E4 : =$0                 vcD1R1Unk set 0
(1)   22/   E80E4 : =$0                 vcD1R2Unk set 0
(1)   22/   E80E4 : =$0                 vcD1R3Unk set 0
(1)   22/   E80E4 : =$0                 vcD1R4Unk set 0
(1)   23/   E80E4 : (MACRO)             	smpsVcDetune        $03, $01, $03, $02
(1)   23/   E80E4 : =$3                 vcDT1 set $03
(1)   23/   E80E4 : =$1                 vcDT2 set $01
(1)   23/   E80E4 : =$3                 vcDT3 set $03
(1)   23/   E80E4 : =$2                 vcDT4 set $02
(1)   24/   E80E4 : (MACRO)             	smpsVcCoarseFreq    $02, $00, $00, $01
(1)   24/   E80E4 : =$2                 vcCF1 set $02
(1)   24/   E80E4 : =$0                 vcCF2 set $00
(1)   24/   E80E4 : =$0                 vcCF3 set $00
(1)   24/   E80E4 : =$1                 vcCF4 set $01
(1)   25/   E80E4 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E80E4 : =$0                 vcRS1 set $00
(1)   25/   E80E4 : =$0                 vcRS2 set $00
(1)   25/   E80E4 : =$0                 vcRS3 set $00
(1)   25/   E80E4 : =$0                 vcRS4 set $00
(1)   26/   E80E4 : (MACRO)             	smpsVcAttackRate    $2F, $2F, $1F, $2F
(1)   26/   E80E4 : =$2F                vcAR1 set $2F
(1)   26/   E80E4 : =$2F                vcAR2 set $2F
(1)   26/   E80E4 : =$1F                vcAR3 set $1F
(1)   26/   E80E4 : =$2F                vcAR4 set $2F
(1)   27/   E80E4 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E80E4 : =$0                 vcAM1 set $00<<5
(1)   27/   E80E4 : =$0                 vcAM2 set $00<<5
(1)   27/   E80E4 : =$0                 vcAM3 set $00<<5
(1)   27/   E80E4 : =$0                 vcAM4 set $00<<5
(1)   28/   E80E4 : (MACRO)             	smpsVcDecayRate1    $02, $09, $08, $05
(1)   28/   E80E4 : =$2                 vcD1R1 set $02
(1)   28/   E80E4 : =$9                 vcD1R2 set $09
(1)   28/   E80E4 : =$8                 vcD1R3 set $08
(1)   28/   E80E4 : =$5                 vcD1R4 set $05
(1)   29/   E80E4 : (MACRO)             	smpsVcDecayRate2    $02, $06, $0F, $06
(1)   29/   E80E4 : =$2                 vcD2R1 set $02
(1)   29/   E80E4 : =$6                 vcD2R2 set $06
(1)   29/   E80E4 : =$F                 vcD2R3 set $0F
(1)   29/   E80E4 : =$6                 vcD2R4 set $06
(1)   30/   E80E4 : (MACRO)             	smpsVcDecayLevel    $02, $04, $02, $01
(1)   30/   E80E4 : =$2                 vcDL1 set $02
(1)   30/   E80E4 : =$4                 vcDL2 set $04
(1)   30/   E80E4 : =$2                 vcDL3 set $02
(1)   30/   E80E4 : =$1                 vcDL4 set $01
(1)   31/   E80E4 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E80E4 : =$F                 vcRR1 set $0F
(1)   31/   E80E4 : =$F                 vcRR2 set $0F
(1)   31/   E80E4 : =$F                 vcRR3 set $0F
(1)   31/   E80E4 : =$F                 vcRR4 set $0F
(1)   32/   E80E4 : (MACRO)             	smpsVcTotalLevel    $00, $0E, $1A, $0F
(1)   32/   E80E4 : =$0                 vcTL1 set $00
(1)   32/   E80E4 : =$E                 vcTL2 set $0E
(1)   32/   E80E4 : =$1A                vcTL3 set $1A
(1)   32/   E80E4 : =$F                 vcTL4 set $0F
(1)   32/   E80E4 : FA                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E80E5 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E80E5 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E80E5 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E80E5 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E80E5 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E80E5 : =$80                vcTLMask1 set $80
(1)   32/   E80E5 :                     
(1)   32/   E80E5 :                     
(1)   32/   E80E5 : 2130 1032                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E80E9 : 2F1F 2F2F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E80ED : 0508 0902                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E80F1 : 060F 0602                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E80F5 : 1F2F 4F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E80F9 : 0F1A 0E80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E80FD :                     
(1)   34/   E80FD :                     
  521/   E80FD :                        Sound26:	include "sfx-improved/A6 - Hurt by Spikes.asm"
(1)    1/   E80FD :                     Sound26_HurtBySpikes_Header:
(1)    2/   E80FD : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E80FD :                     
(1)    2/   E80FD : =$3                 SourceDriver set 3
(1)    2/   E80FD :                     
(1)    2/   E80FD : =$0                 SourceSMPS2ASM set 0
(1)    2/   E80FD :                     
(1)    2/   E80FD : =$E80FD             songStart set *
(1)    2/   E80FD :                     
(1)    2/   E80FD :                     
(1)    3/   E80FD : (MACRO)             	smpsHeaderVoice     Sound26_HurtBySpikes_Voices
(1)    3/   E80FD : 1381                                dc.w    z80_ptr(SOUND26_HURTBYSPIKES_VOICES)
(1)    4/   E80FF : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E80FF : 01                          dc.b    $01
(1)    5/   E8100 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8100 : 01                          dc.b    $01
(1)    6/   E8101 :                     
(1)    7/   E8101 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound26_HurtBySpikes_FM5,	$F2, $00
(1)    7/   E8101 : 8005                        dc.b    $80,CFM5
(1)    7/   E8103 :  (MACRO-2)                  CheckedChannelPointer SOUND26_HURTBYSPIKES_FM5
(1)    7/   E8103 : 0781                                dc.w    z80_ptr(SOUND26_HURTBYSPIKES_FM5)
(1)    7/   E8105 : F2                                  dc.b    $F2
(1)    7/   E8106 : 00                          dc.b    $00
(1)    8/   E8107 :                     
(1)    9/   E8107 :                     ; FM5 Data
(1)   10/   E8107 :                     Sound26_HurtBySpikes_FM5:
(1)   11/   E8107 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8107 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8107 : EF00                                dc.b    $EF,$00
(1)   12/   E8109 : (MACRO)             	smpsModSet          $01, $01, $10, $FF
(1)   12/   E8109 : F0                          dc.b    $F0
(1)   12/   E810A : 0101 10FF                           dc.b    $01,$01,$10,$FF
(1)   12/   E810E :                             ;dc.b   $01,$10,$FF
(1)   13/   E810E : CF05 D725           	dc.b	nFs6, $05, nD7, $25
(1)   14/   E8112 : (MACRO)             	smpsStop
(1)   14/   E8112 : F2                          dc.b    $F2
(1)   15/   E8113 :                     
(1)   16/   E8113 :                     Sound26_HurtBySpikes_Voices:
(1)   17/   E8113 :                     ;	Voice $00
(1)   18/   E8113 :                     ;	$3B
(1)   19/   E8113 :                     ;	$3C, $39, $30, $31, 	$DF, $1F, $1F, $DF, 	$04, $05, $04, $01
(1)   20/   E8113 :                     ;	$04, $04, $04, $02, 	$FF, $0F, $1F, $AF, 	$29, $20, $0F, $80
(1)   21/   E8113 : (MACRO)             	smpsVcAlgorithm     $03
(1)   21/   E8113 : =$3                 vcAlgorithm set $03
(1)   22/   E8113 : (MACRO)             	smpsVcFeedback      $07
(1)   22/   E8113 : =$7                 vcFeedback set $07
(1)   23/   E8113 : (MACRO)             	smpsVcUnusedBits    $00
(1)   23/   E8113 : =$0                 vcUnusedBits set $00
(1)   23/   E8113 : =$0                 vcD1R1Unk set 0
(1)   23/   E8113 : =$0                 vcD1R2Unk set 0
(1)   23/   E8113 : =$0                 vcD1R3Unk set 0
(1)   23/   E8113 : =$0                 vcD1R4Unk set 0
(1)   24/   E8113 : (MACRO)             	smpsVcDetune        $03, $03, $03, $03
(1)   24/   E8113 : =$3                 vcDT1 set $03
(1)   24/   E8113 : =$3                 vcDT2 set $03
(1)   24/   E8113 : =$3                 vcDT3 set $03
(1)   24/   E8113 : =$3                 vcDT4 set $03
(1)   25/   E8113 : (MACRO)             	smpsVcCoarseFreq    $01, $00, $09, $0C
(1)   25/   E8113 : =$1                 vcCF1 set $01
(1)   25/   E8113 : =$0                 vcCF2 set $00
(1)   25/   E8113 : =$9                 vcCF3 set $09
(1)   25/   E8113 : =$C                 vcCF4 set $0C
(1)   26/   E8113 : (MACRO)             	smpsVcRateScale     $03, $00, $00, $03
(1)   26/   E8113 : =$3                 vcRS1 set $03
(1)   26/   E8113 : =$0                 vcRS2 set $00
(1)   26/   E8113 : =$0                 vcRS3 set $00
(1)   26/   E8113 : =$3                 vcRS4 set $03
(1)   27/   E8113 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   27/   E8113 : =$1F                vcAR1 set $1F
(1)   27/   E8113 : =$1F                vcAR2 set $1F
(1)   27/   E8113 : =$1F                vcAR3 set $1F
(1)   27/   E8113 : =$1F                vcAR4 set $1F
(1)   28/   E8113 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   28/   E8113 : =$0                 vcAM1 set $00<<5
(1)   28/   E8113 : =$0                 vcAM2 set $00<<5
(1)   28/   E8113 : =$0                 vcAM3 set $00<<5
(1)   28/   E8113 : =$0                 vcAM4 set $00<<5
(1)   29/   E8113 : (MACRO)             	smpsVcDecayRate1    $01, $04, $05, $04
(1)   29/   E8113 : =$1                 vcD1R1 set $01
(1)   29/   E8113 : =$4                 vcD1R2 set $04
(1)   29/   E8113 : =$5                 vcD1R3 set $05
(1)   29/   E8113 : =$4                 vcD1R4 set $04
(1)   30/   E8113 : (MACRO)             	smpsVcDecayRate2    $02, $04, $04, $04
(1)   30/   E8113 : =$2                 vcD2R1 set $02
(1)   30/   E8113 : =$4                 vcD2R2 set $04
(1)   30/   E8113 : =$4                 vcD2R3 set $04
(1)   30/   E8113 : =$4                 vcD2R4 set $04
(1)   31/   E8113 : (MACRO)             	smpsVcDecayLevel    $0A, $01, $00, $0F
(1)   31/   E8113 : =$A                 vcDL1 set $0A
(1)   31/   E8113 : =$1                 vcDL2 set $01
(1)   31/   E8113 : =$0                 vcDL3 set $00
(1)   31/   E8113 : =$F                 vcDL4 set $0F
(1)   32/   E8113 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   32/   E8113 : =$F                 vcRR1 set $0F
(1)   32/   E8113 : =$F                 vcRR2 set $0F
(1)   32/   E8113 : =$F                 vcRR3 set $0F
(1)   32/   E8113 : =$F                 vcRR4 set $0F
(1)   33/   E8113 : (MACRO)             	smpsVcTotalLevel    $00, $0F, $20, $29
(1)   33/   E8113 : =$0                 vcTL1 set $00
(1)   33/   E8113 : =$F                 vcTL2 set $0F
(1)   33/   E8113 : =$20                vcTL3 set $20
(1)   33/   E8113 : =$29                vcTL4 set $29
(1)   33/   E8113 : 3B                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   33/   E8114 :                     ;   0     1     2     3     4     5     6     7
(1)   33/   E8114 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   33/   E8114 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   33/   E8114 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   33/   E8114 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   33/   E8114 : =$80                vcTLMask1 set $80
(1)   33/   E8114 :                     
(1)   33/   E8114 :                     
(1)   33/   E8114 : 3C39 3031                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   33/   E8118 : DF1F 1FDF                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   33/   E811C : 0405 0401                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   33/   E8120 : 0404 0402                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   33/   E8124 : FF0F 1FAF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   33/   E8128 : 2920 0F80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   34/   E812C :                     
(1)   35/   E812C :                     
  522/   E812C :                        Sound27:	include "sfx-improved/A7 - Sparkle.asm"
(1)    1/   E812C :                     Sound27_Sparkle_Header:
(1)    2/   E812C : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E812C :                     
(1)    2/   E812C : =$3                 SourceDriver set 3
(1)    2/   E812C :                     
(1)    2/   E812C : =$1                 SourceSMPS2ASM set 1
(1)    2/   E812C :                     
(1)    2/   E812C : =$E812C             songStart set *
(1)    2/   E812C :                     
(1)    2/   E812C :                     
(1)    3/   E812C : (MACRO)             	smpsHeaderVoice     Sound27_Sparkle_Voices
(1)    3/   E812C : 3F81                                dc.w    z80_ptr(SOUND27_SPARKLE_VOICES)
(1)    4/   E812E : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E812E : 01                          dc.b    $01
(1)    5/   E812F : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E812F : 01                          dc.b    $01
(1)    6/   E8130 :                     
(1)    7/   E8130 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound27_Sparkle_FM4,	$0C, $1C
(1)    7/   E8130 : 8004                        dc.b    $80,CFM4
(1)    7/   E8132 :  (MACRO-2)                  CheckedChannelPointer SOUND27_SPARKLE_FM4
(1)    7/   E8132 : 3681                                dc.w    z80_ptr(SOUND27_SPARKLE_FM4)
(1)    7/   E8134 : 0C                                  dc.b    $0C
(1)    7/   E8135 : 1C                          dc.b    $1C
(1)    8/   E8136 :                     
(1)    9/   E8136 :                     ; FM4 Data
(1)   10/   E8136 :                     Sound27_Sparkle_FM4:
(1)   11/   E8136 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8136 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8136 : EF00                                dc.b    $EF,$00
(1)   12/   E8138 : C105 C405 C92B      	dc.b	nE5, $05, nG5, $05, nC6, $2B
(1)   13/   E813E : (MACRO)             	smpsStop
(1)   13/   E813E : F2                          dc.b    $F2
(1)   14/   E813F :                     
(1)   15/   E813F :                     Sound27_Sparkle_Voices:
(1)   16/   E813F :                     ;	Voice $00
(1)   17/   E813F :                     ;	$07
(1)   18/   E813F :                     ;	$73, $33, $33, $73, 	$0F, $14, $19, $1A, 	$0A, $0A, $0A, $0A
(1)   19/   E813F :                     ;	$0A, $0A, $0A, $0A, 	$57, $57, $57, $57, 	$00, $00, $00, $00
(1)   20/   E813F : (MACRO)             	smpsVcAlgorithm     $07
(1)   20/   E813F : =$7                 vcAlgorithm set $07
(1)   21/   E813F : (MACRO)             	smpsVcFeedback      $00
(1)   21/   E813F : =$0                 vcFeedback set $00
(1)   22/   E813F : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E813F : =$0                 vcUnusedBits set $00
(1)   22/   E813F : =$0                 vcD1R1Unk set 0
(1)   22/   E813F : =$0                 vcD1R2Unk set 0
(1)   22/   E813F : =$0                 vcD1R3Unk set 0
(1)   22/   E813F : =$0                 vcD1R4Unk set 0
(1)   23/   E813F : (MACRO)             	smpsVcDetune        $07, $03, $03, $07
(1)   23/   E813F : =$7                 vcDT1 set $07
(1)   23/   E813F : =$3                 vcDT2 set $03
(1)   23/   E813F : =$3                 vcDT3 set $03
(1)   23/   E813F : =$7                 vcDT4 set $07
(1)   24/   E813F : (MACRO)             	smpsVcCoarseFreq    $03, $03, $03, $03
(1)   24/   E813F : =$3                 vcCF1 set $03
(1)   24/   E813F : =$3                 vcCF2 set $03
(1)   24/   E813F : =$3                 vcCF3 set $03
(1)   24/   E813F : =$3                 vcCF4 set $03
(1)   25/   E813F : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E813F : =$0                 vcRS1 set $00
(1)   25/   E813F : =$0                 vcRS2 set $00
(1)   25/   E813F : =$0                 vcRS3 set $00
(1)   25/   E813F : =$0                 vcRS4 set $00
(1)   26/   E813F : (MACRO)             	smpsVcAttackRate    $1A, $19, $14, $0F
(1)   26/   E813F : =$1A                vcAR1 set $1A
(1)   26/   E813F : =$19                vcAR2 set $19
(1)   26/   E813F : =$14                vcAR3 set $14
(1)   26/   E813F : =$F                 vcAR4 set $0F
(1)   27/   E813F : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E813F : =$0                 vcAM1 set $00<<7
(1)   27/   E813F : =$0                 vcAM2 set $00<<7
(1)   27/   E813F : =$0                 vcAM3 set $00<<7
(1)   27/   E813F : =$0                 vcAM4 set $00<<7
(1)   28/   E813F : (MACRO)             	smpsVcDecayRate1    $0A, $0A, $0A, $0A
(1)   28/   E813F : =$A                 vcD1R1 set $0A
(1)   28/   E813F : =$A                 vcD1R2 set $0A
(1)   28/   E813F : =$A                 vcD1R3 set $0A
(1)   28/   E813F : =$A                 vcD1R4 set $0A
(1)   29/   E813F : (MACRO)             	smpsVcDecayRate2    $0A, $0A, $0A, $0A
(1)   29/   E813F : =$A                 vcD2R1 set $0A
(1)   29/   E813F : =$A                 vcD2R2 set $0A
(1)   29/   E813F : =$A                 vcD2R3 set $0A
(1)   29/   E813F : =$A                 vcD2R4 set $0A
(1)   30/   E813F : (MACRO)             	smpsVcDecayLevel    $05, $05, $05, $05
(1)   30/   E813F : =$5                 vcDL1 set $05
(1)   30/   E813F : =$5                 vcDL2 set $05
(1)   30/   E813F : =$5                 vcDL3 set $05
(1)   30/   E813F : =$5                 vcDL4 set $05
(1)   31/   E813F : (MACRO)             	smpsVcReleaseRate   $07, $07, $07, $07
(1)   31/   E813F : =$7                 vcRR1 set $07
(1)   31/   E813F : =$7                 vcRR2 set $07
(1)   31/   E813F : =$7                 vcRR3 set $07
(1)   31/   E813F : =$7                 vcRR4 set $07
(1)   32/   E813F : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $00
(1)   32/   E813F : =$0                 vcTL1 set $00
(1)   32/   E813F : =$0                 vcTL2 set $00
(1)   32/   E813F : =$0                 vcTL3 set $00
(1)   32/   E813F : =$0                 vcTL4 set $00
(1)   32/   E813F : 07                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8140 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8140 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8140 : =$0                 vcTLMask4 set 0
(1)   32/   E8140 : =$0                 vcTLMask3 set 0
(1)   32/   E8140 : =$0                 vcTLMask2 set 0
(1)   32/   E8140 : =$0                 vcTLMask1 set 0
(1)   32/   E8140 :                     
(1)   32/   E8140 :                     
(1)   32/   E8140 : 7333 3373                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8144 : 0F14 191A                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8148 : 0A0A 0A0A                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E814C : 0A0A 0A0A                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8150 : 5757 5757                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8154 : 0000 0000                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8158 :                     
(1)   34/   E8158 :                     
  523/   E8158 :                        Sound28:	include "sfx-improved/A8 - Beep.asm"
(1)    1/   E8158 :                     Sound28_Beep_Header:
(1)    2/   E8158 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8158 :                     
(1)    2/   E8158 : =$3                 SourceDriver set 3
(1)    2/   E8158 :                     
(1)    2/   E8158 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8158 :                     
(1)    2/   E8158 : =$E8158             songStart set *
(1)    2/   E8158 :                     
(1)    2/   E8158 :                     
(1)    3/   E8158 : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E8158 : 0000                        dc.w    $0000
(1)    4/   E815A : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E815A : 01                          dc.b    $01
(1)    5/   E815B : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E815B : 01                          dc.b    $01
(1)    6/   E815C :                     
(1)    7/   E815C : (MACRO)             	smpsHeaderSFXChannel cPSG1, Sound28_Beep_PSG1,	$E8, $03
(1)    7/   E815C : 8080                        dc.b    $80,CPSG1
(1)    7/   E815E :  (MACRO-2)                  CheckedChannelPointer SOUND28_BEEP_PSG1
(1)    7/   E815E : 6281                                dc.w    z80_ptr(SOUND28_BEEP_PSG1)
(1)    7/   E8160 :  (MACRO-2)                          PSGPitchConvert $E8
(1)    7/   E8160 : E8                                  dc.b    $E8
(1)    7/   E8161 : 03                          dc.b    $03
(1)    8/   E8162 :                     
(1)    9/   E8162 :                     ; PSG1 Data
(1)   10/   E8162 :                     Sound28_Beep_PSG1:
(1)   11/   E8162 : (MACRO)             	smpsPSGvoice        fTone_04
(1)   11/   E8162 : F504                        dc.b    $F5,FTONE_04
(1)   12/   E8164 : CB04                	dc.b	nD6, $04
(1)   13/   E8166 : (MACRO)             	smpsStop
(1)   13/   E8166 : F2                          dc.b    $F2
(1)   14/   E8167 :                     
  524/   E8167 :                        Sound29:	include "sfx-improved/A9 - Special Stage Item (Unused).asm"
(1)    1/   E8167 :                     Sound29_Bwoop_Header:
(1)    2/   E8167 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8167 :                     
(1)    2/   E8167 : =$3                 SourceDriver set 3
(1)    2/   E8167 :                     
(1)    2/   E8167 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8167 :                     
(1)    2/   E8167 : =$E8167             songStart set *
(1)    2/   E8167 :                     
(1)    2/   E8167 :                     
(1)    3/   E8167 : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E8167 : 0000                        dc.w    $0000
(1)    4/   E8169 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8169 : 01                          dc.b    $01
(1)    5/   E816A : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E816A : 01                          dc.b    $01
(1)    6/   E816B :                     
(1)    7/   E816B : (MACRO)             	smpsHeaderSFXChannel cPSG2, Sound29_Bwoop_PSG2,	$00, $00
(1)    7/   E816B : 80A0                        dc.b    $80,CPSG2
(1)    7/   E816D :  (MACRO-2)                  CheckedChannelPointer SOUND29_BWOOP_PSG2
(1)    7/   E816D : 7181                                dc.w    z80_ptr(SOUND29_BWOOP_PSG2)
(1)    7/   E816F :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E816F : 00                                  dc.b    $00
(1)    7/   E8170 : 00                          dc.b    $00
(1)    8/   E8171 :                     
(1)    9/   E8171 :                     ; PSG2 Data
(1)   10/   E8171 :                     Sound29_Bwoop_PSG2:
(1)   11/   E8171 : (MACRO)             	smpsModSet          $01, $01, $E6, $35
(1)   11/   E8171 : F0                          dc.b    $F0
(1)   11/   E8172 : 0101 E635                           dc.b    $01,$01,$E6,$35
(1)   11/   E8176 :                             ;dc.b   $01,$E6,$35
(1)   12/   E8176 : 8E06                	dc.b	nCs1, $06
(1)   13/   E8178 : (MACRO)             	smpsStop
(1)   13/   E8178 : F2                          dc.b    $F2
(1)   14/   E8179 :                     
  525/   E8179 :                        Sound2A:	include "sfx-improved/AA - Splash.asm"
(1)    1/   E8179 :                     Sound2A_Splash_Header:
(1)    2/   E8179 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8179 :                     
(1)    2/   E8179 : =$3                 SourceDriver set 3
(1)    2/   E8179 :                     
(1)    2/   E8179 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8179 :                     
(1)    2/   E8179 : =$E8179             songStart set *
(1)    2/   E8179 :                     
(1)    2/   E8179 :                     
(1)    3/   E8179 : (MACRO)             	smpsHeaderVoice     Sound2A_Splash_Voices
(1)    3/   E8179 : A181                                dc.w    z80_ptr(SOUND2A_SPLASH_VOICES)
(1)    4/   E817B : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E817B : 01                          dc.b    $01
(1)    5/   E817C : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E817C : 02                          dc.b    $02
(1)    6/   E817D :                     
(1)    7/   E817D : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound2A_Splash_PSG3,	$00, $00
(1)    7/   E817D : 80C0                        dc.b    $80,CPSG3
(1)    7/   E817F :  (MACRO-2)                  CheckedChannelPointer SOUND2A_SPLASH_PSG3
(1)    7/   E817F : 8981                                dc.w    z80_ptr(SOUND2A_SPLASH_PSG3)
(1)    7/   E8181 :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E8181 : 00                                  dc.b    $00
(1)    7/   E8182 : 00                          dc.b    $00
(1)    8/   E8183 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound2A_Splash_FM5,	$00, $03
(1)    8/   E8183 : 8005                        dc.b    $80,CFM5
(1)    8/   E8185 :  (MACRO-2)                  CheckedChannelPointer SOUND2A_SPLASH_FM5
(1)    8/   E8185 : 9C81                                dc.w    z80_ptr(SOUND2A_SPLASH_FM5)
(1)    8/   E8187 : 00                                  dc.b    $00
(1)    8/   E8188 : 03                          dc.b    $03
(1)    9/   E8189 :                     
(1)   10/   E8189 :                     ; PSG3 Data
(1)   11/   E8189 :                     Sound2A_Splash_PSG3:
(1)   12/   E8189 : (MACRO)             	smpsPSGvoice        $00
(1)   12/   E8189 : F500                        dc.b    $F5,$00
(1)   13/   E818B : (MACRO)             	smpsPSGform         $E7
(1)   13/   E818B : F3E7                        dc.b    $F3,$E7
(1)   14/   E818D : C205 C705 E7        	dc.b	nF5, $05, nMaxPSG, $05, smpsNoAttack
(1)   15/   E8192 :                     
(1)   16/   E8192 :                     Sound2A_Splash_Loop00:
(1)   17/   E8192 : 07                  	dc.b	$07
(1)   18/   E8193 : (MACRO)             	smpsPSGAlterVol     $01
(1)   18/   E8193 : EC01                        dc.b    $EC,$01
(1)   19/   E8195 : E7                  	dc.b	smpsNoAttack
(1)   20/   E8196 : (MACRO)             	smpsLoop            $00, $0F, Sound2A_Splash_Loop00
(1)   20/   E8196 : F7                          dc.b    $F7
(1)   20/   E8197 : 000F                        dc.b    $00,$0F
(1)   20/   E8199 : 9281                                dc.w    z80_ptr(SOUND2A_SPLASH_LOOP00)
(1)   21/   E819B : (MACRO)             	smpsStop
(1)   21/   E819B : F2                          dc.b    $F2
(1)   22/   E819C :                     
(1)   23/   E819C :                     ; FM5 Data
(1)   24/   E819C :                     Sound2A_Splash_FM5:
(1)   25/   E819C : (MACRO)             	smpsSetvoice        $00
(1)   25/   E819C :  (MACRO-2)                  smpsFMvoice $00
(1)   25/   E819C : EF00                                dc.b    $EF,$00
(1)   26/   E819E : A614                	dc.b	nCs3, $14
(1)   27/   E81A0 : (MACRO)             	smpsStop
(1)   27/   E81A0 : F2                          dc.b    $F2
(1)   28/   E81A1 :                     
(1)   29/   E81A1 :                     Sound2A_Splash_Voices:
(1)   30/   E81A1 :                     ;	Voice $00
(1)   31/   E81A1 :                     ;	$00
(1)   32/   E81A1 :                     ;	$00, $03, $02, $00, 	$D9, $DF, $1F, $1F, 	$12, $11, $14, $0F
(1)   33/   E81A1 :                     ;	$0A, $00, $0A, $0D, 	$FF, $FF, $FF, $FF, 	$22, $07, $27, $80
(1)   34/   E81A1 : (MACRO)             	smpsVcAlgorithm     $00
(1)   34/   E81A1 : =$0                 vcAlgorithm set $00
(1)   35/   E81A1 : (MACRO)             	smpsVcFeedback      $00
(1)   35/   E81A1 : =$0                 vcFeedback set $00
(1)   36/   E81A1 : (MACRO)             	smpsVcUnusedBits    $00
(1)   36/   E81A1 : =$0                 vcUnusedBits set $00
(1)   36/   E81A1 : =$0                 vcD1R1Unk set 0
(1)   36/   E81A1 : =$0                 vcD1R2Unk set 0
(1)   36/   E81A1 : =$0                 vcD1R3Unk set 0
(1)   36/   E81A1 : =$0                 vcD1R4Unk set 0
(1)   37/   E81A1 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   37/   E81A1 : =$0                 vcDT1 set $00
(1)   37/   E81A1 : =$0                 vcDT2 set $00
(1)   37/   E81A1 : =$0                 vcDT3 set $00
(1)   37/   E81A1 : =$0                 vcDT4 set $00
(1)   38/   E81A1 : (MACRO)             	smpsVcCoarseFreq    $00, $02, $03, $00
(1)   38/   E81A1 : =$0                 vcCF1 set $00
(1)   38/   E81A1 : =$2                 vcCF2 set $02
(1)   38/   E81A1 : =$3                 vcCF3 set $03
(1)   38/   E81A1 : =$0                 vcCF4 set $00
(1)   39/   E81A1 : (MACRO)             	smpsVcRateScale     $00, $00, $03, $03
(1)   39/   E81A1 : =$0                 vcRS1 set $00
(1)   39/   E81A1 : =$0                 vcRS2 set $00
(1)   39/   E81A1 : =$3                 vcRS3 set $03
(1)   39/   E81A1 : =$3                 vcRS4 set $03
(1)   40/   E81A1 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $19
(1)   40/   E81A1 : =$1F                vcAR1 set $1F
(1)   40/   E81A1 : =$1F                vcAR2 set $1F
(1)   40/   E81A1 : =$1F                vcAR3 set $1F
(1)   40/   E81A1 : =$19                vcAR4 set $19
(1)   41/   E81A1 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   41/   E81A1 : =$0                 vcAM1 set $00<<5
(1)   41/   E81A1 : =$0                 vcAM2 set $00<<5
(1)   41/   E81A1 : =$0                 vcAM3 set $00<<5
(1)   41/   E81A1 : =$0                 vcAM4 set $00<<5
(1)   42/   E81A1 : (MACRO)             	smpsVcDecayRate1    $0F, $14, $11, $12
(1)   42/   E81A1 : =$F                 vcD1R1 set $0F
(1)   42/   E81A1 : =$14                vcD1R2 set $14
(1)   42/   E81A1 : =$11                vcD1R3 set $11
(1)   42/   E81A1 : =$12                vcD1R4 set $12
(1)   43/   E81A1 : (MACRO)             	smpsVcDecayRate2    $0D, $0A, $00, $0A
(1)   43/   E81A1 : =$D                 vcD2R1 set $0D
(1)   43/   E81A1 : =$A                 vcD2R2 set $0A
(1)   43/   E81A1 : =$0                 vcD2R3 set $00
(1)   43/   E81A1 : =$A                 vcD2R4 set $0A
(1)   44/   E81A1 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0F, $0F
(1)   44/   E81A1 : =$F                 vcDL1 set $0F
(1)   44/   E81A1 : =$F                 vcDL2 set $0F
(1)   44/   E81A1 : =$F                 vcDL3 set $0F
(1)   44/   E81A1 : =$F                 vcDL4 set $0F
(1)   45/   E81A1 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   45/   E81A1 : =$F                 vcRR1 set $0F
(1)   45/   E81A1 : =$F                 vcRR2 set $0F
(1)   45/   E81A1 : =$F                 vcRR3 set $0F
(1)   45/   E81A1 : =$F                 vcRR4 set $0F
(1)   46/   E81A1 : (MACRO)             	smpsVcTotalLevel    $00, $27, $07, $22
(1)   46/   E81A1 : =$0                 vcTL1 set $00
(1)   46/   E81A1 : =$27                vcTL2 set $27
(1)   46/   E81A1 : =$7                 vcTL3 set $07
(1)   46/   E81A1 : =$22                vcTL4 set $22
(1)   46/   E81A1 : 00                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   46/   E81A2 :                     ;   0     1     2     3     4     5     6     7
(1)   46/   E81A2 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   46/   E81A2 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   46/   E81A2 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   46/   E81A2 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   46/   E81A2 : =$80                vcTLMask1 set $80
(1)   46/   E81A2 :                     
(1)   46/   E81A2 :                     
(1)   46/   E81A2 : 0003 0200                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   46/   E81A6 : D9DF 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   46/   E81AA : 1211 140F                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   46/   E81AE : 0A00 0A0D                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   46/   E81B2 : FFFF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   46/   E81B6 : 2207 2780                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   47/   E81BA :                     
(1)   48/   E81BA :                     
  526/   E81BA :                        Sound2B:	include "sfx-improved/AB - Swish.asm"
(1)    1/   E81BA :                     Sound2B_Swish_Header:
(1)    2/   E81BA : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E81BA :                     
(1)    2/   E81BA : =$3                 SourceDriver set 3
(1)    2/   E81BA :                     
(1)    2/   E81BA : =$0                 SourceSMPS2ASM set 0
(1)    2/   E81BA :                     
(1)    2/   E81BA : =$E81BA             songStart set *
(1)    2/   E81BA :                     
(1)    2/   E81BA :                     
(1)    3/   E81BA : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E81BA : 0000                        dc.w    $0000
(1)    4/   E81BC : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E81BC : 01                          dc.b    $01
(1)    5/   E81BD : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E81BD : 01                          dc.b    $01
(1)    6/   E81BE :                     
(1)    7/   E81BE : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound2B_Swish_PSG3,	$00, $00
(1)    7/   E81BE : 80C0                        dc.b    $80,CPSG3
(1)    7/   E81C0 :  (MACRO-2)                  CheckedChannelPointer SOUND2B_SWISH_PSG3
(1)    7/   E81C0 : C481                                dc.w    z80_ptr(SOUND2B_SWISH_PSG3)
(1)    7/   E81C2 :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E81C2 : 00                                  dc.b    $00
(1)    7/   E81C3 : 00                          dc.b    $00
(1)    8/   E81C4 :                     
(1)    9/   E81C4 :                     ; PSG3 Data
(1)   10/   E81C4 :                     Sound2B_Swish_PSG3:
(1)   11/   E81C4 : (MACRO)             	smpsPSGvoice        $00
(1)   11/   E81C4 : F500                        dc.b    $F5,$00
(1)   12/   E81C6 : (MACRO)             	smpsPSGform         $E7
(1)   12/   E81C6 : F3E7                        dc.b    $F3,$E7
(1)   13/   E81C8 : C703 8003 C701 E7   	dc.b	nMaxPSG, $03, nRst, $03, nMaxPSG, $01, smpsNoAttack
(1)   14/   E81CF :                     
(1)   15/   E81CF :                     Sound2B_Swish_Loop00:
(1)   16/   E81CF : 01                  	dc.b	$01
(1)   17/   E81D0 : (MACRO)             	smpsPSGAlterVol     $01
(1)   17/   E81D0 : EC01                        dc.b    $EC,$01
(1)   18/   E81D2 : E7                  	dc.b	smpsNoAttack
(1)   19/   E81D3 : (MACRO)             	smpsLoop            $00, $15, Sound2B_Swish_Loop00
(1)   19/   E81D3 : F7                          dc.b    $F7
(1)   19/   E81D4 : 0015                        dc.b    $00,$15
(1)   19/   E81D6 : CF81                                dc.w    z80_ptr(SOUND2B_SWISH_LOOP00)
(1)   20/   E81D8 : (MACRO)             	smpsStop
(1)   20/   E81D8 : F2                          dc.b    $F2
(1)   21/   E81D9 :                     
  527/   E81D9 :                        Sound2C:	include "sfx-improved/AC - Boss Hit.asm"
(1)    1/   E81D9 :                     Sound2C_BossHit_Header:
(1)    2/   E81D9 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E81D9 :                     
(1)    2/   E81D9 : =$3                 SourceDriver set 3
(1)    2/   E81D9 :                     
(1)    2/   E81D9 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E81D9 :                     
(1)    2/   E81D9 : =$E81D9             songStart set *
(1)    2/   E81D9 :                     
(1)    2/   E81D9 :                     
(1)    3/   E81D9 : (MACRO)             	smpsHeaderVoice     Sound2C_39_4B_Voices
(1)    3/   E81D9 : F481                                dc.w    z80_ptr(SOUND2C_39_4B_VOICES)
(1)    4/   E81DB : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E81DB : 01                          dc.b    $01
(1)    5/   E81DC : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E81DC : 01                          dc.b    $01
(1)    6/   E81DD :                     
(1)    7/   E81DD : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound2C_BossHit_FM5,	$00, $00
(1)    7/   E81DD : 8005                        dc.b    $80,CFM5
(1)    7/   E81DF :  (MACRO-2)                  CheckedChannelPointer SOUND2C_BOSSHIT_FM5
(1)    7/   E81DF : E381                                dc.w    z80_ptr(SOUND2C_BOSSHIT_FM5)
(1)    7/   E81E1 : 00                                  dc.b    $00
(1)    7/   E81E2 : 00                          dc.b    $00
(1)    8/   E81E3 :                     
(1)    9/   E81E3 :                     ; FM5 Data
(1)   10/   E81E3 :                     Sound2C_BossHit_FM5:
(1)   11/   E81E3 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E81E3 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E81E3 : EF00                                dc.b    $EF,$00
(1)   12/   E81E5 : (MACRO)             	smpsModSet          $01, $01, $0C, $01
(1)   12/   E81E5 : F0                          dc.b    $F0
(1)   12/   E81E6 : 0101 0C01                           dc.b    $01,$01,$0C,$01
(1)   12/   E81EA :                             ;dc.b   $01,$0C,$01
(1)   13/   E81EA :                     
(1)   14/   E81EA :                     Sound2C_BossHit_Loop00:
(1)   15/   E81EA : 810A                	dc.b	nC0, $0A
(1)   16/   E81EC : (MACRO)             	smpsAlterVol        $10
(1)   16/   E81EC : E610                        dc.b    $E6,$10
(1)   17/   E81EE : (MACRO)             	smpsLoop            $00, $04, Sound2C_BossHit_Loop00
(1)   17/   E81EE : F7                          dc.b    $F7
(1)   17/   E81EF : 0004                        dc.b    $00,$04
(1)   17/   E81F1 : EA81                                dc.w    z80_ptr(SOUND2C_BOSSHIT_LOOP00)
(1)   18/   E81F3 : (MACRO)             	smpsStop
(1)   18/   E81F3 : F2                          dc.b    $F2
(1)   19/   E81F4 :                     
(1)   20/   E81F4 :                     Sound2C_39_4B_Voices:
(1)   21/   E81F4 :                     ;	Voice $00
(1)   22/   E81F4 :                     ;	$F9
(1)   23/   E81F4 :                     ;	$21, $30, $10, $32, 	$1F, $1F, $1F, $1F, 	$05, $18, $09, $02
(1)   24/   E81F4 :                     ;	$0B, $1F, $10, $05, 	$1F, $2F, $4F, $2F, 	$0E, $07, $04, $80
(1)   25/   E81F4 : (MACRO)             	smpsVcAlgorithm     $01
(1)   25/   E81F4 : =$1                 vcAlgorithm set $01
(1)   26/   E81F4 : (MACRO)             	smpsVcFeedback      $07
(1)   26/   E81F4 : =$7                 vcFeedback set $07
(1)   27/   E81F4 : (MACRO)             	smpsVcUnusedBits    $03
(1)   27/   E81F4 : =$3                 vcUnusedBits set $03
(1)   27/   E81F4 : =$0                 vcD1R1Unk set 0
(1)   27/   E81F4 : =$0                 vcD1R2Unk set 0
(1)   27/   E81F4 : =$0                 vcD1R3Unk set 0
(1)   27/   E81F4 : =$0                 vcD1R4Unk set 0
(1)   28/   E81F4 : (MACRO)             	smpsVcDetune        $03, $01, $03, $02
(1)   28/   E81F4 : =$3                 vcDT1 set $03
(1)   28/   E81F4 : =$1                 vcDT2 set $01
(1)   28/   E81F4 : =$3                 vcDT3 set $03
(1)   28/   E81F4 : =$2                 vcDT4 set $02
(1)   29/   E81F4 : (MACRO)             	smpsVcCoarseFreq    $02, $00, $00, $01
(1)   29/   E81F4 : =$2                 vcCF1 set $02
(1)   29/   E81F4 : =$0                 vcCF2 set $00
(1)   29/   E81F4 : =$0                 vcCF3 set $00
(1)   29/   E81F4 : =$1                 vcCF4 set $01
(1)   30/   E81F4 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   30/   E81F4 : =$0                 vcRS1 set $00
(1)   30/   E81F4 : =$0                 vcRS2 set $00
(1)   30/   E81F4 : =$0                 vcRS3 set $00
(1)   30/   E81F4 : =$0                 vcRS4 set $00
(1)   31/   E81F4 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   31/   E81F4 : =$1F                vcAR1 set $1F
(1)   31/   E81F4 : =$1F                vcAR2 set $1F
(1)   31/   E81F4 : =$1F                vcAR3 set $1F
(1)   31/   E81F4 : =$1F                vcAR4 set $1F
(1)   32/   E81F4 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   32/   E81F4 : =$0                 vcAM1 set $00<<5
(1)   32/   E81F4 : =$0                 vcAM2 set $00<<5
(1)   32/   E81F4 : =$0                 vcAM3 set $00<<5
(1)   32/   E81F4 : =$0                 vcAM4 set $00<<5
(1)   33/   E81F4 : (MACRO)             	smpsVcDecayRate1    $02, $09, $18, $05
(1)   33/   E81F4 : =$2                 vcD1R1 set $02
(1)   33/   E81F4 : =$9                 vcD1R2 set $09
(1)   33/   E81F4 : =$18                vcD1R3 set $18
(1)   33/   E81F4 : =$5                 vcD1R4 set $05
(1)   34/   E81F4 : (MACRO)             	smpsVcDecayRate2    $05, $10, $1F, $0B
(1)   34/   E81F4 : =$5                 vcD2R1 set $05
(1)   34/   E81F4 : =$10                vcD2R2 set $10
(1)   34/   E81F4 : =$1F                vcD2R3 set $1F
(1)   34/   E81F4 : =$B                 vcD2R4 set $0B
(1)   35/   E81F4 : (MACRO)             	smpsVcDecayLevel    $02, $04, $02, $01
(1)   35/   E81F4 : =$2                 vcDL1 set $02
(1)   35/   E81F4 : =$4                 vcDL2 set $04
(1)   35/   E81F4 : =$2                 vcDL3 set $02
(1)   35/   E81F4 : =$1                 vcDL4 set $01
(1)   36/   E81F4 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   36/   E81F4 : =$F                 vcRR1 set $0F
(1)   36/   E81F4 : =$F                 vcRR2 set $0F
(1)   36/   E81F4 : =$F                 vcRR3 set $0F
(1)   36/   E81F4 : =$F                 vcRR4 set $0F
(1)   37/   E81F4 : (MACRO)             	smpsVcTotalLevel    $00, $04, $07, $0E
(1)   37/   E81F4 : =$0                 vcTL1 set $00
(1)   37/   E81F4 : =$4                 vcTL2 set $04
(1)   37/   E81F4 : =$7                 vcTL3 set $07
(1)   37/   E81F4 : =$E                 vcTL4 set $0E
(1)   37/   E81F4 : F9                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   37/   E81F5 :                     ;   0     1     2     3     4     5     6     7
(1)   37/   E81F5 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   37/   E81F5 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   37/   E81F5 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   37/   E81F5 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   37/   E81F5 : =$80                vcTLMask1 set $80
(1)   37/   E81F5 :                     
(1)   37/   E81F5 :                     
(1)   37/   E81F5 : 2130 1032                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   37/   E81F9 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   37/   E81FD : 0518 0902                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   37/   E8201 : 0B1F 1005                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   37/   E8205 : 1F2F 4F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   37/   E8209 : 0E07 0480                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   38/   E820D :                     
(1)   39/   E820D :                     
  528/   E820D :                        Sound2D:	include "sfx-improved/AD - Inhaling Bubble.asm"
(1)    1/   E820D :                     Sound2D_InhalingBubble_Header:
(1)    2/   E820D : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E820D :                     
(1)    2/   E820D : =$3                 SourceDriver set 3
(1)    2/   E820D :                     
(1)    2/   E820D : =$1                 SourceSMPS2ASM set 1
(1)    2/   E820D :                     
(1)    2/   E820D : =$E820D             songStart set *
(1)    2/   E820D :                     
(1)    2/   E820D :                     
(1)    3/   E820D : (MACRO)             	smpsHeaderVoice     Sound2D_InhalingBubble_Voices
(1)    3/   E820D : 2A82                                dc.w    z80_ptr(SOUND2D_INHALINGBUBBLE_VOICES)
(1)    4/   E820F : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E820F : 01                          dc.b    $01
(1)    5/   E8210 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8210 : 01                          dc.b    $01
(1)    6/   E8211 :                     
(1)    7/   E8211 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound2D_InhalingBubble_FM5,	$0E, $00
(1)    7/   E8211 : 8005                        dc.b    $80,CFM5
(1)    7/   E8213 :  (MACRO-2)                  CheckedChannelPointer SOUND2D_INHALINGBUBBLE_FM5
(1)    7/   E8213 : 1782                                dc.w    z80_ptr(SOUND2D_INHALINGBUBBLE_FM5)
(1)    7/   E8215 : 0E                                  dc.b    $0E
(1)    7/   E8216 : 00                          dc.b    $00
(1)    8/   E8217 :                     
(1)    9/   E8217 :                     ; FM5 Data
(1)   10/   E8217 :                     Sound2D_InhalingBubble_FM5:
(1)   11/   E8217 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8217 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8217 : EF00                                dc.b    $EF,$00
(1)   12/   E8219 : (MACRO)             	smpsModSet          $01, $01, $21, $6E
(1)   12/   E8219 : F0                          dc.b    $F0
(1)   12/   E821A : 0101 216E                           dc.b    $01,$01,$21,$6E
(1)   12/   E821E :                             ;dc.b   $01,$21,$6E
(1)   13/   E821E : A607 8006           	dc.b	nCs3, $07, nRst, $06
(1)   14/   E8222 : (MACRO)             	smpsModSet          $01, $01, $44, $1E
(1)   14/   E8222 : F0                          dc.b    $F0
(1)   14/   E8223 : 0101 441E                           dc.b    $01,$01,$44,$1E
(1)   14/   E8227 :                             ;dc.b   $01,$44,$1E
(1)   15/   E8227 : AD08                	dc.b	nAb3, $08
(1)   16/   E8229 : (MACRO)             	smpsStop
(1)   16/   E8229 : F2                          dc.b    $F2
(1)   17/   E822A :                     
(1)   18/   E822A :                     Sound2D_InhalingBubble_Voices:
(1)   19/   E822A :                     ;	Voice $00
(1)   20/   E822A :                     ;	$35
(1)   21/   E822A :                     ;	$05, $09, $08, $07, 	$1E, $0D, $0D, $0E, 	$0C, $15, $03, $06
(1)   22/   E822A :                     ;	$16, $0E, $09, $10, 	$2F, $2F, $1F, $1F, 	$15, $12, $12, $80
(1)   23/   E822A : (MACRO)             	smpsVcAlgorithm     $05
(1)   23/   E822A : =$5                 vcAlgorithm set $05
(1)   24/   E822A : (MACRO)             	smpsVcFeedback      $06
(1)   24/   E822A : =$6                 vcFeedback set $06
(1)   25/   E822A : (MACRO)             	smpsVcUnusedBits    $00
(1)   25/   E822A : =$0                 vcUnusedBits set $00
(1)   25/   E822A : =$0                 vcD1R1Unk set 0
(1)   25/   E822A : =$0                 vcD1R2Unk set 0
(1)   25/   E822A : =$0                 vcD1R3Unk set 0
(1)   25/   E822A : =$0                 vcD1R4Unk set 0
(1)   26/   E822A : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   26/   E822A : =$0                 vcDT1 set $00
(1)   26/   E822A : =$0                 vcDT2 set $00
(1)   26/   E822A : =$0                 vcDT3 set $00
(1)   26/   E822A : =$0                 vcDT4 set $00
(1)   27/   E822A : (MACRO)             	smpsVcCoarseFreq    $07, $08, $09, $05
(1)   27/   E822A : =$7                 vcCF1 set $07
(1)   27/   E822A : =$8                 vcCF2 set $08
(1)   27/   E822A : =$9                 vcCF3 set $09
(1)   27/   E822A : =$5                 vcCF4 set $05
(1)   28/   E822A : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   28/   E822A : =$0                 vcRS1 set $00
(1)   28/   E822A : =$0                 vcRS2 set $00
(1)   28/   E822A : =$0                 vcRS3 set $00
(1)   28/   E822A : =$0                 vcRS4 set $00
(1)   29/   E822A : (MACRO)             	smpsVcAttackRate    $0E, $0D, $0D, $1E
(1)   29/   E822A : =$E                 vcAR1 set $0E
(1)   29/   E822A : =$D                 vcAR2 set $0D
(1)   29/   E822A : =$D                 vcAR3 set $0D
(1)   29/   E822A : =$1E                vcAR4 set $1E
(1)   30/   E822A : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   30/   E822A : =$0                 vcAM1 set $00<<7
(1)   30/   E822A : =$0                 vcAM2 set $00<<7
(1)   30/   E822A : =$0                 vcAM3 set $00<<7
(1)   30/   E822A : =$0                 vcAM4 set $00<<7
(1)   31/   E822A : (MACRO)             	smpsVcDecayRate1    $06, $03, $15, $0C
(1)   31/   E822A : =$6                 vcD1R1 set $06
(1)   31/   E822A : =$3                 vcD1R2 set $03
(1)   31/   E822A : =$15                vcD1R3 set $15
(1)   31/   E822A : =$C                 vcD1R4 set $0C
(1)   32/   E822A : (MACRO)             	smpsVcDecayRate2    $10, $09, $0E, $16
(1)   32/   E822A : =$10                vcD2R1 set $10
(1)   32/   E822A : =$9                 vcD2R2 set $09
(1)   32/   E822A : =$E                 vcD2R3 set $0E
(1)   32/   E822A : =$16                vcD2R4 set $16
(1)   33/   E822A : (MACRO)             	smpsVcDecayLevel    $01, $01, $02, $02
(1)   33/   E822A : =$1                 vcDL1 set $01
(1)   33/   E822A : =$1                 vcDL2 set $01
(1)   33/   E822A : =$2                 vcDL3 set $02
(1)   33/   E822A : =$2                 vcDL4 set $02
(1)   34/   E822A : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   34/   E822A : =$F                 vcRR1 set $0F
(1)   34/   E822A : =$F                 vcRR2 set $0F
(1)   34/   E822A : =$F                 vcRR3 set $0F
(1)   34/   E822A : =$F                 vcRR4 set $0F
(1)   35/   E822A : (MACRO)             	smpsVcTotalLevel    $80, $12, $12, $15
(1)   35/   E822A : =$80                vcTL1 set $80
(1)   35/   E822A : =$12                vcTL2 set $12
(1)   35/   E822A : =$12                vcTL3 set $12
(1)   35/   E822A : =$15                vcTL4 set $15
(1)   35/   E822A : 35                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   35/   E822B :                     ;   0     1     2     3     4     5     6     7
(1)   35/   E822B :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   35/   E822B : =$0                 vcTLMask4 set 0
(1)   35/   E822B : =$0                 vcTLMask3 set 0
(1)   35/   E822B : =$0                 vcTLMask2 set 0
(1)   35/   E822B : =$0                 vcTLMask1 set 0
(1)   35/   E822B :                     
(1)   35/   E822B :                     
(1)   35/   E822B : 0509 0807                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   35/   E822F : 1E0D 0D0E                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   35/   E8233 : 0C15 0306                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   35/   E8237 : 160E 0910                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   35/   E823B : 2F2F 1F1F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   35/   E823F : 1512 1280                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   36/   E8243 :                     
(1)   37/   E8243 :                     
  529/   E8243 :                        Sound2E:	include "sfx-improved/AE - Lava Ball.asm"
(1)    1/   E8243 :                     Sound2E_LavaBall_Header:
(1)    2/   E8243 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8243 :                     
(1)    2/   E8243 : =$3                 SourceDriver set 3
(1)    2/   E8243 :                     
(1)    2/   E8243 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8243 :                     
(1)    2/   E8243 : =$E8243             songStart set *
(1)    2/   E8243 :                     
(1)    2/   E8243 :                     
(1)    3/   E8243 : (MACRO)             	smpsHeaderVoice     Sound2E_33_Voices
(1)    3/   E8243 : 7482                                dc.w    z80_ptr(SOUND2E_33_VOICES)
(1)    4/   E8245 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8245 : 01                          dc.b    $01
(1)    5/   E8246 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8246 : 02                          dc.b    $02
(1)    6/   E8247 :                     
(1)    7/   E8247 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound2E_LavaBall_FM5,	$00, $00
(1)    7/   E8247 : 8005                        dc.b    $80,CFM5
(1)    7/   E8249 :  (MACRO-2)                  CheckedChannelPointer SOUND2E_LAVABALL_FM5
(1)    7/   E8249 : 5382                                dc.w    z80_ptr(SOUND2E_LAVABALL_FM5)
(1)    7/   E824B : 00                                  dc.b    $00
(1)    7/   E824C : 00                          dc.b    $00
(1)    8/   E824D : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound2E_LavaBall_PSG3,	$00, $00
(1)    8/   E824D : 80C0                        dc.b    $80,CPSG3
(1)    8/   E824F :  (MACRO-2)                  CheckedChannelPointer SOUND2E_LAVABALL_PSG3
(1)    8/   E824F : 6182                                dc.w    z80_ptr(SOUND2E_LAVABALL_PSG3)
(1)    8/   E8251 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8251 : 00                                  dc.b    $00
(1)    8/   E8252 : 00                          dc.b    $00
(1)    9/   E8253 :                     
(1)   10/   E8253 :                     ; FM5 Data
(1)   11/   E8253 :                     Sound2E_LavaBall_FM5:
(1)   12/   E8253 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8253 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8253 : EF00                                dc.b    $EF,$00
(1)   13/   E8255 : 8001                	dc.b	nRst, $01
(1)   14/   E8257 : (MACRO)             	smpsModSet          $01, $01, $40, $48
(1)   14/   E8257 : F0                          dc.b    $F0
(1)   14/   E8258 : 0101 4048                           dc.b    $01,$01,$40,$48
(1)   14/   E825C :                             ;dc.b   $01,$40,$48
(1)   15/   E825C : 8306 8502           	dc.b	nD0, $06, nE0, $02
(1)   16/   E8260 : (MACRO)             	smpsStop
(1)   16/   E8260 : F2                          dc.b    $F2
(1)   17/   E8261 :                     
(1)   18/   E8261 :                     ; PSG3 Data
(1)   19/   E8261 :                     Sound2E_LavaBall_PSG3:
(1)   20/   E8261 : (MACRO)             	smpsPSGvoice        $00
(1)   20/   E8261 : F500                        dc.b    $F5,$00
(1)   21/   E8263 : 800B                	dc.b	nRst, $0B
(1)   22/   E8265 : (MACRO)             	smpsPSGform         $E7
(1)   22/   E8265 : F3E7                        dc.b    $F3,$E7
(1)   23/   E8267 : C701 E7             	dc.b	nMaxPSG, $01, smpsNoAttack
(1)   24/   E826A :                     
(1)   25/   E826A :                     Sound2E_LavaBall_Loop00:
(1)   26/   E826A : 02                  	dc.b	$02
(1)   27/   E826B : (MACRO)             	smpsPSGAlterVol     $01
(1)   27/   E826B : EC01                        dc.b    $EC,$01
(1)   28/   E826D : E7                  	dc.b	smpsNoAttack
(1)   29/   E826E : (MACRO)             	smpsLoop            $00, $10, Sound2E_LavaBall_Loop00
(1)   29/   E826E : F7                          dc.b    $F7
(1)   29/   E826F : 0010                        dc.b    $00,$10
(1)   29/   E8271 : 6A82                                dc.w    z80_ptr(SOUND2E_LAVABALL_LOOP00)
(1)   30/   E8273 : (MACRO)             	smpsStop
(1)   30/   E8273 : F2                          dc.b    $F2
(1)   31/   E8274 :                     
(1)   32/   E8274 :                     Sound2E_33_Voices:
(1)   33/   E8274 :                     ;	Voice $00
(1)   34/   E8274 :                     ;	$FA
(1)   35/   E8274 :                     ;	$02, $03, $00, $05, 	$12, $11, $0F, $13, 	$05, $18, $09, $02
(1)   36/   E8274 :                     ;	$06, $0F, $06, $02, 	$1F, $2F, $4F, $2F, 	$2F, $1A, $0E, $80
(1)   37/   E8274 : (MACRO)             	smpsVcAlgorithm     $02
(1)   37/   E8274 : =$2                 vcAlgorithm set $02
(1)   38/   E8274 : (MACRO)             	smpsVcFeedback      $07
(1)   38/   E8274 : =$7                 vcFeedback set $07
(1)   39/   E8274 : (MACRO)             	smpsVcUnusedBits    $03
(1)   39/   E8274 : =$3                 vcUnusedBits set $03
(1)   39/   E8274 : =$0                 vcD1R1Unk set 0
(1)   39/   E8274 : =$0                 vcD1R2Unk set 0
(1)   39/   E8274 : =$0                 vcD1R3Unk set 0
(1)   39/   E8274 : =$0                 vcD1R4Unk set 0
(1)   40/   E8274 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   40/   E8274 : =$0                 vcDT1 set $00
(1)   40/   E8274 : =$0                 vcDT2 set $00
(1)   40/   E8274 : =$0                 vcDT3 set $00
(1)   40/   E8274 : =$0                 vcDT4 set $00
(1)   41/   E8274 : (MACRO)             	smpsVcCoarseFreq    $05, $00, $03, $02
(1)   41/   E8274 : =$5                 vcCF1 set $05
(1)   41/   E8274 : =$0                 vcCF2 set $00
(1)   41/   E8274 : =$3                 vcCF3 set $03
(1)   41/   E8274 : =$2                 vcCF4 set $02
(1)   42/   E8274 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   42/   E8274 : =$0                 vcRS1 set $00
(1)   42/   E8274 : =$0                 vcRS2 set $00
(1)   42/   E8274 : =$0                 vcRS3 set $00
(1)   42/   E8274 : =$0                 vcRS4 set $00
(1)   43/   E8274 : (MACRO)             	smpsVcAttackRate    $13, $0F, $11, $12
(1)   43/   E8274 : =$13                vcAR1 set $13
(1)   43/   E8274 : =$F                 vcAR2 set $0F
(1)   43/   E8274 : =$11                vcAR3 set $11
(1)   43/   E8274 : =$12                vcAR4 set $12
(1)   44/   E8274 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   44/   E8274 : =$0                 vcAM1 set $00<<5
(1)   44/   E8274 : =$0                 vcAM2 set $00<<5
(1)   44/   E8274 : =$0                 vcAM3 set $00<<5
(1)   44/   E8274 : =$0                 vcAM4 set $00<<5
(1)   45/   E8274 : (MACRO)             	smpsVcDecayRate1    $02, $09, $18, $05
(1)   45/   E8274 : =$2                 vcD1R1 set $02
(1)   45/   E8274 : =$9                 vcD1R2 set $09
(1)   45/   E8274 : =$18                vcD1R3 set $18
(1)   45/   E8274 : =$5                 vcD1R4 set $05
(1)   46/   E8274 : (MACRO)             	smpsVcDecayRate2    $02, $06, $0F, $06
(1)   46/   E8274 : =$2                 vcD2R1 set $02
(1)   46/   E8274 : =$6                 vcD2R2 set $06
(1)   46/   E8274 : =$F                 vcD2R3 set $0F
(1)   46/   E8274 : =$6                 vcD2R4 set $06
(1)   47/   E8274 : (MACRO)             	smpsVcDecayLevel    $02, $04, $02, $01
(1)   47/   E8274 : =$2                 vcDL1 set $02
(1)   47/   E8274 : =$4                 vcDL2 set $04
(1)   47/   E8274 : =$2                 vcDL3 set $02
(1)   47/   E8274 : =$1                 vcDL4 set $01
(1)   48/   E8274 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   48/   E8274 : =$F                 vcRR1 set $0F
(1)   48/   E8274 : =$F                 vcRR2 set $0F
(1)   48/   E8274 : =$F                 vcRR3 set $0F
(1)   48/   E8274 : =$F                 vcRR4 set $0F
(1)   49/   E8274 : (MACRO)             	smpsVcTotalLevel    $00, $0E, $1A, $2F
(1)   49/   E8274 : =$0                 vcTL1 set $00
(1)   49/   E8274 : =$E                 vcTL2 set $0E
(1)   49/   E8274 : =$1A                vcTL3 set $1A
(1)   49/   E8274 : =$2F                vcTL4 set $2F
(1)   49/   E8274 : FA                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   49/   E8275 :                     ;   0     1     2     3     4     5     6     7
(1)   49/   E8275 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   49/   E8275 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   49/   E8275 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   49/   E8275 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   49/   E8275 : =$80                vcTLMask1 set $80
(1)   49/   E8275 :                     
(1)   49/   E8275 :                     
(1)   49/   E8275 : 0203 0005                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   49/   E8279 : 1211 0F13                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   49/   E827D : 0518 0902                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   49/   E8281 : 060F 0602                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   49/   E8285 : 1F2F 4F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   49/   E8289 : 2F1A 0E80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   50/   E828D :                     
(1)   51/   E828D :                     
  530/   E828D :                        Sound2F:	include "sfx-improved/AF - Shield.asm"
(1)    1/   E828D :                     Sound2F_Shield_Header:
(1)    2/   E828D : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E828D :                     
(1)    2/   E828D : =$3                 SourceDriver set 3
(1)    2/   E828D :                     
(1)    2/   E828D : =$0                 SourceSMPS2ASM set 0
(1)    2/   E828D :                     
(1)    2/   E828D : =$E828D             songStart set *
(1)    2/   E828D :                     
(1)    2/   E828D :                     
(1)    3/   E828D : (MACRO)             	smpsHeaderVoice     Sound2F_Shield_Voices
(1)    3/   E828D : A182                                dc.w    z80_ptr(SOUND2F_SHIELD_VOICES)
(1)    4/   E828F : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E828F : 01                          dc.b    $01
(1)    5/   E8290 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8290 : 01                          dc.b    $01
(1)    6/   E8291 :                     
(1)    7/   E8291 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound2F_Shield_FM5,	$0C, $00
(1)    7/   E8291 : 8005                        dc.b    $80,CFM5
(1)    7/   E8293 :  (MACRO-2)                  CheckedChannelPointer SOUND2F_SHIELD_FM5
(1)    7/   E8293 : 9782                                dc.w    z80_ptr(SOUND2F_SHIELD_FM5)
(1)    7/   E8295 : 0C                                  dc.b    $0C
(1)    7/   E8296 : 00                          dc.b    $00
(1)    8/   E8297 :                     
(1)    9/   E8297 :                     ; FM5 Data
(1)   10/   E8297 :                     Sound2F_Shield_FM5:
(1)   11/   E8297 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8297 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8297 : EF00                                dc.b    $EF,$00
(1)   12/   E8299 : 8001 A305 E7A4 26   	dc.b	nRst, $01, nBb2, $05, smpsNoAttack, nB2, $26
(1)   13/   E82A0 : (MACRO)             	smpsStop
(1)   13/   E82A0 : F2                          dc.b    $F2
(1)   14/   E82A1 :                     
(1)   15/   E82A1 :                     Sound2F_Shield_Voices:
(1)   16/   E82A1 :                     ;	Voice $00
(1)   17/   E82A1 :                     ;	$30
(1)   18/   E82A1 :                     ;	$30, $30, $30, $30, 	$9E, $A8, $AC, $DC, 	$0E, $0A, $04, $05
(1)   19/   E82A1 :                     ;	$08, $08, $08, $08, 	$BF, $BF, $BF, $BF, 	$04, $2C, $14, $80
(1)   20/   E82A1 : (MACRO)             	smpsVcAlgorithm     $00
(1)   20/   E82A1 : =$0                 vcAlgorithm set $00
(1)   21/   E82A1 : (MACRO)             	smpsVcFeedback      $06
(1)   21/   E82A1 : =$6                 vcFeedback set $06
(1)   22/   E82A1 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E82A1 : =$0                 vcUnusedBits set $00
(1)   22/   E82A1 : =$0                 vcD1R1Unk set 0
(1)   22/   E82A1 : =$0                 vcD1R2Unk set 0
(1)   22/   E82A1 : =$0                 vcD1R3Unk set 0
(1)   22/   E82A1 : =$0                 vcD1R4Unk set 0
(1)   23/   E82A1 : (MACRO)             	smpsVcDetune        $03, $03, $03, $03
(1)   23/   E82A1 : =$3                 vcDT1 set $03
(1)   23/   E82A1 : =$3                 vcDT2 set $03
(1)   23/   E82A1 : =$3                 vcDT3 set $03
(1)   23/   E82A1 : =$3                 vcDT4 set $03
(1)   24/   E82A1 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   24/   E82A1 : =$0                 vcCF1 set $00
(1)   24/   E82A1 : =$0                 vcCF2 set $00
(1)   24/   E82A1 : =$0                 vcCF3 set $00
(1)   24/   E82A1 : =$0                 vcCF4 set $00
(1)   25/   E82A1 : (MACRO)             	smpsVcRateScale     $03, $02, $02, $02
(1)   25/   E82A1 : =$3                 vcRS1 set $03
(1)   25/   E82A1 : =$2                 vcRS2 set $02
(1)   25/   E82A1 : =$2                 vcRS3 set $02
(1)   25/   E82A1 : =$2                 vcRS4 set $02
(1)   26/   E82A1 : (MACRO)             	smpsVcAttackRate    $1C, $2C, $28, $1E
(1)   26/   E82A1 : =$1C                vcAR1 set $1C
(1)   26/   E82A1 : =$2C                vcAR2 set $2C
(1)   26/   E82A1 : =$28                vcAR3 set $28
(1)   26/   E82A1 : =$1E                vcAR4 set $1E
(1)   27/   E82A1 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E82A1 : =$0                 vcAM1 set $00<<5
(1)   27/   E82A1 : =$0                 vcAM2 set $00<<5
(1)   27/   E82A1 : =$0                 vcAM3 set $00<<5
(1)   27/   E82A1 : =$0                 vcAM4 set $00<<5
(1)   28/   E82A1 : (MACRO)             	smpsVcDecayRate1    $05, $04, $0A, $0E
(1)   28/   E82A1 : =$5                 vcD1R1 set $05
(1)   28/   E82A1 : =$4                 vcD1R2 set $04
(1)   28/   E82A1 : =$A                 vcD1R3 set $0A
(1)   28/   E82A1 : =$E                 vcD1R4 set $0E
(1)   29/   E82A1 : (MACRO)             	smpsVcDecayRate2    $08, $08, $08, $08
(1)   29/   E82A1 : =$8                 vcD2R1 set $08
(1)   29/   E82A1 : =$8                 vcD2R2 set $08
(1)   29/   E82A1 : =$8                 vcD2R3 set $08
(1)   29/   E82A1 : =$8                 vcD2R4 set $08
(1)   30/   E82A1 : (MACRO)             	smpsVcDecayLevel    $0B, $0B, $0B, $0B
(1)   30/   E82A1 : =$B                 vcDL1 set $0B
(1)   30/   E82A1 : =$B                 vcDL2 set $0B
(1)   30/   E82A1 : =$B                 vcDL3 set $0B
(1)   30/   E82A1 : =$B                 vcDL4 set $0B
(1)   31/   E82A1 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E82A1 : =$F                 vcRR1 set $0F
(1)   31/   E82A1 : =$F                 vcRR2 set $0F
(1)   31/   E82A1 : =$F                 vcRR3 set $0F
(1)   31/   E82A1 : =$F                 vcRR4 set $0F
(1)   32/   E82A1 : (MACRO)             	smpsVcTotalLevel    $00, $14, $2C, $04
(1)   32/   E82A1 : =$0                 vcTL1 set $00
(1)   32/   E82A1 : =$14                vcTL2 set $14
(1)   32/   E82A1 : =$2C                vcTL3 set $2C
(1)   32/   E82A1 : =$4                 vcTL4 set $04
(1)   32/   E82A1 : 30                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E82A2 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E82A2 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E82A2 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E82A2 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E82A2 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E82A2 : =$80                vcTLMask1 set $80
(1)   32/   E82A2 :                     
(1)   32/   E82A2 :                     
(1)   32/   E82A2 : 3030 3030                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E82A6 : 9EA8 ACDC                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E82AA : 0E0A 0405                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E82AE : 0808 0808                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E82B2 : BFBF BFBF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E82B6 : 042C 1480                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E82BA :                     
(1)   34/   E82BA :                     
  531/   E82BA :                        Sound30:	include "sfx-improved/B0 - Laser Beam.asm"
(1)    1/   E82BA :                     Sound30_LaserBeam_Header:
(1)    2/   E82BA : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E82BA :                     
(1)    2/   E82BA : =$3                 SourceDriver set 3
(1)    2/   E82BA :                     
(1)    2/   E82BA : =$0                 SourceSMPS2ASM set 0
(1)    2/   E82BA :                     
(1)    2/   E82BA : =$E82BA             songStart set *
(1)    2/   E82BA :                     
(1)    2/   E82BA :                     
(1)    3/   E82BA : (MACRO)             	smpsHeaderVoice     Sound30_LaserBeam_Voices
(1)    3/   E82BA : D282                                dc.w    z80_ptr(SOUND30_LASERBEAM_VOICES)
(1)    4/   E82BC : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E82BC : 01                          dc.b    $01
(1)    5/   E82BD : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E82BD : 01                          dc.b    $01
(1)    6/   E82BE :                     
(1)    7/   E82BE : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound30_LaserBeam_FM5,	$FB, $05
(1)    7/   E82BE : 8005                        dc.b    $80,CFM5
(1)    7/   E82C0 :  (MACRO-2)                  CheckedChannelPointer SOUND30_LASERBEAM_FM5
(1)    7/   E82C0 : C482                                dc.w    z80_ptr(SOUND30_LASERBEAM_FM5)
(1)    7/   E82C2 : FB                                  dc.b    $FB
(1)    7/   E82C3 : 05                          dc.b    $05
(1)    8/   E82C4 :                     
(1)    9/   E82C4 :                     ; FM5 Data
(1)   10/   E82C4 :                     Sound30_LaserBeam_FM5:
(1)   11/   E82C4 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E82C4 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E82C4 : EF00                                dc.b    $EF,$00
(1)   12/   E82C6 : DF7F                	dc.b	nBb7, $7F
(1)   13/   E82C8 :                     
(1)   14/   E82C8 :                     Sound30_LaserBeam_Loop00:
(1)   15/   E82C8 : DF02                	dc.b	nBb7, $02
(1)   16/   E82CA : (MACRO)             	smpsAlterVol        $01
(1)   16/   E82CA : E601                        dc.b    $E6,$01
(1)   17/   E82CC : (MACRO)             	smpsLoop            $00, $1B, Sound30_LaserBeam_Loop00
(1)   17/   E82CC : F7                          dc.b    $F7
(1)   17/   E82CD : 001B                        dc.b    $00,$1B
(1)   17/   E82CF : C882                                dc.w    z80_ptr(SOUND30_LASERBEAM_LOOP00)
(1)   18/   E82D1 : (MACRO)             	smpsStop
(1)   18/   E82D1 : F2                          dc.b    $F2
(1)   19/   E82D2 :                     
(1)   20/   E82D2 :                     Sound30_LaserBeam_Voices:
(1)   21/   E82D2 :                     ;	Voice $00
(1)   22/   E82D2 :                     ;	$83
(1)   23/   E82D2 :                     ;	$1F, $15, $1F, $1F, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   24/   E82D2 :                     ;	$02, $02, $02, $02, 	$2F, $2F, $FF, $3F, 	$0B, $16, $01, $82
(1)   25/   E82D2 : (MACRO)             	smpsVcAlgorithm     $03
(1)   25/   E82D2 : =$3                 vcAlgorithm set $03
(1)   26/   E82D2 : (MACRO)             	smpsVcFeedback      $00
(1)   26/   E82D2 : =$0                 vcFeedback set $00
(1)   27/   E82D2 : (MACRO)             	smpsVcUnusedBits    $02
(1)   27/   E82D2 : =$2                 vcUnusedBits set $02
(1)   27/   E82D2 : =$0                 vcD1R1Unk set 0
(1)   27/   E82D2 : =$0                 vcD1R2Unk set 0
(1)   27/   E82D2 : =$0                 vcD1R3Unk set 0
(1)   27/   E82D2 : =$0                 vcD1R4Unk set 0
(1)   28/   E82D2 : (MACRO)             	smpsVcDetune        $01, $01, $01, $01
(1)   28/   E82D2 : =$1                 vcDT1 set $01
(1)   28/   E82D2 : =$1                 vcDT2 set $01
(1)   28/   E82D2 : =$1                 vcDT3 set $01
(1)   28/   E82D2 : =$1                 vcDT4 set $01
(1)   29/   E82D2 : (MACRO)             	smpsVcCoarseFreq    $0F, $0F, $05, $0F
(1)   29/   E82D2 : =$F                 vcCF1 set $0F
(1)   29/   E82D2 : =$F                 vcCF2 set $0F
(1)   29/   E82D2 : =$5                 vcCF3 set $05
(1)   29/   E82D2 : =$F                 vcCF4 set $0F
(1)   30/   E82D2 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   30/   E82D2 : =$0                 vcRS1 set $00
(1)   30/   E82D2 : =$0                 vcRS2 set $00
(1)   30/   E82D2 : =$0                 vcRS3 set $00
(1)   30/   E82D2 : =$0                 vcRS4 set $00
(1)   31/   E82D2 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   31/   E82D2 : =$1F                vcAR1 set $1F
(1)   31/   E82D2 : =$1F                vcAR2 set $1F
(1)   31/   E82D2 : =$1F                vcAR3 set $1F
(1)   31/   E82D2 : =$1F                vcAR4 set $1F
(1)   32/   E82D2 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   32/   E82D2 : =$0                 vcAM1 set $00<<5
(1)   32/   E82D2 : =$0                 vcAM2 set $00<<5
(1)   32/   E82D2 : =$0                 vcAM3 set $00<<5
(1)   32/   E82D2 : =$0                 vcAM4 set $00<<5
(1)   33/   E82D2 : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   33/   E82D2 : =$0                 vcD1R1 set $00
(1)   33/   E82D2 : =$0                 vcD1R2 set $00
(1)   33/   E82D2 : =$0                 vcD1R3 set $00
(1)   33/   E82D2 : =$0                 vcD1R4 set $00
(1)   34/   E82D2 : (MACRO)             	smpsVcDecayRate2    $02, $02, $02, $02
(1)   34/   E82D2 : =$2                 vcD2R1 set $02
(1)   34/   E82D2 : =$2                 vcD2R2 set $02
(1)   34/   E82D2 : =$2                 vcD2R3 set $02
(1)   34/   E82D2 : =$2                 vcD2R4 set $02
(1)   35/   E82D2 : (MACRO)             	smpsVcDecayLevel    $03, $0F, $02, $02
(1)   35/   E82D2 : =$3                 vcDL1 set $03
(1)   35/   E82D2 : =$F                 vcDL2 set $0F
(1)   35/   E82D2 : =$2                 vcDL3 set $02
(1)   35/   E82D2 : =$2                 vcDL4 set $02
(1)   36/   E82D2 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   36/   E82D2 : =$F                 vcRR1 set $0F
(1)   36/   E82D2 : =$F                 vcRR2 set $0F
(1)   36/   E82D2 : =$F                 vcRR3 set $0F
(1)   36/   E82D2 : =$F                 vcRR4 set $0F
(1)   37/   E82D2 : (MACRO)             	smpsVcTotalLevel    $02, $01, $16, $0B
(1)   37/   E82D2 : =$2                 vcTL1 set $02
(1)   37/   E82D2 : =$1                 vcTL2 set $01
(1)   37/   E82D2 : =$16                vcTL3 set $16
(1)   37/   E82D2 : =$B                 vcTL4 set $0B
(1)   37/   E82D2 : 83                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   37/   E82D3 :                     ;   0     1     2     3     4     5     6     7
(1)   37/   E82D3 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   37/   E82D3 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   37/   E82D3 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   37/   E82D3 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   37/   E82D3 : =$80                vcTLMask1 set $80
(1)   37/   E82D3 :                     
(1)   37/   E82D3 :                     
(1)   37/   E82D3 : 1F15 1F1F                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   37/   E82D7 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   37/   E82DB : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   37/   E82DF : 0202 0202                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   37/   E82E3 : 2F2F FF3F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   37/   E82E7 : 0B16 0182                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   38/   E82EB :                     
(1)   39/   E82EB :                     
  532/   E82EB :                        Sound31:	include "sfx-improved/B1 - Electricity (Unused).asm"
(1)    1/   E82EB :                     Sound31_Zap_Header:
(1)    2/   E82EB : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E82EB :                     
(1)    2/   E82EB : =$3                 SourceDriver set 3
(1)    2/   E82EB :                     
(1)    2/   E82EB : =$0                 SourceSMPS2ASM set 0
(1)    2/   E82EB :                     
(1)    2/   E82EB : =$E82EB             songStart set *
(1)    2/   E82EB :                     
(1)    2/   E82EB :                     
(1)    3/   E82EB : (MACRO)             	smpsHeaderVoice     Sound31_Zap_Voices
(1)    3/   E82EB : FE82                                dc.w    z80_ptr(SOUND31_ZAP_VOICES)
(1)    4/   E82ED : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E82ED : 01                          dc.b    $01
(1)    5/   E82EE : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E82EE : 01                          dc.b    $01
(1)    6/   E82EF :                     
(1)    7/   E82EF : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound31_Zap_FM5,	$FB, $02
(1)    7/   E82EF : 8005                        dc.b    $80,CFM5
(1)    7/   E82F1 :  (MACRO-2)                  CheckedChannelPointer SOUND31_ZAP_FM5
(1)    7/   E82F1 : F582                                dc.w    z80_ptr(SOUND31_ZAP_FM5)
(1)    7/   E82F3 : FB                                  dc.b    $FB
(1)    7/   E82F4 : 02                          dc.b    $02
(1)    8/   E82F5 :                     
(1)    9/   E82F5 :                     ; FM5 Data
(1)   10/   E82F5 :                     Sound31_Zap_FM5:
(1)   11/   E82F5 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E82F5 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E82F5 : EF00                                dc.b    $EF,$00
(1)   12/   E82F7 : B305 8001 B309      	dc.b	nD4, $05, nRst, $01, nD4, $09
(1)   13/   E82FD : (MACRO)             	smpsStop
(1)   13/   E82FD : F2                          dc.b    $F2
(1)   14/   E82FE :                     
(1)   15/   E82FE :                     Sound31_Zap_Voices:
(1)   16/   E82FE :                     ;	Voice $00
(1)   17/   E82FE :                     ;	$83
(1)   18/   E82FE :                     ;	$12, $10, $13, $1E, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   19/   E82FE :                     ;	$02, $02, $02, $02, 	$2F, $2F, $FF, $3F, 	$05, $10, $34, $87
(1)   20/   E82FE : (MACRO)             	smpsVcAlgorithm     $03
(1)   20/   E82FE : =$3                 vcAlgorithm set $03
(1)   21/   E82FE : (MACRO)             	smpsVcFeedback      $00
(1)   21/   E82FE : =$0                 vcFeedback set $00
(1)   22/   E82FE : (MACRO)             	smpsVcUnusedBits    $02
(1)   22/   E82FE : =$2                 vcUnusedBits set $02
(1)   22/   E82FE : =$0                 vcD1R1Unk set 0
(1)   22/   E82FE : =$0                 vcD1R2Unk set 0
(1)   22/   E82FE : =$0                 vcD1R3Unk set 0
(1)   22/   E82FE : =$0                 vcD1R4Unk set 0
(1)   23/   E82FE : (MACRO)             	smpsVcDetune        $01, $01, $01, $01
(1)   23/   E82FE : =$1                 vcDT1 set $01
(1)   23/   E82FE : =$1                 vcDT2 set $01
(1)   23/   E82FE : =$1                 vcDT3 set $01
(1)   23/   E82FE : =$1                 vcDT4 set $01
(1)   24/   E82FE : (MACRO)             	smpsVcCoarseFreq    $0E, $03, $00, $02
(1)   24/   E82FE : =$E                 vcCF1 set $0E
(1)   24/   E82FE : =$3                 vcCF2 set $03
(1)   24/   E82FE : =$0                 vcCF3 set $00
(1)   24/   E82FE : =$2                 vcCF4 set $02
(1)   25/   E82FE : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E82FE : =$0                 vcRS1 set $00
(1)   25/   E82FE : =$0                 vcRS2 set $00
(1)   25/   E82FE : =$0                 vcRS3 set $00
(1)   25/   E82FE : =$0                 vcRS4 set $00
(1)   26/   E82FE : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E82FE : =$1F                vcAR1 set $1F
(1)   26/   E82FE : =$1F                vcAR2 set $1F
(1)   26/   E82FE : =$1F                vcAR3 set $1F
(1)   26/   E82FE : =$1F                vcAR4 set $1F
(1)   27/   E82FE : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E82FE : =$0                 vcAM1 set $00<<5
(1)   27/   E82FE : =$0                 vcAM2 set $00<<5
(1)   27/   E82FE : =$0                 vcAM3 set $00<<5
(1)   27/   E82FE : =$0                 vcAM4 set $00<<5
(1)   28/   E82FE : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   28/   E82FE : =$0                 vcD1R1 set $00
(1)   28/   E82FE : =$0                 vcD1R2 set $00
(1)   28/   E82FE : =$0                 vcD1R3 set $00
(1)   28/   E82FE : =$0                 vcD1R4 set $00
(1)   29/   E82FE : (MACRO)             	smpsVcDecayRate2    $02, $02, $02, $02
(1)   29/   E82FE : =$2                 vcD2R1 set $02
(1)   29/   E82FE : =$2                 vcD2R2 set $02
(1)   29/   E82FE : =$2                 vcD2R3 set $02
(1)   29/   E82FE : =$2                 vcD2R4 set $02
(1)   30/   E82FE : (MACRO)             	smpsVcDecayLevel    $03, $0F, $02, $02
(1)   30/   E82FE : =$3                 vcDL1 set $03
(1)   30/   E82FE : =$F                 vcDL2 set $0F
(1)   30/   E82FE : =$2                 vcDL3 set $02
(1)   30/   E82FE : =$2                 vcDL4 set $02
(1)   31/   E82FE : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E82FE : =$F                 vcRR1 set $0F
(1)   31/   E82FE : =$F                 vcRR2 set $0F
(1)   31/   E82FE : =$F                 vcRR3 set $0F
(1)   31/   E82FE : =$F                 vcRR4 set $0F
(1)   32/   E82FE : (MACRO)             	smpsVcTotalLevel    $07, $34, $10, $05
(1)   32/   E82FE : =$7                 vcTL1 set $07
(1)   32/   E82FE : =$34                vcTL2 set $34
(1)   32/   E82FE : =$10                vcTL3 set $10
(1)   32/   E82FE : =$5                 vcTL4 set $05
(1)   32/   E82FE : 83                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E82FF :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E82FF :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E82FF : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E82FF : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E82FF : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E82FF : =$80                vcTLMask1 set $80
(1)   32/   E82FF :                     
(1)   32/   E82FF :                     
(1)   32/   E82FF : 1210 131E                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8303 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8307 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E830B : 0202 0202                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E830F : 2F2F FF3F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8313 : 0510 3487                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8317 :                     
(1)   34/   E8317 :                     
  533/   E8317 :                        Sound32:	include "sfx-improved/B2 - Drown.asm"
(1)    1/   E8317 :                     Sound32_Drown_Header:
(1)    2/   E8317 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8317 :                     
(1)    2/   E8317 : =$3                 SourceDriver set 3
(1)    2/   E8317 :                     
(1)    2/   E8317 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8317 :                     
(1)    2/   E8317 : =$E8317             songStart set *
(1)    2/   E8317 :                     
(1)    2/   E8317 :                     
(1)    3/   E8317 : (MACRO)             	smpsHeaderVoice     Sound32_Drown_Voices
(1)    3/   E8317 : 4D83                                dc.w    z80_ptr(SOUND32_DROWN_VOICES)
(1)    4/   E8319 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8319 : 01                          dc.b    $01
(1)    5/   E831A : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E831A : 02                          dc.b    $02
(1)    6/   E831B :                     
(1)    7/   E831B : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound32_Drown_FM4,	$0C, $04
(1)    7/   E831B : 8004                        dc.b    $80,CFM4
(1)    7/   E831D :  (MACRO-2)                  CheckedChannelPointer SOUND32_DROWN_FM4
(1)    7/   E831D : 3983                                dc.w    z80_ptr(SOUND32_DROWN_FM4)
(1)    7/   E831F : 0C                                  dc.b    $0C
(1)    7/   E8320 : 04                          dc.b    $04
(1)    8/   E8321 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound32_Drown_FM5,	$0E, $02
(1)    8/   E8321 : 8005                        dc.b    $80,CFM5
(1)    8/   E8323 :  (MACRO-2)                  CheckedChannelPointer SOUND32_DROWN_FM5
(1)    8/   E8323 : 2783                                dc.w    z80_ptr(SOUND32_DROWN_FM5)
(1)    8/   E8325 : 0E                                  dc.b    $0E
(1)    8/   E8326 : 02                          dc.b    $02
(1)    9/   E8327 :                     
(1)   10/   E8327 :                     ; FM5 Data
(1)   11/   E8327 :                     Sound32_Drown_FM5:
(1)   12/   E8327 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8327 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8327 : EF00                                dc.b    $EF,$00
(1)   13/   E8329 : (MACRO)             	smpsModSet          $01, $01, $83, $0C
(1)   13/   E8329 : F0                          dc.b    $F0
(1)   13/   E832A : 0101 830C                           dc.b    $01,$01,$83,$0C
(1)   13/   E832E :                             ;dc.b   $01,$83,$0C
(1)   14/   E832E :                     
(1)   15/   E832E :                     Sound32_Drown_Loop01:
(1)   16/   E832E : 8A05 05             	dc.b	nA0, $05, $05
(1)   17/   E8331 : (MACRO)             	smpsAlterVol        $03
(1)   17/   E8331 : E603                        dc.b    $E6,$03
(1)   18/   E8333 : (MACRO)             	smpsLoop            $00, $0A, Sound32_Drown_Loop01
(1)   18/   E8333 : F7                          dc.b    $F7
(1)   18/   E8334 : 000A                        dc.b    $00,$0A
(1)   18/   E8336 : 2E83                                dc.w    z80_ptr(SOUND32_DROWN_LOOP01)
(1)   19/   E8338 : (MACRO)             	smpsStop
(1)   19/   E8338 : F2                          dc.b    $F2
(1)   20/   E8339 :                     
(1)   21/   E8339 :                     ; FM4 Data
(1)   22/   E8339 :                     Sound32_Drown_FM4:
(1)   23/   E8339 : 8006                	dc.b	nRst, $06
(1)   24/   E833B : (MACRO)             	smpsSetvoice        $00
(1)   24/   E833B :  (MACRO-2)                  smpsFMvoice $00
(1)   24/   E833B : EF00                                dc.b    $EF,$00
(1)   25/   E833D : (MACRO)             	smpsModSet          $01, $01, $6F, $0E
(1)   25/   E833D : F0                          dc.b    $F0
(1)   25/   E833E : 0101 6F0E                           dc.b    $01,$01,$6F,$0E
(1)   25/   E8342 :                             ;dc.b   $01,$6F,$0E
(1)   26/   E8342 :                     
(1)   27/   E8342 :                     Sound32_Drown_Loop00:
(1)   28/   E8342 : 8D04 05             	dc.b	nC1, $04, $05
(1)   29/   E8345 : (MACRO)             	smpsAlterVol        $03
(1)   29/   E8345 : E603                        dc.b    $E6,$03
(1)   30/   E8347 : (MACRO)             	smpsLoop            $00, $0A, Sound32_Drown_Loop00
(1)   30/   E8347 : F7                          dc.b    $F7
(1)   30/   E8348 : 000A                        dc.b    $00,$0A
(1)   30/   E834A : 4283                                dc.w    z80_ptr(SOUND32_DROWN_LOOP00)
(1)   31/   E834C : (MACRO)             	smpsStop
(1)   31/   E834C : F2                          dc.b    $F2
(1)   32/   E834D :                     
(1)   33/   E834D :                     Sound32_Drown_Voices:
(1)   34/   E834D :                     ;	Voice $00
(1)   35/   E834D :                     ;	$35
(1)   36/   E834D :                     ;	$14, $1A, $04, $09, 	$0E, $10, $11, $0E, 	$0C, $15, $03, $06
(1)   37/   E834D :                     ;	$16, $0E, $09, $10, 	$2F, $2F, $4F, $4F, 	$2F, $12, $12, $80
(1)   38/   E834D : (MACRO)             	smpsVcAlgorithm     $05
(1)   38/   E834D : =$5                 vcAlgorithm set $05
(1)   39/   E834D : (MACRO)             	smpsVcFeedback      $06
(1)   39/   E834D : =$6                 vcFeedback set $06
(1)   40/   E834D : (MACRO)             	smpsVcUnusedBits    $00
(1)   40/   E834D : =$0                 vcUnusedBits set $00
(1)   40/   E834D : =$0                 vcD1R1Unk set 0
(1)   40/   E834D : =$0                 vcD1R2Unk set 0
(1)   40/   E834D : =$0                 vcD1R3Unk set 0
(1)   40/   E834D : =$0                 vcD1R4Unk set 0
(1)   41/   E834D : (MACRO)             	smpsVcDetune        $00, $00, $01, $01
(1)   41/   E834D : =$0                 vcDT1 set $00
(1)   41/   E834D : =$0                 vcDT2 set $00
(1)   41/   E834D : =$1                 vcDT3 set $01
(1)   41/   E834D : =$1                 vcDT4 set $01
(1)   42/   E834D : (MACRO)             	smpsVcCoarseFreq    $09, $04, $0A, $04
(1)   42/   E834D : =$9                 vcCF1 set $09
(1)   42/   E834D : =$4                 vcCF2 set $04
(1)   42/   E834D : =$A                 vcCF3 set $0A
(1)   42/   E834D : =$4                 vcCF4 set $04
(1)   43/   E834D : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   43/   E834D : =$0                 vcRS1 set $00
(1)   43/   E834D : =$0                 vcRS2 set $00
(1)   43/   E834D : =$0                 vcRS3 set $00
(1)   43/   E834D : =$0                 vcRS4 set $00
(1)   44/   E834D : (MACRO)             	smpsVcAttackRate    $0E, $11, $10, $0E
(1)   44/   E834D : =$E                 vcAR1 set $0E
(1)   44/   E834D : =$11                vcAR2 set $11
(1)   44/   E834D : =$10                vcAR3 set $10
(1)   44/   E834D : =$E                 vcAR4 set $0E
(1)   45/   E834D : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   45/   E834D : =$0                 vcAM1 set $00<<7
(1)   45/   E834D : =$0                 vcAM2 set $00<<7
(1)   45/   E834D : =$0                 vcAM3 set $00<<7
(1)   45/   E834D : =$0                 vcAM4 set $00<<7
(1)   46/   E834D : (MACRO)             	smpsVcDecayRate1    $06, $03, $15, $0C
(1)   46/   E834D : =$6                 vcD1R1 set $06
(1)   46/   E834D : =$3                 vcD1R2 set $03
(1)   46/   E834D : =$15                vcD1R3 set $15
(1)   46/   E834D : =$C                 vcD1R4 set $0C
(1)   47/   E834D : (MACRO)             	smpsVcDecayRate2    $10, $09, $0E, $16
(1)   47/   E834D : =$10                vcD2R1 set $10
(1)   47/   E834D : =$9                 vcD2R2 set $09
(1)   47/   E834D : =$E                 vcD2R3 set $0E
(1)   47/   E834D : =$16                vcD2R4 set $16
(1)   48/   E834D : (MACRO)             	smpsVcDecayLevel    $04, $04, $02, $02
(1)   48/   E834D : =$4                 vcDL1 set $04
(1)   48/   E834D : =$4                 vcDL2 set $04
(1)   48/   E834D : =$2                 vcDL3 set $02
(1)   48/   E834D : =$2                 vcDL4 set $02
(1)   49/   E834D : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   49/   E834D : =$F                 vcRR1 set $0F
(1)   49/   E834D : =$F                 vcRR2 set $0F
(1)   49/   E834D : =$F                 vcRR3 set $0F
(1)   49/   E834D : =$F                 vcRR4 set $0F
(1)   50/   E834D : (MACRO)             	smpsVcTotalLevel    $80, $12, $12, $2F
(1)   50/   E834D : =$80                vcTL1 set $80
(1)   50/   E834D : =$12                vcTL2 set $12
(1)   50/   E834D : =$12                vcTL3 set $12
(1)   50/   E834D : =$2F                vcTL4 set $2F
(1)   50/   E834D : 35                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   50/   E834E :                     ;   0     1     2     3     4     5     6     7
(1)   50/   E834E :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   50/   E834E : =$0                 vcTLMask4 set 0
(1)   50/   E834E : =$0                 vcTLMask3 set 0
(1)   50/   E834E : =$0                 vcTLMask2 set 0
(1)   50/   E834E : =$0                 vcTLMask1 set 0
(1)   50/   E834E :                     
(1)   50/   E834E :                     
(1)   50/   E834E : 141A 0409                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   50/   E8352 : 0E10 110E                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   50/   E8356 : 0C15 0306                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   50/   E835A : 160E 0910                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   50/   E835E : 2F2F 4F4F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   50/   E8362 : 2F12 1280                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   51/   E8366 :                     
(1)   52/   E8366 :                     
  534/   E8366 :                        Sound33:	include "sfx-improved/B3 - Fire Burn.asm"
(1)    1/   E8366 :                     Sound33_FireBurn_Header:
(1)    2/   E8366 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8366 :                     
(1)    2/   E8366 : =$3                 SourceDriver set 3
(1)    2/   E8366 :                     
(1)    2/   E8366 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8366 :                     
(1)    2/   E8366 : =$E8366             songStart set *
(1)    2/   E8366 :                     
(1)    2/   E8366 :                     
(1)    3/   E8366 : (MACRO)             	smpsHeaderVoice     Sound2E_33_Voices
(1)    3/   E8366 : 7482                                dc.w    z80_ptr(SOUND2E_33_VOICES)
(1)    4/   E8368 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8368 : 01                          dc.b    $01
(1)    5/   E8369 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8369 : 02                          dc.b    $02
(1)    6/   E836A :                     
(1)    7/   E836A : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound33_FireBurn_FM5,	$00, $00
(1)    7/   E836A : 8005                        dc.b    $80,CFM5
(1)    7/   E836C :  (MACRO-2)                  CheckedChannelPointer SOUND33_FIREBURN_FM5
(1)    7/   E836C : 7683                                dc.w    z80_ptr(SOUND33_FIREBURN_FM5)
(1)    7/   E836E : 00                                  dc.b    $00
(1)    7/   E836F : 00                          dc.b    $00
(1)    8/   E8370 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound33_FireBurn_PSG3,	$00, $00
(1)    8/   E8370 : 80C0                        dc.b    $80,CPSG3
(1)    8/   E8372 :  (MACRO-2)                  CheckedChannelPointer SOUND33_FIREBURN_PSG3
(1)    8/   E8372 : 8483                                dc.w    z80_ptr(SOUND33_FIREBURN_PSG3)
(1)    8/   E8374 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8374 : 00                                  dc.b    $00
(1)    8/   E8375 : 00                          dc.b    $00
(1)    9/   E8376 :                     
(1)   10/   E8376 :                     ; FM5 Data
(1)   11/   E8376 :                     Sound33_FireBurn_FM5:
(1)   12/   E8376 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8376 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8376 : EF00                                dc.b    $EF,$00
(1)   13/   E8378 : 8001                	dc.b	nRst, $01
(1)   14/   E837A : (MACRO)             	smpsModSet          $01, $01, $40, $48
(1)   14/   E837A : F0                          dc.b    $F0
(1)   14/   E837B : 0101 4048                           dc.b    $01,$01,$40,$48
(1)   14/   E837F :                             ;dc.b   $01,$40,$48
(1)   15/   E837F : 8306 8502           	dc.b	nD0, $06, nE0, $02
(1)   16/   E8383 : (MACRO)             	smpsStop
(1)   16/   E8383 : F2                          dc.b    $F2
(1)   17/   E8384 :                     
(1)   18/   E8384 :                     ; PSG3 Data
(1)   19/   E8384 :                     Sound33_FireBurn_PSG3:
(1)   20/   E8384 : (MACRO)             	smpsPSGvoice        $00
(1)   20/   E8384 : F500                        dc.b    $F5,$00
(1)   21/   E8386 : 800B                	dc.b	nRst, $0B
(1)   22/   E8388 : (MACRO)             	smpsPSGform         $E7
(1)   22/   E8388 : F3E7                        dc.b    $F3,$E7
(1)   23/   E838A : A725 E7             	dc.b	nD3, $25, smpsNoAttack
(1)   24/   E838D :                     
(1)   25/   E838D :                     Sound33_FireBurn_Loop00:
(1)   26/   E838D : 02                  	dc.b	$02
(1)   27/   E838E : (MACRO)             	smpsPSGAlterVol     $01
(1)   27/   E838E : EC01                        dc.b    $EC,$01
(1)   28/   E8390 : E7                  	dc.b	smpsNoAttack
(1)   29/   E8391 : (MACRO)             	smpsLoop            $00, $10, Sound33_FireBurn_Loop00
(1)   29/   E8391 : F7                          dc.b    $F7
(1)   29/   E8392 : 0010                        dc.b    $00,$10
(1)   29/   E8394 : 8D83                                dc.w    z80_ptr(SOUND33_FIREBURN_LOOP00)
(1)   30/   E8396 : (MACRO)             	smpsStop
(1)   30/   E8396 : F2                          dc.b    $F2
(1)   31/   E8397 :                     
  535/   E8397 :                        Sound34:	include "sfx-improved/B4 - Bumper.asm"
(1)    1/   E8397 :                     Sound34_Bumper_Header:
(1)    2/   E8397 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8397 :                     
(1)    2/   E8397 : =$3                 SourceDriver set 3
(1)    2/   E8397 :                     
(1)    2/   E8397 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8397 :                     
(1)    2/   E8397 : =$E8397             songStart set *
(1)    2/   E8397 :                     
(1)    2/   E8397 :                     
(1)    3/   E8397 : (MACRO)             	smpsHeaderVoice     Sound34_Bumper_Voices
(1)    3/   E8397 : C083                                dc.w    z80_ptr(SOUND34_BUMPER_VOICES)
(1)    4/   E8399 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8399 : 01                          dc.b    $01
(1)    5/   E839A : (MACRO)             	smpsHeaderChanSFX   $03
(1)    5/   E839A : 03                          dc.b    $03
(1)    6/   E839B :                     
(1)    7/   E839B : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound34_Bumper_FM5,	$00, $00
(1)    7/   E839B : 8005                        dc.b    $80,CFM5
(1)    7/   E839D :  (MACRO-2)                  CheckedChannelPointer SOUND34_BUMPER_FM5
(1)    7/   E839D : AD83                                dc.w    z80_ptr(SOUND34_BUMPER_FM5)
(1)    7/   E839F : 00                                  dc.b    $00
(1)    7/   E83A0 : 00                          dc.b    $00
(1)    8/   E83A1 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound34_Bumper_FM4,	$00, $00
(1)    8/   E83A1 : 8004                        dc.b    $80,CFM4
(1)    8/   E83A3 :  (MACRO-2)                  CheckedChannelPointer SOUND34_BUMPER_FM4
(1)    8/   E83A3 : B283                                dc.w    z80_ptr(SOUND34_BUMPER_FM4)
(1)    8/   E83A5 : 00                                  dc.b    $00
(1)    8/   E83A6 : 00                          dc.b    $00
(1)    9/   E83A7 : (MACRO)             	smpsHeaderSFXChannel cFM3, Sound34_Bumper_FM3,	$00, $02
(1)    9/   E83A7 : 8002                        dc.b    $80,CFM3
(1)    9/   E83A9 :  (MACRO-2)                  CheckedChannelPointer SOUND34_BUMPER_FM3
(1)    9/   E83A9 : BB83                                dc.w    z80_ptr(SOUND34_BUMPER_FM3)
(1)    9/   E83AB : 00                                  dc.b    $00
(1)    9/   E83AC : 02                          dc.b    $02
(1)   10/   E83AD :                     
(1)   11/   E83AD :                     ; FM5 Data
(1)   12/   E83AD :                     Sound34_Bumper_FM5:
(1)   13/   E83AD : (MACRO)             	smpsSetvoice        $00
(1)   13/   E83AD :  (MACRO-2)                  smpsFMvoice $00
(1)   13/   E83AD : EF00                                dc.b    $EF,$00
(1)   14/   E83AF : (MACRO)             	smpsJump            Sound34_Bumper_Jump00
(1)   14/   E83AF : F6                          dc.b    $F6
(1)   14/   E83B0 : B883                                dc.w    z80_ptr(SOUND34_BUMPER_JUMP00)
(1)   15/   E83B2 :                     
(1)   16/   E83B2 :                     ; FM4 Data
(1)   17/   E83B2 :                     Sound34_Bumper_FM4:
(1)   18/   E83B2 : (MACRO)             	smpsSetvoice        $00
(1)   18/   E83B2 :  (MACRO-2)                  smpsFMvoice $00
(1)   18/   E83B2 : EF00                                dc.b    $EF,$00
(1)   19/   E83B4 : (MACRO)             	smpsAlterNote       $07
(1)   19/   E83B4 :  (MACRO-2)                  smpsDetune      $07
(1)   19/   E83B4 : E107                        dc.b    $E1,$07
(1)   20/   E83B6 : 8001                	dc.b	nRst, $01
(1)   21/   E83B8 :                     
(1)   22/   E83B8 :                     Sound34_Bumper_Jump00:
(1)   23/   E83B8 : BA20                	dc.b	nA4, $20
(1)   24/   E83BA : (MACRO)             	smpsStop
(1)   24/   E83BA : F2                          dc.b    $F2
(1)   25/   E83BB :                     
(1)   26/   E83BB :                     ; FM3 Data
(1)   27/   E83BB :                     Sound34_Bumper_FM3:
(1)   28/   E83BB : (MACRO)             	smpsSetvoice        $01
(1)   28/   E83BB :  (MACRO-2)                  smpsFMvoice $01
(1)   28/   E83BB : EF01                                dc.b    $EF,$01
(1)   29/   E83BD : 9A03                	dc.b	nCs2, $03
(1)   30/   E83BF : (MACRO)             	smpsStop
(1)   30/   E83BF : F2                          dc.b    $F2
(1)   31/   E83C0 :                     
(1)   32/   E83C0 :                     Sound34_Bumper_Voices:
(1)   33/   E83C0 :                     ;	Voice $00
(1)   34/   E83C0 :                     ;	$3C
(1)   35/   E83C0 :                     ;	$05, $01, $0A, $01, 	$56, $5C, $5C, $5C, 	$0E, $11, $11, $11
(1)   36/   E83C0 :                     ;	$09, $0A, $06, $0A, 	$4F, $3F, $3F, $3F, 	$1F, $80, $2B, $80
(1)   37/   E83C0 : (MACRO)             	smpsVcAlgorithm     $04
(1)   37/   E83C0 : =$4                 vcAlgorithm set $04
(1)   38/   E83C0 : (MACRO)             	smpsVcFeedback      $07
(1)   38/   E83C0 : =$7                 vcFeedback set $07
(1)   39/   E83C0 : (MACRO)             	smpsVcUnusedBits    $00
(1)   39/   E83C0 : =$0                 vcUnusedBits set $00
(1)   39/   E83C0 : =$0                 vcD1R1Unk set 0
(1)   39/   E83C0 : =$0                 vcD1R2Unk set 0
(1)   39/   E83C0 : =$0                 vcD1R3Unk set 0
(1)   39/   E83C0 : =$0                 vcD1R4Unk set 0
(1)   40/   E83C0 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   40/   E83C0 : =$0                 vcDT1 set $00
(1)   40/   E83C0 : =$0                 vcDT2 set $00
(1)   40/   E83C0 : =$0                 vcDT3 set $00
(1)   40/   E83C0 : =$0                 vcDT4 set $00
(1)   41/   E83C0 : (MACRO)             	smpsVcCoarseFreq    $01, $0A, $01, $05
(1)   41/   E83C0 : =$1                 vcCF1 set $01
(1)   41/   E83C0 : =$A                 vcCF2 set $0A
(1)   41/   E83C0 : =$1                 vcCF3 set $01
(1)   41/   E83C0 : =$5                 vcCF4 set $05
(1)   42/   E83C0 : (MACRO)             	smpsVcRateScale     $01, $01, $01, $01
(1)   42/   E83C0 : =$1                 vcRS1 set $01
(1)   42/   E83C0 : =$1                 vcRS2 set $01
(1)   42/   E83C0 : =$1                 vcRS3 set $01
(1)   42/   E83C0 : =$1                 vcRS4 set $01
(1)   43/   E83C0 : (MACRO)             	smpsVcAttackRate    $1C, $1C, $1C, $16
(1)   43/   E83C0 : =$1C                vcAR1 set $1C
(1)   43/   E83C0 : =$1C                vcAR2 set $1C
(1)   43/   E83C0 : =$1C                vcAR3 set $1C
(1)   43/   E83C0 : =$16                vcAR4 set $16
(1)   44/   E83C0 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   44/   E83C0 : =$0                 vcAM1 set $00<<5
(1)   44/   E83C0 : =$0                 vcAM2 set $00<<5
(1)   44/   E83C0 : =$0                 vcAM3 set $00<<5
(1)   44/   E83C0 : =$0                 vcAM4 set $00<<5
(1)   45/   E83C0 : (MACRO)             	smpsVcDecayRate1    $11, $11, $11, $0E
(1)   45/   E83C0 : =$11                vcD1R1 set $11
(1)   45/   E83C0 : =$11                vcD1R2 set $11
(1)   45/   E83C0 : =$11                vcD1R3 set $11
(1)   45/   E83C0 : =$E                 vcD1R4 set $0E
(1)   46/   E83C0 : (MACRO)             	smpsVcDecayRate2    $0A, $06, $0A, $09
(1)   46/   E83C0 : =$A                 vcD2R1 set $0A
(1)   46/   E83C0 : =$6                 vcD2R2 set $06
(1)   46/   E83C0 : =$A                 vcD2R3 set $0A
(1)   46/   E83C0 : =$9                 vcD2R4 set $09
(1)   47/   E83C0 : (MACRO)             	smpsVcDecayLevel    $03, $03, $03, $04
(1)   47/   E83C0 : =$3                 vcDL1 set $03
(1)   47/   E83C0 : =$3                 vcDL2 set $03
(1)   47/   E83C0 : =$3                 vcDL3 set $03
(1)   47/   E83C0 : =$4                 vcDL4 set $04
(1)   48/   E83C0 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   48/   E83C0 : =$F                 vcRR1 set $0F
(1)   48/   E83C0 : =$F                 vcRR2 set $0F
(1)   48/   E83C0 : =$F                 vcRR3 set $0F
(1)   48/   E83C0 : =$F                 vcRR4 set $0F
(1)   49/   E83C0 : (MACRO)             	smpsVcTotalLevel    $00, $2B, $00, $1F
(1)   49/   E83C0 : =$0                 vcTL1 set $00
(1)   49/   E83C0 : =$2B                vcTL2 set $2B
(1)   49/   E83C0 : =$0                 vcTL3 set $00
(1)   49/   E83C0 : =$1F                vcTL4 set $1F
(1)   49/   E83C0 : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   49/   E83C1 :                     ;   0     1     2     3     4     5     6     7
(1)   49/   E83C1 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   49/   E83C1 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   49/   E83C1 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   49/   E83C1 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   49/   E83C1 : =$80                vcTLMask1 set $80
(1)   49/   E83C1 :                     
(1)   49/   E83C1 :                     
(1)   49/   E83C1 : 0501 0A01                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   49/   E83C5 : 565C 5C5C                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   49/   E83C9 : 0E11 1111                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   49/   E83CD : 090A 060A                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   49/   E83D1 : 4F3F 3F3F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   49/   E83D5 : 1F80 2B80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   50/   E83D9 :                     
(1)   51/   E83D9 :                     ;	Voice $01
(1)   52/   E83D9 :                     ;	$05
(1)   53/   E83D9 :                     ;	$00, $00, $00, $00, 	$1F, $1F, $1F, $1F, 	$12, $0C, $0C, $0C
(1)   54/   E83D9 :                     ;	$12, $08, $08, $08, 	$1F, $5F, $5F, $5F, 	$07, $80, $80, $80
(1)   55/   E83D9 : (MACRO)             	smpsVcAlgorithm     $05
(1)   55/   E83D9 : =$5                 vcAlgorithm set $05
(1)   56/   E83D9 : (MACRO)             	smpsVcFeedback      $00
(1)   56/   E83D9 : =$0                 vcFeedback set $00
(1)   57/   E83D9 : (MACRO)             	smpsVcUnusedBits    $00
(1)   57/   E83D9 : =$0                 vcUnusedBits set $00
(1)   57/   E83D9 : =$0                 vcD1R1Unk set 0
(1)   57/   E83D9 : =$0                 vcD1R2Unk set 0
(1)   57/   E83D9 : =$0                 vcD1R3Unk set 0
(1)   57/   E83D9 : =$0                 vcD1R4Unk set 0
(1)   58/   E83D9 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   58/   E83D9 : =$0                 vcDT1 set $00
(1)   58/   E83D9 : =$0                 vcDT2 set $00
(1)   58/   E83D9 : =$0                 vcDT3 set $00
(1)   58/   E83D9 : =$0                 vcDT4 set $00
(1)   59/   E83D9 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   59/   E83D9 : =$0                 vcCF1 set $00
(1)   59/   E83D9 : =$0                 vcCF2 set $00
(1)   59/   E83D9 : =$0                 vcCF3 set $00
(1)   59/   E83D9 : =$0                 vcCF4 set $00
(1)   60/   E83D9 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   60/   E83D9 : =$0                 vcRS1 set $00
(1)   60/   E83D9 : =$0                 vcRS2 set $00
(1)   60/   E83D9 : =$0                 vcRS3 set $00
(1)   60/   E83D9 : =$0                 vcRS4 set $00
(1)   61/   E83D9 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   61/   E83D9 : =$1F                vcAR1 set $1F
(1)   61/   E83D9 : =$1F                vcAR2 set $1F
(1)   61/   E83D9 : =$1F                vcAR3 set $1F
(1)   61/   E83D9 : =$1F                vcAR4 set $1F
(1)   62/   E83D9 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   62/   E83D9 : =$0                 vcAM1 set $00<<5
(1)   62/   E83D9 : =$0                 vcAM2 set $00<<5
(1)   62/   E83D9 : =$0                 vcAM3 set $00<<5
(1)   62/   E83D9 : =$0                 vcAM4 set $00<<5
(1)   63/   E83D9 : (MACRO)             	smpsVcDecayRate1    $0C, $0C, $0C, $12
(1)   63/   E83D9 : =$C                 vcD1R1 set $0C
(1)   63/   E83D9 : =$C                 vcD1R2 set $0C
(1)   63/   E83D9 : =$C                 vcD1R3 set $0C
(1)   63/   E83D9 : =$12                vcD1R4 set $12
(1)   64/   E83D9 : (MACRO)             	smpsVcDecayRate2    $08, $08, $08, $12
(1)   64/   E83D9 : =$8                 vcD2R1 set $08
(1)   64/   E83D9 : =$8                 vcD2R2 set $08
(1)   64/   E83D9 : =$8                 vcD2R3 set $08
(1)   64/   E83D9 : =$12                vcD2R4 set $12
(1)   65/   E83D9 : (MACRO)             	smpsVcDecayLevel    $05, $05, $05, $01
(1)   65/   E83D9 : =$5                 vcDL1 set $05
(1)   65/   E83D9 : =$5                 vcDL2 set $05
(1)   65/   E83D9 : =$5                 vcDL3 set $05
(1)   65/   E83D9 : =$1                 vcDL4 set $01
(1)   66/   E83D9 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   66/   E83D9 : =$F                 vcRR1 set $0F
(1)   66/   E83D9 : =$F                 vcRR2 set $0F
(1)   66/   E83D9 : =$F                 vcRR3 set $0F
(1)   66/   E83D9 : =$F                 vcRR4 set $0F
(1)   67/   E83D9 : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $07
(1)   67/   E83D9 : =$0                 vcTL1 set $00
(1)   67/   E83D9 : =$0                 vcTL2 set $00
(1)   67/   E83D9 : =$0                 vcTL3 set $00
(1)   67/   E83D9 : =$7                 vcTL4 set $07
(1)   67/   E83D9 : 05                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   67/   E83DA :                     ;   0     1     2     3     4     5     6     7
(1)   67/   E83DA :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   67/   E83DA : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   67/   E83DA : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   67/   E83DA : =$80                vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   67/   E83DA : =$80                vcTLMask1 set $80
(1)   67/   E83DA :                     
(1)   67/   E83DA :                     
(1)   67/   E83DA : 0000 0000                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   67/   E83DE : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   67/   E83E2 : 120C 0C0C                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   67/   E83E6 : 1208 0808                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   67/   E83EA : 1F5F 5F5F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   67/   E83EE : 0780 8080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   68/   E83F2 :                     
(1)   69/   E83F2 :                     
  536/   E83F2 :                        Sound35:	include "sfx-improved/B5 - Ring.asm"
(1)    1/   E83F2 :                     Sound35_RingRight_Header:
(1)    2/   E83F2 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E83F2 :                     
(1)    2/   E83F2 : =$3                 SourceDriver set 3
(1)    2/   E83F2 :                     
(1)    2/   E83F2 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E83F2 :                     
(1)    2/   E83F2 : =$E83F2             songStart set *
(1)    2/   E83F2 :                     
(1)    2/   E83F2 :                     
(1)    3/   E83F2 : (MACRO)             	smpsHeaderVoice     Sound_Ring_Voices
(1)    3/   E83F2 : AD87                                dc.w    z80_ptr(SOUND_RING_VOICES)
(1)    4/   E83F4 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E83F4 : 01                          dc.b    $01
(1)    5/   E83F5 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E83F5 : 01                          dc.b    $01
(1)    6/   E83F6 :                     
(1)    7/   E83F6 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound35_RingRight_FM5,	$00, $05
(1)    7/   E83F6 : 8005                        dc.b    $80,CFM5
(1)    7/   E83F8 :  (MACRO-2)                  CheckedChannelPointer SOUND35_RINGRIGHT_FM5
(1)    7/   E83F8 : FC83                                dc.w    z80_ptr(SOUND35_RINGRIGHT_FM5)
(1)    7/   E83FA : 00                                  dc.b    $00
(1)    7/   E83FB : 05                          dc.b    $05
(1)    8/   E83FC :                     
(1)    9/   E83FC :                     ; FM5 Data
(1)   10/   E83FC :                     Sound35_RingRight_FM5:
(1)   11/   E83FC : (MACRO)             	smpsSetvoice        $00
(1)   11/   E83FC :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E83FC : EF00                                dc.b    $EF,$00
(1)   12/   E83FE : (MACRO)             	smpsPan             panRight, $00
(1)   12/   E83FE : =$0                 panNone set $00
(1)   12/   E83FE : =$40                panRight set $40
(1)   12/   E83FE : =$80                panLeft set $80
(1)   12/   E83FE : =$C0                panCentre set $C0
(1)   12/   E83FE : =$C0                panCenter set $C0 ; silly Americans :U
(1)   12/   E83FE : E040                        dc.b $E0,PANRIGHT+$00
(1)   13/   E8400 : C105 C405 C91B      	dc.b	nE5, $05, nG5, $05, nC6, $1B
(1)   14/   E8406 : (MACRO)             	smpsStop
(1)   14/   E8406 : F2                          dc.b    $F2
(1)   15/   E8407 :                     
(1)   16/   E8407 :                     
  537/   E8407 :                        Sound36:	include "sfx-improved/B6 - Spikes Move.asm"
(1)    1/   E8407 :                     Sound36_SpikesMove_Header:
(1)    2/   E8407 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8407 :                     
(1)    2/   E8407 : =$3                 SourceDriver set 3
(1)    2/   E8407 :                     
(1)    2/   E8407 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8407 :                     
(1)    2/   E8407 : =$E8407             songStart set *
(1)    2/   E8407 :                     
(1)    2/   E8407 :                     
(1)    3/   E8407 : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E8407 : 0000                        dc.w    $0000
(1)    4/   E8409 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8409 : 01                          dc.b    $01
(1)    5/   E840A : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E840A : 01                          dc.b    $01
(1)    6/   E840B :                     
(1)    7/   E840B : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound36_SpikesMove_PSG3,	$00, $00
(1)    7/   E840B : 80C0                        dc.b    $80,CPSG3
(1)    7/   E840D :  (MACRO-2)                  CheckedChannelPointer SOUND36_SPIKESMOVE_PSG3
(1)    7/   E840D : 1184                                dc.w    z80_ptr(SOUND36_SPIKESMOVE_PSG3)
(1)    7/   E840F :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E840F : 00                                  dc.b    $00
(1)    7/   E8410 : 00                          dc.b    $00
(1)    8/   E8411 :                     
(1)    9/   E8411 :                     ; PSG3 Data
(1)   10/   E8411 :                     Sound36_SpikesMove_PSG3:
(1)   11/   E8411 : (MACRO)             	smpsModSet          $01, $01, $F0, $08
(1)   11/   E8411 : F0                          dc.b    $F0
(1)   11/   E8412 : 0101 F008                           dc.b    $01,$01,$F0,$08
(1)   11/   E8416 :                             ;dc.b   $01,$F0,$08
(1)   12/   E8416 : (MACRO)             	smpsPSGform         $E7
(1)   12/   E8416 : F3E7                        dc.b    $F3,$E7
(1)   13/   E8418 : C107                	dc.b	nE5, $07
(1)   14/   E841A :                     
(1)   15/   E841A :                     Sound36_SpikesMove_Loop00:
(1)   16/   E841A : D001                	dc.b	nG6, $01
(1)   17/   E841C : (MACRO)             	smpsPSGAlterVol     $01
(1)   17/   E841C : EC01                        dc.b    $EC,$01
(1)   18/   E841E : (MACRO)             	smpsLoop            $00, $0C, Sound36_SpikesMove_Loop00
(1)   18/   E841E : F7                          dc.b    $F7
(1)   18/   E841F : 000C                        dc.b    $00,$0C
(1)   18/   E8421 : 1A84                                dc.w    z80_ptr(SOUND36_SPIKESMOVE_LOOP00)
(1)   19/   E8423 : (MACRO)             	smpsStop
(1)   19/   E8423 : F2                          dc.b    $F2
(1)   20/   E8424 :                     
  538/   E8424 :                        Sound37:	include "sfx-improved/B7 - Rumbling.asm"
(1)    1/   E8424 :                     Sound37_Rumbling_Header:
(1)    2/   E8424 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8424 :                     
(1)    2/   E8424 : =$3                 SourceDriver set 3
(1)    2/   E8424 :                     
(1)    2/   E8424 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8424 :                     
(1)    2/   E8424 : =$E8424             songStart set *
(1)    2/   E8424 :                     
(1)    2/   E8424 :                     
(1)    3/   E8424 : (MACRO)             	smpsHeaderVoice     Sound37_Rumbling_Voices
(1)    3/   E8424 : 4684                                dc.w    z80_ptr(SOUND37_RUMBLING_VOICES)
(1)    4/   E8426 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8426 : 01                          dc.b    $01
(1)    5/   E8427 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8427 : 01                          dc.b    $01
(1)    6/   E8428 :                     
(1)    7/   E8428 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound37_Rumbling_FM5,	$00, $00
(1)    7/   E8428 : 8005                        dc.b    $80,CFM5
(1)    7/   E842A :  (MACRO-2)                  CheckedChannelPointer SOUND37_RUMBLING_FM5
(1)    7/   E842A : 2E84                                dc.w    z80_ptr(SOUND37_RUMBLING_FM5)
(1)    7/   E842C : 00                                  dc.b    $00
(1)    7/   E842D : 00                          dc.b    $00
(1)    8/   E842E :                     
(1)    9/   E842E :                     ; FM5 Data
(1)   10/   E842E :                     Sound37_Rumbling_FM5:
(1)   11/   E842E : (MACRO)             	smpsSetvoice        $00
(1)   11/   E842E :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E842E : EF00                                dc.b    $EF,$00
(1)   12/   E8430 : (MACRO)             	smpsModSet          $01, $01, $20, $08
(1)   12/   E8430 : F0                          dc.b    $F0
(1)   12/   E8431 : 0101 2008                           dc.b    $01,$01,$20,$08
(1)   12/   E8435 :                             ;dc.b   $01,$20,$08
(1)   13/   E8435 :                     
(1)   14/   E8435 :                     Sound37_Rumbling_Loop00:
(1)   15/   E8435 : 8B0A                	dc.b	nBb0, $0A
(1)   16/   E8437 : (MACRO)             	smpsLoop            $00, $08, Sound37_Rumbling_Loop00
(1)   16/   E8437 : F7                          dc.b    $F7
(1)   16/   E8438 : 0008                        dc.b    $00,$08
(1)   16/   E843A : 3584                                dc.w    z80_ptr(SOUND37_RUMBLING_LOOP00)
(1)   17/   E843C :                     
(1)   18/   E843C :                     Sound37_Rumbling_Loop01:
(1)   19/   E843C : 8B10                	dc.b	nBb0, $10
(1)   20/   E843E : (MACRO)             	smpsAlterVol        $03
(1)   20/   E843E : E603                        dc.b    $E6,$03
(1)   21/   E8440 : (MACRO)             	smpsLoop            $00, $09, Sound37_Rumbling_Loop01
(1)   21/   E8440 : F7                          dc.b    $F7
(1)   21/   E8441 : 0009                        dc.b    $00,$09
(1)   21/   E8443 : 3C84                                dc.w    z80_ptr(SOUND37_RUMBLING_LOOP01)
(1)   22/   E8445 : (MACRO)             	smpsStop
(1)   22/   E8445 : F2                          dc.b    $F2
(1)   23/   E8446 :                     
(1)   24/   E8446 :                     Sound37_Rumbling_Voices:
(1)   25/   E8446 :                     ;	Voice $00
(1)   26/   E8446 :                     ;	$FA
(1)   27/   E8446 :                     ;	$21, $30, $10, $32, 	$1F, $1F, $1F, $1F, 	$05, $18, $09, $02
(1)   28/   E8446 :                     ;	$06, $0F, $06, $02, 	$1F, $2F, $4F, $2F, 	$0F, $1A, $0E, $80
(1)   29/   E8446 : (MACRO)             	smpsVcAlgorithm     $02
(1)   29/   E8446 : =$2                 vcAlgorithm set $02
(1)   30/   E8446 : (MACRO)             	smpsVcFeedback      $07
(1)   30/   E8446 : =$7                 vcFeedback set $07
(1)   31/   E8446 : (MACRO)             	smpsVcUnusedBits    $03
(1)   31/   E8446 : =$3                 vcUnusedBits set $03
(1)   31/   E8446 : =$0                 vcD1R1Unk set 0
(1)   31/   E8446 : =$0                 vcD1R2Unk set 0
(1)   31/   E8446 : =$0                 vcD1R3Unk set 0
(1)   31/   E8446 : =$0                 vcD1R4Unk set 0
(1)   32/   E8446 : (MACRO)             	smpsVcDetune        $03, $01, $03, $02
(1)   32/   E8446 : =$3                 vcDT1 set $03
(1)   32/   E8446 : =$1                 vcDT2 set $01
(1)   32/   E8446 : =$3                 vcDT3 set $03
(1)   32/   E8446 : =$2                 vcDT4 set $02
(1)   33/   E8446 : (MACRO)             	smpsVcCoarseFreq    $02, $00, $00, $01
(1)   33/   E8446 : =$2                 vcCF1 set $02
(1)   33/   E8446 : =$0                 vcCF2 set $00
(1)   33/   E8446 : =$0                 vcCF3 set $00
(1)   33/   E8446 : =$1                 vcCF4 set $01
(1)   34/   E8446 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   34/   E8446 : =$0                 vcRS1 set $00
(1)   34/   E8446 : =$0                 vcRS2 set $00
(1)   34/   E8446 : =$0                 vcRS3 set $00
(1)   34/   E8446 : =$0                 vcRS4 set $00
(1)   35/   E8446 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   35/   E8446 : =$1F                vcAR1 set $1F
(1)   35/   E8446 : =$1F                vcAR2 set $1F
(1)   35/   E8446 : =$1F                vcAR3 set $1F
(1)   35/   E8446 : =$1F                vcAR4 set $1F
(1)   36/   E8446 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E8446 : =$0                 vcAM1 set $00<<5
(1)   36/   E8446 : =$0                 vcAM2 set $00<<5
(1)   36/   E8446 : =$0                 vcAM3 set $00<<5
(1)   36/   E8446 : =$0                 vcAM4 set $00<<5
(1)   37/   E8446 : (MACRO)             	smpsVcDecayRate1    $02, $09, $18, $05
(1)   37/   E8446 : =$2                 vcD1R1 set $02
(1)   37/   E8446 : =$9                 vcD1R2 set $09
(1)   37/   E8446 : =$18                vcD1R3 set $18
(1)   37/   E8446 : =$5                 vcD1R4 set $05
(1)   38/   E8446 : (MACRO)             	smpsVcDecayRate2    $02, $06, $0F, $06
(1)   38/   E8446 : =$2                 vcD2R1 set $02
(1)   38/   E8446 : =$6                 vcD2R2 set $06
(1)   38/   E8446 : =$F                 vcD2R3 set $0F
(1)   38/   E8446 : =$6                 vcD2R4 set $06
(1)   39/   E8446 : (MACRO)             	smpsVcDecayLevel    $02, $04, $02, $01
(1)   39/   E8446 : =$2                 vcDL1 set $02
(1)   39/   E8446 : =$4                 vcDL2 set $04
(1)   39/   E8446 : =$2                 vcDL3 set $02
(1)   39/   E8446 : =$1                 vcDL4 set $01
(1)   40/   E8446 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E8446 : =$F                 vcRR1 set $0F
(1)   40/   E8446 : =$F                 vcRR2 set $0F
(1)   40/   E8446 : =$F                 vcRR3 set $0F
(1)   40/   E8446 : =$F                 vcRR4 set $0F
(1)   41/   E8446 : (MACRO)             	smpsVcTotalLevel    $00, $0E, $1A, $0F
(1)   41/   E8446 : =$0                 vcTL1 set $00
(1)   41/   E8446 : =$E                 vcTL2 set $0E
(1)   41/   E8446 : =$1A                vcTL3 set $1A
(1)   41/   E8446 : =$F                 vcTL4 set $0F
(1)   41/   E8446 : FA                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E8447 :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E8447 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E8447 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   41/   E8447 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   41/   E8447 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   41/   E8447 : =$80                vcTLMask1 set $80
(1)   41/   E8447 :                     
(1)   41/   E8447 :                     
(1)   41/   E8447 : 2130 1032                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E844B : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E844F : 0518 0902                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E8453 : 060F 0602                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E8457 : 1F2F 4F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E845B : 0F1A 0E80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E845F :                     
(1)   43/   E845F :                     
  539/   E845F :                        Sound38:	include "sfx-improved/B8 - Unknown (Unused).asm"
(1)    1/   E845F :                     Sound38_Header:
(1)    2/   E845F : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E845F :                     
(1)    2/   E845F : =$3                 SourceDriver set 3
(1)    2/   E845F :                     
(1)    2/   E845F : =$0                 SourceSMPS2ASM set 0
(1)    2/   E845F :                     
(1)    2/   E845F : =$E845F             songStart set *
(1)    2/   E845F :                     
(1)    2/   E845F :                     
(1)    3/   E845F : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E845F : 0000                        dc.w    $0000
(1)    4/   E8461 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8461 : 01                          dc.b    $01
(1)    5/   E8462 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8462 : 01                          dc.b    $01
(1)    6/   E8463 :                     
(1)    7/   E8463 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound38_PSG3,	$00, $00
(1)    7/   E8463 : 80C0                        dc.b    $80,CPSG3
(1)    7/   E8465 :  (MACRO-2)                  CheckedChannelPointer SOUND38_PSG3
(1)    7/   E8465 : 6984                                dc.w    z80_ptr(SOUND38_PSG3)
(1)    7/   E8467 :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E8467 : 00                                  dc.b    $00
(1)    7/   E8468 : 00                          dc.b    $00
(1)    8/   E8469 :                     
(1)    9/   E8469 :                     ; PSG3 Data
(1)   10/   E8469 :                     Sound38_PSG3:
(1)   11/   E8469 : (MACRO)             	smpsModSet          $01, $01, $F0, $08
(1)   11/   E8469 : F0                          dc.b    $F0
(1)   11/   E846A : 0101 F008                           dc.b    $01,$01,$F0,$08
(1)   11/   E846E :                             ;dc.b   $01,$F0,$08
(1)   12/   E846E : (MACRO)             	smpsPSGform         $E7
(1)   12/   E846E : F3E7                        dc.b    $F3,$E7
(1)   13/   E8470 : B408                	dc.b	nEb4, $08
(1)   14/   E8472 :                     
(1)   15/   E8472 :                     Sound38_Loop00:
(1)   16/   E8472 : B002                	dc.b	nB3, $02
(1)   17/   E8474 : (MACRO)             	smpsPSGAlterVol     $01
(1)   17/   E8474 : EC01                        dc.b    $EC,$01
(1)   18/   E8476 : (MACRO)             	smpsLoop            $00, $03, Sound38_Loop00
(1)   18/   E8476 : F7                          dc.b    $F7
(1)   18/   E8477 : 0003                        dc.b    $00,$03
(1)   18/   E8479 : 7284                                dc.w    z80_ptr(SOUND38_LOOP00)
(1)   19/   E847B : (MACRO)             	smpsStop
(1)   19/   E847B : F2                          dc.b    $F2
(1)   20/   E847C :                     
  540/   E847C :                        Sound39:	include "sfx-improved/B9 - Smash.asm"
(1)    1/   E847C :                     Sound39_Smash_Header:
(1)    2/   E847C : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E847C :                     
(1)    2/   E847C : =$3                 SourceDriver set 3
(1)    2/   E847C :                     
(1)    2/   E847C : =$0                 SourceSMPS2ASM set 0
(1)    2/   E847C :                     
(1)    2/   E847C : =$E847C             songStart set *
(1)    2/   E847C :                     
(1)    2/   E847C :                     
(1)    3/   E847C : (MACRO)             	smpsHeaderVoice     Sound2C_39_4B_Voices
(1)    3/   E847C : F481                                dc.w    z80_ptr(SOUND2C_39_4B_VOICES)
(1)    4/   E847E : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E847E : 01                          dc.b    $01
(1)    5/   E847F : (MACRO)             	smpsHeaderChanSFX   $04
(1)    5/   E847F : 04                          dc.b    $04
(1)    6/   E8480 :                     
(1)    7/   E8480 : (MACRO)             	smpsHeaderSFXChannel cFM3, Sound39_Smash_FM3,	$10, $00
(1)    7/   E8480 : 8002                        dc.b    $80,CFM3
(1)    7/   E8482 :  (MACRO-2)                  CheckedChannelPointer SOUND39_SMASH_FM3
(1)    7/   E8482 : 9884                                dc.w    z80_ptr(SOUND39_SMASH_FM3)
(1)    7/   E8484 : 10                                  dc.b    $10
(1)    7/   E8485 : 00                          dc.b    $00
(1)    8/   E8486 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound39_Smash_FM4,	$00, $00
(1)    8/   E8486 : 8004                        dc.b    $80,CFM4
(1)    8/   E8488 :  (MACRO-2)                  CheckedChannelPointer SOUND39_SMASH_FM4
(1)    8/   E8488 : A384                                dc.w    z80_ptr(SOUND39_SMASH_FM4)
(1)    8/   E848A : 00                                  dc.b    $00
(1)    8/   E848B : 00                          dc.b    $00
(1)    9/   E848C : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound39_Smash_FM5,	$10, $00
(1)    9/   E848C : 8005                        dc.b    $80,CFM5
(1)    9/   E848E :  (MACRO-2)                  CheckedChannelPointer SOUND39_SMASH_FM5
(1)    9/   E848E : 9F84                                dc.w    z80_ptr(SOUND39_SMASH_FM5)
(1)    9/   E8490 : 10                                  dc.b    $10
(1)    9/   E8491 : 00                          dc.b    $00
(1)   10/   E8492 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound39_Smash_PSG3,	$00, $00
(1)   10/   E8492 : 80C0                        dc.b    $80,CPSG3
(1)   10/   E8494 :  (MACRO-2)                  CheckedChannelPointer SOUND39_SMASH_PSG3
(1)   10/   E8494 : B484                                dc.w    z80_ptr(SOUND39_SMASH_PSG3)
(1)   10/   E8496 :  (MACRO-2)                          PSGPitchConvert $00
(1)   10/   E8496 : 00                                  dc.b    $00
(1)   10/   E8497 : 00                          dc.b    $00
(1)   11/   E8498 :                     
(1)   12/   E8498 :                     ; FM3 Data
(1)   13/   E8498 :                     Sound39_Smash_FM3:
(1)   14/   E8498 : (MACRO)             	smpsPan             panRight, $00
(1)   14/   E8498 : =$0                 panNone set $00
(1)   14/   E8498 : =$40                panRight set $40
(1)   14/   E8498 : =$80                panLeft set $80
(1)   14/   E8498 : =$C0                panCentre set $C0
(1)   14/   E8498 : =$C0                panCenter set $C0 ; silly Americans :U
(1)   14/   E8498 : E040                        dc.b $E0,PANRIGHT+$00
(1)   15/   E849A : 8002                	dc.b	nRst, $02
(1)   16/   E849C : (MACRO)             	smpsJump            Sound39_Smash_FM4
(1)   16/   E849C : F6                          dc.b    $F6
(1)   16/   E849D : A384                                dc.w    z80_ptr(SOUND39_SMASH_FM4)
(1)   17/   E849F :                     
(1)   18/   E849F :                     ; FM5 Data
(1)   19/   E849F :                     Sound39_Smash_FM5:
(1)   20/   E849F : (MACRO)             	smpsPan             panLeft, $00
(1)   20/   E849F : =$0                 panNone set $00
(1)   20/   E849F : =$40                panRight set $40
(1)   20/   E849F : =$80                panLeft set $80
(1)   20/   E849F : =$C0                panCentre set $C0
(1)   20/   E849F : =$C0                panCenter set $C0 ; silly Americans :U
(1)   20/   E849F : E080                        dc.b $E0,PANLEFT+$00
(1)   21/   E84A1 : 8001                	dc.b	nRst, $01
(1)   22/   E84A3 :                     
(1)   23/   E84A3 :                     ; FM4 Data
(1)   24/   E84A3 :                     Sound39_Smash_FM4:
(1)   25/   E84A3 : (MACRO)             	smpsSetvoice        $00
(1)   25/   E84A3 :  (MACRO-2)                  smpsFMvoice $00
(1)   25/   E84A3 : EF00                                dc.b    $EF,$00
(1)   26/   E84A5 : (MACRO)             	smpsModSet          $03, $01, $20, $04
(1)   26/   E84A5 : F0                          dc.b    $F0
(1)   26/   E84A6 : 0301 2004                           dc.b    $03,$01,$20,$04
(1)   26/   E84AA :                             ;dc.b   $01,$20,$04
(1)   27/   E84AA :                     
(1)   28/   E84AA :                     Sound39_Smash_Loop00:
(1)   29/   E84AA : 8118                	dc.b	nC0, $18
(1)   30/   E84AC : (MACRO)             	smpsAlterVol        $0A
(1)   30/   E84AC : E60A                        dc.b    $E6,$0A
(1)   31/   E84AE : (MACRO)             	smpsLoop            $00, $06, Sound39_Smash_Loop00
(1)   31/   E84AE : F7                          dc.b    $F7
(1)   31/   E84AF : 0006                        dc.b    $00,$06
(1)   31/   E84B1 : AA84                                dc.w    z80_ptr(SOUND39_SMASH_LOOP00)
(1)   32/   E84B3 : (MACRO)             	smpsStop
(1)   32/   E84B3 : F2                          dc.b    $F2
(1)   33/   E84B4 :                     
(1)   34/   E84B4 :                     ; PSG3 Data
(1)   35/   E84B4 :                     Sound39_Smash_PSG3:
(1)   36/   E84B4 : (MACRO)             	smpsModSet          $01, $01, $0F, $05
(1)   36/   E84B4 : F0                          dc.b    $F0
(1)   36/   E84B5 : 0101 0F05                           dc.b    $01,$01,$0F,$05
(1)   36/   E84B9 :                             ;dc.b   $01,$0F,$05
(1)   37/   E84B9 : (MACRO)             	smpsPSGform         $E7
(1)   37/   E84B9 : F3E7                        dc.b    $F3,$E7
(1)   38/   E84BB :                     
(1)   39/   E84BB :                     Sound39_Smash_Loop01:
(1)   40/   E84BB : B018 E7             	dc.b	nB3, $18, smpsNoAttack
(1)   41/   E84BE : (MACRO)             	smpsPSGAlterVol     $03
(1)   41/   E84BE : EC03                        dc.b    $EC,$03
(1)   42/   E84C0 : (MACRO)             	smpsLoop            $00, $05, Sound39_Smash_Loop01
(1)   42/   E84C0 : F7                          dc.b    $F7
(1)   42/   E84C1 : 0005                        dc.b    $00,$05
(1)   42/   E84C3 : BB84                                dc.w    z80_ptr(SOUND39_SMASH_LOOP01)
(1)   43/   E84C5 : (MACRO)             	smpsStop
(1)   43/   E84C5 : F2                          dc.b    $F2
(1)   44/   E84C6 :                     
  541/   E84C6 :                        Sound3A:	include "sfx-improved/BA - Special Stage Glass (Unused).asm"
(1)    1/   E84C6 :                     Sound3A_Header:
(1)    2/   E84C6 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E84C6 :                     
(1)    2/   E84C6 : =$3                 SourceDriver set 3
(1)    2/   E84C6 :                     
(1)    2/   E84C6 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E84C6 :                     
(1)    2/   E84C6 : =$E84C6             songStart set *
(1)    2/   E84C6 :                     
(1)    2/   E84C6 :                     
(1)    3/   E84C6 : (MACRO)             	smpsHeaderVoice     Sound3A_Voices
(1)    3/   E84C6 : D584                                dc.w    z80_ptr(SOUND3A_VOICES)
(1)    4/   E84C8 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E84C8 : 01                          dc.b    $01
(1)    5/   E84C9 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E84C9 : 01                          dc.b    $01
(1)    6/   E84CA :                     
(1)    7/   E84CA : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound3A_FM5,	$00, $07
(1)    7/   E84CA : 8005                        dc.b    $80,CFM5
(1)    7/   E84CC :  (MACRO-2)                  CheckedChannelPointer SOUND3A_FM5
(1)    7/   E84CC : D084                                dc.w    z80_ptr(SOUND3A_FM5)
(1)    7/   E84CE : 00                                  dc.b    $00
(1)    7/   E84CF : 07                          dc.b    $07
(1)    8/   E84D0 :                     
(1)    9/   E84D0 :                     ; FM5 Data
(1)   10/   E84D0 :                     Sound3A_FM5:
(1)   11/   E84D0 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E84D0 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E84D0 : EF00                                dc.b    $EF,$00
(1)   12/   E84D2 : AE08                	dc.b	nA3, $08
(1)   13/   E84D4 : (MACRO)             	smpsStop
(1)   13/   E84D4 : F2                          dc.b    $F2
(1)   14/   E84D5 :                     
(1)   15/   E84D5 :                     Sound3A_Voices:
(1)   16/   E84D5 :                     ;	Voice $00
(1)   17/   E84D5 :                     ;	$1C
(1)   18/   E84D5 :                     ;	$2E, $02, $0F, $02, 	$1F, $1F, $1F, $1F, 	$18, $0F, $14, $0E
(1)   19/   E84D5 :                     ;	$00, $00, $00, $00, 	$FF, $FF, $FF, $FF, 	$20, $80, $1B, $80
(1)   20/   E84D5 : (MACRO)             	smpsVcAlgorithm     $04
(1)   20/   E84D5 : =$4                 vcAlgorithm set $04
(1)   21/   E84D5 : (MACRO)             	smpsVcFeedback      $03
(1)   21/   E84D5 : =$3                 vcFeedback set $03
(1)   22/   E84D5 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E84D5 : =$0                 vcUnusedBits set $00
(1)   22/   E84D5 : =$0                 vcD1R1Unk set 0
(1)   22/   E84D5 : =$0                 vcD1R2Unk set 0
(1)   22/   E84D5 : =$0                 vcD1R3Unk set 0
(1)   22/   E84D5 : =$0                 vcD1R4Unk set 0
(1)   23/   E84D5 : (MACRO)             	smpsVcDetune        $00, $00, $00, $02
(1)   23/   E84D5 : =$0                 vcDT1 set $00
(1)   23/   E84D5 : =$0                 vcDT2 set $00
(1)   23/   E84D5 : =$0                 vcDT3 set $00
(1)   23/   E84D5 : =$2                 vcDT4 set $02
(1)   24/   E84D5 : (MACRO)             	smpsVcCoarseFreq    $02, $0F, $02, $0E
(1)   24/   E84D5 : =$2                 vcCF1 set $02
(1)   24/   E84D5 : =$F                 vcCF2 set $0F
(1)   24/   E84D5 : =$2                 vcCF3 set $02
(1)   24/   E84D5 : =$E                 vcCF4 set $0E
(1)   25/   E84D5 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E84D5 : =$0                 vcRS1 set $00
(1)   25/   E84D5 : =$0                 vcRS2 set $00
(1)   25/   E84D5 : =$0                 vcRS3 set $00
(1)   25/   E84D5 : =$0                 vcRS4 set $00
(1)   26/   E84D5 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E84D5 : =$1F                vcAR1 set $1F
(1)   26/   E84D5 : =$1F                vcAR2 set $1F
(1)   26/   E84D5 : =$1F                vcAR3 set $1F
(1)   26/   E84D5 : =$1F                vcAR4 set $1F
(1)   27/   E84D5 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E84D5 : =$0                 vcAM1 set $00<<5
(1)   27/   E84D5 : =$0                 vcAM2 set $00<<5
(1)   27/   E84D5 : =$0                 vcAM3 set $00<<5
(1)   27/   E84D5 : =$0                 vcAM4 set $00<<5
(1)   28/   E84D5 : (MACRO)             	smpsVcDecayRate1    $0E, $14, $0F, $18
(1)   28/   E84D5 : =$E                 vcD1R1 set $0E
(1)   28/   E84D5 : =$14                vcD1R2 set $14
(1)   28/   E84D5 : =$F                 vcD1R3 set $0F
(1)   28/   E84D5 : =$18                vcD1R4 set $18
(1)   29/   E84D5 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   29/   E84D5 : =$0                 vcD2R1 set $00
(1)   29/   E84D5 : =$0                 vcD2R2 set $00
(1)   29/   E84D5 : =$0                 vcD2R3 set $00
(1)   29/   E84D5 : =$0                 vcD2R4 set $00
(1)   30/   E84D5 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0F, $0F
(1)   30/   E84D5 : =$F                 vcDL1 set $0F
(1)   30/   E84D5 : =$F                 vcDL2 set $0F
(1)   30/   E84D5 : =$F                 vcDL3 set $0F
(1)   30/   E84D5 : =$F                 vcDL4 set $0F
(1)   31/   E84D5 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E84D5 : =$F                 vcRR1 set $0F
(1)   31/   E84D5 : =$F                 vcRR2 set $0F
(1)   31/   E84D5 : =$F                 vcRR3 set $0F
(1)   31/   E84D5 : =$F                 vcRR4 set $0F
(1)   32/   E84D5 : (MACRO)             	smpsVcTotalLevel    $00, $1B, $00, $20
(1)   32/   E84D5 : =$0                 vcTL1 set $00
(1)   32/   E84D5 : =$1B                vcTL2 set $1B
(1)   32/   E84D5 : =$0                 vcTL3 set $00
(1)   32/   E84D5 : =$20                vcTL4 set $20
(1)   32/   E84D5 : 1C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E84D6 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E84D6 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E84D6 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E84D6 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E84D6 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E84D6 : =$80                vcTLMask1 set $80
(1)   32/   E84D6 :                     
(1)   32/   E84D6 :                     
(1)   32/   E84D6 : 2E02 0F02                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E84DA : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E84DE : 180F 140E                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E84E2 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E84E6 : FFFF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E84EA : 2080 1B80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E84EE :                     
(1)   34/   E84EE :                     
  542/   E84EE :                        Sound3B:	include "sfx-improved/BB - Door Slam.asm"
(1)    1/   E84EE :                     Sound3B_DoorSlam_Header:
(1)    2/   E84EE : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E84EE :                     
(1)    2/   E84EE : =$3                 SourceDriver set 3
(1)    2/   E84EE :                     
(1)    2/   E84EE : =$0                 SourceSMPS2ASM set 0
(1)    2/   E84EE :                     
(1)    2/   E84EE : =$E84EE             songStart set *
(1)    2/   E84EE :                     
(1)    2/   E84EE :                     
(1)    3/   E84EE : (MACRO)             	smpsHeaderVoice     Sound3B_DoorSlam_Voices
(1)    3/   E84EE : 0085                                dc.w    z80_ptr(SOUND3B_DOORSLAM_VOICES)
(1)    4/   E84F0 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E84F0 : 01                          dc.b    $01
(1)    5/   E84F1 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E84F1 : 01                          dc.b    $01
(1)    6/   E84F2 :                     
(1)    7/   E84F2 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound3B_DoorSlam_FM5,	$F4, $00
(1)    7/   E84F2 : 8005                        dc.b    $80,CFM5
(1)    7/   E84F4 :  (MACRO-2)                  CheckedChannelPointer SOUND3B_DOORSLAM_FM5
(1)    7/   E84F4 : F884                                dc.w    z80_ptr(SOUND3B_DOORSLAM_FM5)
(1)    7/   E84F6 : F4                                  dc.b    $F4
(1)    7/   E84F7 : 00                          dc.b    $00
(1)    8/   E84F8 :                     
(1)    9/   E84F8 :                     ; FM5 Data
(1)   10/   E84F8 :                     Sound3B_DoorSlam_FM5:
(1)   11/   E84F8 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E84F8 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E84F8 : EF00                                dc.b    $EF,$00
(1)   12/   E84FA : 9B04 80A0 06        	dc.b	nD2, $04, nRst, nG2, $06
(1)   13/   E84FF : (MACRO)             	smpsStop
(1)   13/   E84FF : F2                          dc.b    $F2
(1)   14/   E8500 :                     
(1)   15/   E8500 :                     Sound3B_DoorSlam_Voices:
(1)   16/   E8500 :                     ;	Voice $00
(1)   17/   E8500 :                     ;	$3C
(1)   18/   E8500 :                     ;	$00, $00, $00, $00, 	$1F, $1F, $1F, $1F, 	$00, $16, $0F, $0F
(1)   19/   E8500 :                     ;	$00, $00, $00, $00, 	$0F, $AF, $FF, $FF, 	$00, $80, $0A, $80
(1)   20/   E8500 : (MACRO)             	smpsVcAlgorithm     $04
(1)   20/   E8500 : =$4                 vcAlgorithm set $04
(1)   21/   E8500 : (MACRO)             	smpsVcFeedback      $07
(1)   21/   E8500 : =$7                 vcFeedback set $07
(1)   22/   E8500 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E8500 : =$0                 vcUnusedBits set $00
(1)   22/   E8500 : =$0                 vcD1R1Unk set 0
(1)   22/   E8500 : =$0                 vcD1R2Unk set 0
(1)   22/   E8500 : =$0                 vcD1R3Unk set 0
(1)   22/   E8500 : =$0                 vcD1R4Unk set 0
(1)   23/   E8500 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   23/   E8500 : =$0                 vcDT1 set $00
(1)   23/   E8500 : =$0                 vcDT2 set $00
(1)   23/   E8500 : =$0                 vcDT3 set $00
(1)   23/   E8500 : =$0                 vcDT4 set $00
(1)   24/   E8500 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   24/   E8500 : =$0                 vcCF1 set $00
(1)   24/   E8500 : =$0                 vcCF2 set $00
(1)   24/   E8500 : =$0                 vcCF3 set $00
(1)   24/   E8500 : =$0                 vcCF4 set $00
(1)   25/   E8500 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E8500 : =$0                 vcRS1 set $00
(1)   25/   E8500 : =$0                 vcRS2 set $00
(1)   25/   E8500 : =$0                 vcRS3 set $00
(1)   25/   E8500 : =$0                 vcRS4 set $00
(1)   26/   E8500 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E8500 : =$1F                vcAR1 set $1F
(1)   26/   E8500 : =$1F                vcAR2 set $1F
(1)   26/   E8500 : =$1F                vcAR3 set $1F
(1)   26/   E8500 : =$1F                vcAR4 set $1F
(1)   27/   E8500 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8500 : =$0                 vcAM1 set $00<<5
(1)   27/   E8500 : =$0                 vcAM2 set $00<<5
(1)   27/   E8500 : =$0                 vcAM3 set $00<<5
(1)   27/   E8500 : =$0                 vcAM4 set $00<<5
(1)   28/   E8500 : (MACRO)             	smpsVcDecayRate1    $0F, $0F, $16, $00
(1)   28/   E8500 : =$F                 vcD1R1 set $0F
(1)   28/   E8500 : =$F                 vcD1R2 set $0F
(1)   28/   E8500 : =$16                vcD1R3 set $16
(1)   28/   E8500 : =$0                 vcD1R4 set $00
(1)   29/   E8500 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   29/   E8500 : =$0                 vcD2R1 set $00
(1)   29/   E8500 : =$0                 vcD2R2 set $00
(1)   29/   E8500 : =$0                 vcD2R3 set $00
(1)   29/   E8500 : =$0                 vcD2R4 set $00
(1)   30/   E8500 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0A, $00
(1)   30/   E8500 : =$F                 vcDL1 set $0F
(1)   30/   E8500 : =$F                 vcDL2 set $0F
(1)   30/   E8500 : =$A                 vcDL3 set $0A
(1)   30/   E8500 : =$0                 vcDL4 set $00
(1)   31/   E8500 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E8500 : =$F                 vcRR1 set $0F
(1)   31/   E8500 : =$F                 vcRR2 set $0F
(1)   31/   E8500 : =$F                 vcRR3 set $0F
(1)   31/   E8500 : =$F                 vcRR4 set $0F
(1)   32/   E8500 : (MACRO)             	smpsVcTotalLevel    $00, $0A, $00, $00
(1)   32/   E8500 : =$0                 vcTL1 set $00
(1)   32/   E8500 : =$A                 vcTL2 set $0A
(1)   32/   E8500 : =$0                 vcTL3 set $00
(1)   32/   E8500 : =$0                 vcTL4 set $00
(1)   32/   E8500 : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8501 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8501 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8501 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E8501 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E8501 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E8501 : =$80                vcTLMask1 set $80
(1)   32/   E8501 :                     
(1)   32/   E8501 :                     
(1)   32/   E8501 : 0000 0000                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8505 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8509 : 0016 0F0F                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E850D : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8511 : 0FAF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8515 : 0080 0A80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8519 :                     
(1)   34/   E8519 :                     
  543/   E8519 :                        Sound3C:	include "sfx-improved/BC - Spin Dash Release.asm"
(1)    1/   E8519 :                     Sound3C_SpindashRelease_Header:
(1)    2/   E8519 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8519 :                     
(1)    2/   E8519 : =$3                 SourceDriver set 3
(1)    2/   E8519 :                     
(1)    2/   E8519 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8519 :                     
(1)    2/   E8519 : =$E8519             songStart set *
(1)    2/   E8519 :                     
(1)    2/   E8519 :                     
(1)    3/   E8519 : (MACRO)             	smpsHeaderVoice     Sound3C_SpindashRelease_Voices
(1)    3/   E8519 : 4185                                dc.w    z80_ptr(SOUND3C_SPINDASHRELEASE_VOICES)
(1)    4/   E851B : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E851B : 01                          dc.b    $01
(1)    5/   E851C : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E851C : 02                          dc.b    $02
(1)    6/   E851D :                     
(1)    7/   E851D : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound3C_SpindashRelease_FM5,	$10, $00
(1)    7/   E851D : 8005                        dc.b    $80,CFM5
(1)    7/   E851F :  (MACRO-2)                  CheckedChannelPointer SOUND3C_SPINDASHRELEASE_FM5
(1)    7/   E851F : 2985                                dc.w    z80_ptr(SOUND3C_SPINDASHRELEASE_FM5)
(1)    7/   E8521 : 10                                  dc.b    $10
(1)    7/   E8522 : 00                          dc.b    $00
(1)    8/   E8523 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound3C_SpindashRelease_PSG3,	$00, $00
(1)    8/   E8523 : 80C0                        dc.b    $80,CPSG3
(1)    8/   E8525 :  (MACRO-2)                  CheckedChannelPointer SOUND3C_SPINDASHRELEASE_PSG3
(1)    8/   E8525 : 3385                                dc.w    z80_ptr(SOUND3C_SPINDASHRELEASE_PSG3)
(1)    8/   E8527 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8527 : 00                                  dc.b    $00
(1)    8/   E8528 : 00                          dc.b    $00
(1)    9/   E8529 :                     
(1)   10/   E8529 :                     ; FM5 Data
(1)   11/   E8529 :                     Sound3C_SpindashRelease_FM5:
(1)   12/   E8529 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8529 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8529 : EF00                                dc.b    $EF,$00
(1)   13/   E852B : (MACRO)             	smpsModSet          $01, $01, $C5, $1A
(1)   13/   E852B : F0                          dc.b    $F0
(1)   13/   E852C : 0101 C51A                           dc.b    $01,$01,$C5,$1A
(1)   13/   E8530 :                             ;dc.b   $01,$C5,$1A
(1)   14/   E8530 : CD07                	dc.b	nE6, $07
(1)   15/   E8532 : (MACRO)             	smpsStop
(1)   15/   E8532 : F2                          dc.b    $F2
(1)   16/   E8533 :                     
(1)   17/   E8533 :                     ; PSG3 Data
(1)   18/   E8533 :                     Sound3C_SpindashRelease_PSG3:
(1)   19/   E8533 : (MACRO)             	smpsPSGvoice        fTone_07
(1)   19/   E8533 : F507                        dc.b    $F5,FTONE_07
(1)   20/   E8535 : 8007                	dc.b	nRst, $07
(1)   21/   E8537 : (MACRO)             	smpsModSet          $01, $02, $05, $FF
(1)   21/   E8537 : F0                          dc.b    $F0
(1)   21/   E8538 : 0102 05FF                           dc.b    $01,$02,$05,$FF
(1)   21/   E853C :                             ;dc.b   $02,$05,$FF
(1)   22/   E853C : (MACRO)             	smpsPSGform         $E7
(1)   22/   E853C : F3E7                        dc.b    $F3,$E7
(1)   23/   E853E : BB4F                	dc.b	nBb4, $4F
(1)   24/   E8540 : (MACRO)             	smpsStop
(1)   24/   E8540 : F2                          dc.b    $F2
(1)   25/   E8541 :                     
(1)   26/   E8541 :                     Sound3C_SpindashRelease_Voices:
(1)   27/   E8541 :                     ;	Voice $00
(1)   28/   E8541 :                     ;	$FD
(1)   29/   E8541 :                     ;	$09, $03, $00, $00, 	$1F, $1F, $1F, $1F, 	$10, $0C, $0C, $0C
(1)   30/   E8541 :                     ;	$0B, $1F, $10, $05, 	$1F, $2F, $4F, $2F, 	$09, $84, $92, $8E
(1)   31/   E8541 : (MACRO)             	smpsVcAlgorithm     $05
(1)   31/   E8541 : =$5                 vcAlgorithm set $05
(1)   32/   E8541 : (MACRO)             	smpsVcFeedback      $07
(1)   32/   E8541 : =$7                 vcFeedback set $07
(1)   33/   E8541 : (MACRO)             	smpsVcUnusedBits    $03
(1)   33/   E8541 : =$3                 vcUnusedBits set $03
(1)   33/   E8541 : =$0                 vcD1R1Unk set 0
(1)   33/   E8541 : =$0                 vcD1R2Unk set 0
(1)   33/   E8541 : =$0                 vcD1R3Unk set 0
(1)   33/   E8541 : =$0                 vcD1R4Unk set 0
(1)   34/   E8541 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   34/   E8541 : =$0                 vcDT1 set $00
(1)   34/   E8541 : =$0                 vcDT2 set $00
(1)   34/   E8541 : =$0                 vcDT3 set $00
(1)   34/   E8541 : =$0                 vcDT4 set $00
(1)   35/   E8541 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $03, $09
(1)   35/   E8541 : =$0                 vcCF1 set $00
(1)   35/   E8541 : =$0                 vcCF2 set $00
(1)   35/   E8541 : =$3                 vcCF3 set $03
(1)   35/   E8541 : =$9                 vcCF4 set $09
(1)   36/   E8541 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   36/   E8541 : =$0                 vcRS1 set $00
(1)   36/   E8541 : =$0                 vcRS2 set $00
(1)   36/   E8541 : =$0                 vcRS3 set $00
(1)   36/   E8541 : =$0                 vcRS4 set $00
(1)   37/   E8541 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   37/   E8541 : =$1F                vcAR1 set $1F
(1)   37/   E8541 : =$1F                vcAR2 set $1F
(1)   37/   E8541 : =$1F                vcAR3 set $1F
(1)   37/   E8541 : =$1F                vcAR4 set $1F
(1)   38/   E8541 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   38/   E8541 : =$0                 vcAM1 set $00<<5
(1)   38/   E8541 : =$0                 vcAM2 set $00<<5
(1)   38/   E8541 : =$0                 vcAM3 set $00<<5
(1)   38/   E8541 : =$0                 vcAM4 set $00<<5
(1)   39/   E8541 : (MACRO)             	smpsVcDecayRate1    $0C, $0C, $0C, $10
(1)   39/   E8541 : =$C                 vcD1R1 set $0C
(1)   39/   E8541 : =$C                 vcD1R2 set $0C
(1)   39/   E8541 : =$C                 vcD1R3 set $0C
(1)   39/   E8541 : =$10                vcD1R4 set $10
(1)   40/   E8541 : (MACRO)             	smpsVcDecayRate2    $05, $10, $1F, $0B
(1)   40/   E8541 : =$5                 vcD2R1 set $05
(1)   40/   E8541 : =$10                vcD2R2 set $10
(1)   40/   E8541 : =$1F                vcD2R3 set $1F
(1)   40/   E8541 : =$B                 vcD2R4 set $0B
(1)   41/   E8541 : (MACRO)             	smpsVcDecayLevel    $02, $04, $02, $01
(1)   41/   E8541 : =$2                 vcDL1 set $02
(1)   41/   E8541 : =$4                 vcDL2 set $04
(1)   41/   E8541 : =$2                 vcDL3 set $02
(1)   41/   E8541 : =$1                 vcDL4 set $01
(1)   42/   E8541 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   42/   E8541 : =$F                 vcRR1 set $0F
(1)   42/   E8541 : =$F                 vcRR2 set $0F
(1)   42/   E8541 : =$F                 vcRR3 set $0F
(1)   42/   E8541 : =$F                 vcRR4 set $0F
(1)   43/   E8541 : (MACRO)             	smpsVcTotalLevel    $0E, $12, $04, $09
(1)   43/   E8541 : =$E                 vcTL1 set $0E
(1)   43/   E8541 : =$12                vcTL2 set $12
(1)   43/   E8541 : =$4                 vcTL3 set $04
(1)   43/   E8541 : =$9                 vcTL4 set $09
(1)   43/   E8541 : FD                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   43/   E8542 :                     ;   0     1     2     3     4     5     6     7
(1)   43/   E8542 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   43/   E8542 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   43/   E8542 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   43/   E8542 : =$80                vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   43/   E8542 : =$80                vcTLMask1 set $80
(1)   43/   E8542 :                     
(1)   43/   E8542 :                     
(1)   43/   E8542 : 0903 0000                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   43/   E8546 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   43/   E854A : 100C 0C0C                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   43/   E854E : 0B1F 1005                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   43/   E8552 : 1F2F 4F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   43/   E8556 : 0984 928E                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   44/   E855A :                     
(1)   45/   E855A :                     
  544/   E855A :                        Sound3D:	include "sfx-improved/BD - Hammer.asm"
(1)    1/   E855A :                     Sound3D_Hammer_Header:
(1)    2/   E855A : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E855A :                     
(1)    2/   E855A : =$3                 SourceDriver set 3
(1)    2/   E855A :                     
(1)    2/   E855A : =$0                 SourceSMPS2ASM set 0
(1)    2/   E855A :                     
(1)    2/   E855A : =$E855A             songStart set *
(1)    2/   E855A :                     
(1)    2/   E855A :                     
(1)    3/   E855A : (MACRO)             	smpsHeaderVoice     Sound3D_Hammer_Voices
(1)    3/   E855A : 7B85                                dc.w    z80_ptr(SOUND3D_HAMMER_VOICES)
(1)    4/   E855C : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E855C : 01                          dc.b    $01
(1)    5/   E855D : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E855D : 02                          dc.b    $02
(1)    6/   E855E :                     
(1)    7/   E855E : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound3D_Hammer_FM5,	$10, $0A
(1)    7/   E855E : 8005                        dc.b    $80,CFM5
(1)    7/   E8560 :  (MACRO-2)                  CheckedChannelPointer SOUND3D_HAMMER_FM5
(1)    7/   E8560 : 6A85                                dc.w    z80_ptr(SOUND3D_HAMMER_FM5)
(1)    7/   E8562 : 10                                  dc.b    $10
(1)    7/   E8563 : 0A                          dc.b    $0A
(1)    8/   E8564 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound3D_Hammer_FM4,	$00, $00
(1)    8/   E8564 : 8004                        dc.b    $80,CFM4
(1)    8/   E8566 :  (MACRO-2)                  CheckedChannelPointer SOUND3D_HAMMER_FM4
(1)    8/   E8566 : 7485                                dc.w    z80_ptr(SOUND3D_HAMMER_FM4)
(1)    8/   E8568 : 00                                  dc.b    $00
(1)    8/   E8569 : 00                          dc.b    $00
(1)    9/   E856A :                     
(1)   10/   E856A :                     ; FM5 Data
(1)   11/   E856A :                     Sound3D_Hammer_FM5:
(1)   12/   E856A : (MACRO)             	smpsSetvoice        $00
(1)   12/   E856A :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E856A : EF00                                dc.b    $EF,$00
(1)   13/   E856C : (MACRO)             	smpsModSet          $01, $01, $60, $01
(1)   13/   E856C : F0                          dc.b    $F0
(1)   13/   E856D : 0101 6001                           dc.b    $01,$01,$60,$01
(1)   13/   E8571 :                             ;dc.b   $01,$60,$01
(1)   14/   E8571 : A708                	dc.b	nD3, $08
(1)   15/   E8573 : (MACRO)             	smpsStop
(1)   15/   E8573 : F2                          dc.b    $F2
(1)   16/   E8574 :                     
(1)   17/   E8574 :                     ; FM4 Data
(1)   18/   E8574 :                     Sound3D_Hammer_FM4:
(1)   19/   E8574 : 8008                	dc.b	nRst, $08
(1)   20/   E8576 : (MACRO)             	smpsSetvoice        $01
(1)   20/   E8576 :  (MACRO-2)                  smpsFMvoice $01
(1)   20/   E8576 : EF01                                dc.b    $EF,$01
(1)   21/   E8578 : 8422                	dc.b	nEb0, $22
(1)   22/   E857A : (MACRO)             	smpsStop
(1)   22/   E857A : F2                          dc.b    $F2
(1)   23/   E857B :                     
(1)   24/   E857B :                     Sound3D_Hammer_Voices:
(1)   25/   E857B :                     ;	Voice $00
(1)   26/   E857B :                     ;	$FA
(1)   27/   E857B :                     ;	$21, $3A, $19, $30, 	$1F, $1F, $1F, $1F, 	$05, $18, $09, $02
(1)   28/   E857B :                     ;	$0B, $1F, $10, $05, 	$1F, $2F, $4F, $2F, 	$0E, $07, $04, $80
(1)   29/   E857B : (MACRO)             	smpsVcAlgorithm     $02
(1)   29/   E857B : =$2                 vcAlgorithm set $02
(1)   30/   E857B : (MACRO)             	smpsVcFeedback      $07
(1)   30/   E857B : =$7                 vcFeedback set $07
(1)   31/   E857B : (MACRO)             	smpsVcUnusedBits    $03
(1)   31/   E857B : =$3                 vcUnusedBits set $03
(1)   31/   E857B : =$0                 vcD1R1Unk set 0
(1)   31/   E857B : =$0                 vcD1R2Unk set 0
(1)   31/   E857B : =$0                 vcD1R3Unk set 0
(1)   31/   E857B : =$0                 vcD1R4Unk set 0
(1)   32/   E857B : (MACRO)             	smpsVcDetune        $03, $01, $03, $02
(1)   32/   E857B : =$3                 vcDT1 set $03
(1)   32/   E857B : =$1                 vcDT2 set $01
(1)   32/   E857B : =$3                 vcDT3 set $03
(1)   32/   E857B : =$2                 vcDT4 set $02
(1)   33/   E857B : (MACRO)             	smpsVcCoarseFreq    $00, $09, $0A, $01
(1)   33/   E857B : =$0                 vcCF1 set $00
(1)   33/   E857B : =$9                 vcCF2 set $09
(1)   33/   E857B : =$A                 vcCF3 set $0A
(1)   33/   E857B : =$1                 vcCF4 set $01
(1)   34/   E857B : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   34/   E857B : =$0                 vcRS1 set $00
(1)   34/   E857B : =$0                 vcRS2 set $00
(1)   34/   E857B : =$0                 vcRS3 set $00
(1)   34/   E857B : =$0                 vcRS4 set $00
(1)   35/   E857B : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   35/   E857B : =$1F                vcAR1 set $1F
(1)   35/   E857B : =$1F                vcAR2 set $1F
(1)   35/   E857B : =$1F                vcAR3 set $1F
(1)   35/   E857B : =$1F                vcAR4 set $1F
(1)   36/   E857B : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E857B : =$0                 vcAM1 set $00<<5
(1)   36/   E857B : =$0                 vcAM2 set $00<<5
(1)   36/   E857B : =$0                 vcAM3 set $00<<5
(1)   36/   E857B : =$0                 vcAM4 set $00<<5
(1)   37/   E857B : (MACRO)             	smpsVcDecayRate1    $02, $09, $18, $05
(1)   37/   E857B : =$2                 vcD1R1 set $02
(1)   37/   E857B : =$9                 vcD1R2 set $09
(1)   37/   E857B : =$18                vcD1R3 set $18
(1)   37/   E857B : =$5                 vcD1R4 set $05
(1)   38/   E857B : (MACRO)             	smpsVcDecayRate2    $05, $10, $1F, $0B
(1)   38/   E857B : =$5                 vcD2R1 set $05
(1)   38/   E857B : =$10                vcD2R2 set $10
(1)   38/   E857B : =$1F                vcD2R3 set $1F
(1)   38/   E857B : =$B                 vcD2R4 set $0B
(1)   39/   E857B : (MACRO)             	smpsVcDecayLevel    $02, $04, $02, $01
(1)   39/   E857B : =$2                 vcDL1 set $02
(1)   39/   E857B : =$4                 vcDL2 set $04
(1)   39/   E857B : =$2                 vcDL3 set $02
(1)   39/   E857B : =$1                 vcDL4 set $01
(1)   40/   E857B : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E857B : =$F                 vcRR1 set $0F
(1)   40/   E857B : =$F                 vcRR2 set $0F
(1)   40/   E857B : =$F                 vcRR3 set $0F
(1)   40/   E857B : =$F                 vcRR4 set $0F
(1)   41/   E857B : (MACRO)             	smpsVcTotalLevel    $00, $04, $07, $0E
(1)   41/   E857B : =$0                 vcTL1 set $00
(1)   41/   E857B : =$4                 vcTL2 set $04
(1)   41/   E857B : =$7                 vcTL3 set $07
(1)   41/   E857B : =$E                 vcTL4 set $0E
(1)   41/   E857B : FA                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E857C :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E857C :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E857C : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   41/   E857C : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   41/   E857C : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   41/   E857C : =$80                vcTLMask1 set $80
(1)   41/   E857C :                     
(1)   41/   E857C :                     
(1)   41/   E857C : 213A 1930                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E8580 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E8584 : 0518 0902                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E8588 : 0B1F 1005                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E858C : 1F2F 4F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E8590 : 0E07 0480                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E8594 :                     
(1)   43/   E8594 :                     ;	Voice $01
(1)   44/   E8594 :                     ;	$FA
(1)   45/   E8594 :                     ;	$31, $30, $10, $32, 	$1F, $1F, $1F, $1F, 	$05, $18, $05, $10
(1)   46/   E8594 :                     ;	$0B, $1F, $10, $10, 	$1F, $2F, $1F, $2F, 	$0D, $00, $01, $80
(1)   47/   E8594 : (MACRO)             	smpsVcAlgorithm     $02
(1)   47/   E8594 : =$2                 vcAlgorithm set $02
(1)   48/   E8594 : (MACRO)             	smpsVcFeedback      $07
(1)   48/   E8594 : =$7                 vcFeedback set $07
(1)   49/   E8594 : (MACRO)             	smpsVcUnusedBits    $03
(1)   49/   E8594 : =$3                 vcUnusedBits set $03
(1)   49/   E8594 : =$0                 vcD1R1Unk set 0
(1)   49/   E8594 : =$0                 vcD1R2Unk set 0
(1)   49/   E8594 : =$0                 vcD1R3Unk set 0
(1)   49/   E8594 : =$0                 vcD1R4Unk set 0
(1)   50/   E8594 : (MACRO)             	smpsVcDetune        $03, $01, $03, $03
(1)   50/   E8594 : =$3                 vcDT1 set $03
(1)   50/   E8594 : =$1                 vcDT2 set $01
(1)   50/   E8594 : =$3                 vcDT3 set $03
(1)   50/   E8594 : =$3                 vcDT4 set $03
(1)   51/   E8594 : (MACRO)             	smpsVcCoarseFreq    $02, $00, $00, $01
(1)   51/   E8594 : =$2                 vcCF1 set $02
(1)   51/   E8594 : =$0                 vcCF2 set $00
(1)   51/   E8594 : =$0                 vcCF3 set $00
(1)   51/   E8594 : =$1                 vcCF4 set $01
(1)   52/   E8594 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   52/   E8594 : =$0                 vcRS1 set $00
(1)   52/   E8594 : =$0                 vcRS2 set $00
(1)   52/   E8594 : =$0                 vcRS3 set $00
(1)   52/   E8594 : =$0                 vcRS4 set $00
(1)   53/   E8594 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   53/   E8594 : =$1F                vcAR1 set $1F
(1)   53/   E8594 : =$1F                vcAR2 set $1F
(1)   53/   E8594 : =$1F                vcAR3 set $1F
(1)   53/   E8594 : =$1F                vcAR4 set $1F
(1)   54/   E8594 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   54/   E8594 : =$0                 vcAM1 set $00<<5
(1)   54/   E8594 : =$0                 vcAM2 set $00<<5
(1)   54/   E8594 : =$0                 vcAM3 set $00<<5
(1)   54/   E8594 : =$0                 vcAM4 set $00<<5
(1)   55/   E8594 : (MACRO)             	smpsVcDecayRate1    $10, $05, $18, $05
(1)   55/   E8594 : =$10                vcD1R1 set $10
(1)   55/   E8594 : =$5                 vcD1R2 set $05
(1)   55/   E8594 : =$18                vcD1R3 set $18
(1)   55/   E8594 : =$5                 vcD1R4 set $05
(1)   56/   E8594 : (MACRO)             	smpsVcDecayRate2    $10, $10, $1F, $0B
(1)   56/   E8594 : =$10                vcD2R1 set $10
(1)   56/   E8594 : =$10                vcD2R2 set $10
(1)   56/   E8594 : =$1F                vcD2R3 set $1F
(1)   56/   E8594 : =$B                 vcD2R4 set $0B
(1)   57/   E8594 : (MACRO)             	smpsVcDecayLevel    $02, $01, $02, $01
(1)   57/   E8594 : =$2                 vcDL1 set $02
(1)   57/   E8594 : =$1                 vcDL2 set $01
(1)   57/   E8594 : =$2                 vcDL3 set $02
(1)   57/   E8594 : =$1                 vcDL4 set $01
(1)   58/   E8594 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   58/   E8594 : =$F                 vcRR1 set $0F
(1)   58/   E8594 : =$F                 vcRR2 set $0F
(1)   58/   E8594 : =$F                 vcRR3 set $0F
(1)   58/   E8594 : =$F                 vcRR4 set $0F
(1)   59/   E8594 : (MACRO)             	smpsVcTotalLevel    $00, $01, $00, $0D
(1)   59/   E8594 : =$0                 vcTL1 set $00
(1)   59/   E8594 : =$1                 vcTL2 set $01
(1)   59/   E8594 : =$0                 vcTL3 set $00
(1)   59/   E8594 : =$D                 vcTL4 set $0D
(1)   59/   E8594 : FA                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   59/   E8595 :                     ;   0     1     2     3     4     5     6     7
(1)   59/   E8595 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   59/   E8595 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   59/   E8595 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   59/   E8595 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   59/   E8595 : =$80                vcTLMask1 set $80
(1)   59/   E8595 :                     
(1)   59/   E8595 :                     
(1)   59/   E8595 : 3130 1032                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   59/   E8599 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   59/   E859D : 0518 0510                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   59/   E85A1 : 0B1F 1010                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   59/   E85A5 : 1F2F 1F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   59/   E85A9 : 0D00 0180                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   60/   E85AD :                     
(1)   61/   E85AD :                     
  545/   E85AD :                        Sound3E:	include "sfx-improved/BE - Roll.asm"
(1)    1/   E85AD :                     Sound3E_Roll_Header:
(1)    2/   E85AD : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E85AD :                     
(1)    2/   E85AD : =$3                 SourceDriver set 3
(1)    2/   E85AD :                     
(1)    2/   E85AD : =$1                 SourceSMPS2ASM set 1
(1)    2/   E85AD :                     
(1)    2/   E85AD : =$E85AD             songStart set *
(1)    2/   E85AD :                     
(1)    2/   E85AD :                     
(1)    3/   E85AD : (MACRO)             	smpsHeaderVoice     Sound3E_Roll_Voices
(1)    3/   E85AD : CE85                                dc.w    z80_ptr(SOUND3E_ROLL_VOICES)
(1)    4/   E85AF : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E85AF : 01                          dc.b    $01
(1)    5/   E85B0 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E85B0 : 01                          dc.b    $01
(1)    6/   E85B1 :                     
(1)    7/   E85B1 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound3E_Roll_FM4,	$0C, $05
(1)    7/   E85B1 : 8004                        dc.b    $80,CFM4
(1)    7/   E85B3 :  (MACRO-2)                  CheckedChannelPointer SOUND3E_ROLL_FM4
(1)    7/   E85B3 : B785                                dc.w    z80_ptr(SOUND3E_ROLL_FM4)
(1)    7/   E85B5 : 0C                                  dc.b    $0C
(1)    7/   E85B6 : 05                          dc.b    $05
(1)    8/   E85B7 :                     
(1)    9/   E85B7 :                     ; FM4 Data
(1)   10/   E85B7 :                     Sound3E_Roll_FM4:
(1)   11/   E85B7 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E85B7 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E85B7 : EF00                                dc.b    $EF,$00
(1)   12/   E85B9 : 8001                	dc.b	nRst, $01
(1)   13/   E85BB : (MACRO)             	smpsModSet          $03, $01, $09, $FF
(1)   13/   E85BB : F0                          dc.b    $F0
(1)   13/   E85BC : 0301 09FF                           dc.b    $03,$01,$09,$FF
(1)   13/   E85C0 :                             ;dc.b   $01,$09,$FF
(1)   14/   E85C0 : CA25                	dc.b	nCs6, $25
(1)   15/   E85C2 : (MACRO)             	smpsModOff
(1)   15/   E85C2 : FA                                  dc.b    $FA
(1)   16/   E85C3 :                     
(1)   17/   E85C3 :                     Sound3E_Roll_Loop00:
(1)   18/   E85C3 : E7                  	dc.b	smpsNoAttack
(1)   19/   E85C4 : (MACRO)             	smpsAlterVol        $01
(1)   19/   E85C4 : E601                        dc.b    $E6,$01
(1)   20/   E85C6 : D002                	dc.b	nG6, $02
(1)   21/   E85C8 : (MACRO)             	smpsLoop            $00, $2A, Sound3E_Roll_Loop00
(1)   21/   E85C8 : F7                          dc.b    $F7
(1)   21/   E85C9 : 002A                        dc.b    $00,$2A
(1)   21/   E85CB : C385                                dc.w    z80_ptr(SOUND3E_ROLL_LOOP00)
(1)   22/   E85CD : (MACRO)             	smpsStop
(1)   22/   E85CD : F2                          dc.b    $F2
(1)   23/   E85CE :                     
(1)   24/   E85CE :                     Sound3E_Roll_Voices:
(1)   25/   E85CE :                     ;	Voice $00
(1)   26/   E85CE :                     ;	$3C
(1)   27/   E85CE :                     ;	$00, $44, $02, $02, 	$1F, $1F, $1F, $15, 	$00, $1F, $00, $00
(1)   28/   E85CE :                     ;	$00, $00, $00, $00, 	$0F, $0F, $0F, $0F, 	$0D, $00, $28, $00
(1)   29/   E85CE : (MACRO)             	smpsVcAlgorithm     $04
(1)   29/   E85CE : =$4                 vcAlgorithm set $04
(1)   30/   E85CE : (MACRO)             	smpsVcFeedback      $07
(1)   30/   E85CE : =$7                 vcFeedback set $07
(1)   31/   E85CE : (MACRO)             	smpsVcUnusedBits    $00
(1)   31/   E85CE : =$0                 vcUnusedBits set $00
(1)   31/   E85CE : =$0                 vcD1R1Unk set 0
(1)   31/   E85CE : =$0                 vcD1R2Unk set 0
(1)   31/   E85CE : =$0                 vcD1R3Unk set 0
(1)   31/   E85CE : =$0                 vcD1R4Unk set 0
(1)   32/   E85CE : (MACRO)             	smpsVcDetune        $00, $00, $04, $00
(1)   32/   E85CE : =$0                 vcDT1 set $00
(1)   32/   E85CE : =$0                 vcDT2 set $00
(1)   32/   E85CE : =$4                 vcDT3 set $04
(1)   32/   E85CE : =$0                 vcDT4 set $00
(1)   33/   E85CE : (MACRO)             	smpsVcCoarseFreq    $02, $02, $04, $00
(1)   33/   E85CE : =$2                 vcCF1 set $02
(1)   33/   E85CE : =$2                 vcCF2 set $02
(1)   33/   E85CE : =$4                 vcCF3 set $04
(1)   33/   E85CE : =$0                 vcCF4 set $00
(1)   34/   E85CE : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   34/   E85CE : =$0                 vcRS1 set $00
(1)   34/   E85CE : =$0                 vcRS2 set $00
(1)   34/   E85CE : =$0                 vcRS3 set $00
(1)   34/   E85CE : =$0                 vcRS4 set $00
(1)   35/   E85CE : (MACRO)             	smpsVcAttackRate    $15, $1F, $1F, $1F
(1)   35/   E85CE : =$15                vcAR1 set $15
(1)   35/   E85CE : =$1F                vcAR2 set $1F
(1)   35/   E85CE : =$1F                vcAR3 set $1F
(1)   35/   E85CE : =$1F                vcAR4 set $1F
(1)   36/   E85CE : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E85CE : =$0                 vcAM1 set $00<<7
(1)   36/   E85CE : =$0                 vcAM2 set $00<<7
(1)   36/   E85CE : =$0                 vcAM3 set $00<<7
(1)   36/   E85CE : =$0                 vcAM4 set $00<<7
(1)   37/   E85CE : (MACRO)             	smpsVcDecayRate1    $00, $00, $1F, $00
(1)   37/   E85CE : =$0                 vcD1R1 set $00
(1)   37/   E85CE : =$0                 vcD1R2 set $00
(1)   37/   E85CE : =$1F                vcD1R3 set $1F
(1)   37/   E85CE : =$0                 vcD1R4 set $00
(1)   38/   E85CE : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   38/   E85CE : =$0                 vcD2R1 set $00
(1)   38/   E85CE : =$0                 vcD2R2 set $00
(1)   38/   E85CE : =$0                 vcD2R3 set $00
(1)   38/   E85CE : =$0                 vcD2R4 set $00
(1)   39/   E85CE : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   39/   E85CE : =$0                 vcDL1 set $00
(1)   39/   E85CE : =$0                 vcDL2 set $00
(1)   39/   E85CE : =$0                 vcDL3 set $00
(1)   39/   E85CE : =$0                 vcDL4 set $00
(1)   40/   E85CE : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E85CE : =$F                 vcRR1 set $0F
(1)   40/   E85CE : =$F                 vcRR2 set $0F
(1)   40/   E85CE : =$F                 vcRR3 set $0F
(1)   40/   E85CE : =$F                 vcRR4 set $0F
(1)   41/   E85CE : (MACRO)             	smpsVcTotalLevel    $00, $28, $00, $0D
(1)   41/   E85CE : =$0                 vcTL1 set $00
(1)   41/   E85CE : =$28                vcTL2 set $28
(1)   41/   E85CE : =$0                 vcTL3 set $00
(1)   41/   E85CE : =$D                 vcTL4 set $0D
(1)   41/   E85CE : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E85CF :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E85CF :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E85CF : =$0                 vcTLMask4 set 0
(1)   41/   E85CF : =$0                 vcTLMask3 set 0
(1)   41/   E85CF : =$0                 vcTLMask2 set 0
(1)   41/   E85CF : =$0                 vcTLMask1 set 0
(1)   41/   E85CF :                     
(1)   41/   E85CF :                     
(1)   41/   E85CF : 0044 0202                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E85D3 : 1F1F 1F15                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E85D7 : 001F 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E85DB : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E85DF : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E85E3 : 0D00 2800                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E85E7 :                     
(1)   43/   E85E7 :                     
  546/   E85E7 :                        Sound3F:	include "sfx-improved/BF - Continue Jingle.asm"
(1)    1/   E85E7 :                     Sound3F_ContinueJingle_Header:
(1)    2/   E85E7 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E85E7 :                     
(1)    2/   E85E7 : =$3                 SourceDriver set 3
(1)    2/   E85E7 :                     
(1)    2/   E85E7 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E85E7 :                     
(1)    2/   E85E7 : =$E85E7             songStart set *
(1)    2/   E85E7 :                     
(1)    2/   E85E7 :                     
(1)    3/   E85E7 : (MACRO)             	smpsHeaderVoice     Sound3F_40_42_Voices
(1)    3/   E85E7 : 4086                                dc.w    z80_ptr(SOUND3F_40_42_VOICES)
(1)    4/   E85E9 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E85E9 : 01                          dc.b    $01
(1)    5/   E85EA : (MACRO)             	smpsHeaderChanSFX   $03
(1)    5/   E85EA : 03                          dc.b    $03
(1)    6/   E85EB :                     
(1)    7/   E85EB : (MACRO)             	smpsHeaderSFXChannel cFM3, Sound3F_ContinueJingle_FM3,	$F4, $06
(1)    7/   E85EB : 8002                        dc.b    $80,CFM3
(1)    7/   E85ED :  (MACRO-2)                  CheckedChannelPointer SOUND3F_CONTINUEJINGLE_FM3
(1)    7/   E85ED : FD85                                dc.w    z80_ptr(SOUND3F_CONTINUEJINGLE_FM3)
(1)    7/   E85EF : F4                                  dc.b    $F4
(1)    7/   E85F0 : 06                          dc.b    $06
(1)    8/   E85F1 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound3F_ContinueJingle_FM4,	$F4, $06
(1)    8/   E85F1 : 8004                        dc.b    $80,CFM4
(1)    8/   E85F3 :  (MACRO-2)                  CheckedChannelPointer SOUND3F_CONTINUEJINGLE_FM4
(1)    8/   E85F3 : 1886                                dc.w    z80_ptr(SOUND3F_CONTINUEJINGLE_FM4)
(1)    8/   E85F5 : F4                                  dc.b    $F4
(1)    8/   E85F6 : 06                          dc.b    $06
(1)    9/   E85F7 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound3F_ContinueJingle_FM5,	$F4, $06
(1)    9/   E85F7 : 8005                        dc.b    $80,CFM5
(1)    9/   E85F9 :  (MACRO-2)                  CheckedChannelPointer SOUND3F_CONTINUEJINGLE_FM5
(1)    9/   E85F9 : 2D86                                dc.w    z80_ptr(SOUND3F_CONTINUEJINGLE_FM5)
(1)    9/   E85FB : F4                                  dc.b    $F4
(1)    9/   E85FC : 06                          dc.b    $06
(1)   10/   E85FD :                     
(1)   11/   E85FD :                     ; FM3 Data
(1)   12/   E85FD :                     Sound3F_ContinueJingle_FM3:
(1)   13/   E85FD : (MACRO)             	smpsSetvoice        $00
(1)   13/   E85FD :  (MACRO-2)                  smpsFMvoice $00
(1)   13/   E85FD : EF00                                dc.b    $EF,$00
(1)   14/   E85FF : C907 CDD0 CBCE D2CD 	dc.b	nC6, $07, nE6, nG6, nD6, nF6, nA6, nE6, nG6, nB6, nF6, nA6
            E8607 : D0D4 CED2         
(1)   15/   E860B : D5                  	dc.b	nC7
(1)   16/   E860C :                     
(1)   17/   E860C :                     Sound3F_ContinueJingle_Loop02:
(1)   18/   E860C : D007 D4D7           	dc.b	nG6, $07, nB6, nD7
(1)   19/   E8610 : (MACRO)             	smpsAlterVol        $05
(1)   19/   E8610 : E605                        dc.b    $E6,$05
(1)   20/   E8612 : (MACRO)             	smpsLoop            $00, $08, Sound3F_ContinueJingle_Loop02
(1)   20/   E8612 : F7                          dc.b    $F7
(1)   20/   E8613 : 0008                        dc.b    $00,$08
(1)   20/   E8615 : 0C86                                dc.w    z80_ptr(SOUND3F_CONTINUEJINGLE_LOOP02)
(1)   21/   E8617 : (MACRO)             	smpsStop
(1)   21/   E8617 : F2                          dc.b    $F2
(1)   22/   E8618 :                     
(1)   23/   E8618 :                     ; FM4 Data
(1)   24/   E8618 :                     Sound3F_ContinueJingle_FM4:
(1)   25/   E8618 : (MACRO)             	smpsSetvoice        $00
(1)   25/   E8618 :  (MACRO-2)                  smpsFMvoice $00
(1)   25/   E8618 : EF00                                dc.b    $EF,$00
(1)   26/   E861A : (MACRO)             	smpsAlterNote       $01
(1)   26/   E861A :  (MACRO-2)                  smpsDetune      $01
(1)   26/   E861A : E101                        dc.b    $E1,$01
(1)   27/   E861C : 8007 CD15 CED0 D2   	dc.b	nRst, $07, nE6, $15, nF6, nG6, nA6
(1)   28/   E8623 :                     
(1)   29/   E8623 :                     Sound3F_ContinueJingle_Loop01:
(1)   30/   E8623 : D415                	dc.b	nB6, $15
(1)   31/   E8625 : (MACRO)             	smpsAlterVol        $05
(1)   31/   E8625 : E605                        dc.b    $E6,$05
(1)   32/   E8627 : (MACRO)             	smpsLoop            $00, $08, Sound3F_ContinueJingle_Loop01
(1)   32/   E8627 : F7                          dc.b    $F7
(1)   32/   E8628 : 0008                        dc.b    $00,$08
(1)   32/   E862A : 2386                                dc.w    z80_ptr(SOUND3F_CONTINUEJINGLE_LOOP01)
(1)   33/   E862C : (MACRO)             	smpsStop
(1)   33/   E862C : F2                          dc.b    $F2
(1)   34/   E862D :                     
(1)   35/   E862D :                     ; FM5 Data
(1)   36/   E862D :                     Sound3F_ContinueJingle_FM5:
(1)   37/   E862D : (MACRO)             	smpsSetvoice        $00
(1)   37/   E862D :  (MACRO-2)                  smpsFMvoice $00
(1)   37/   E862D : EF00                                dc.b    $EF,$00
(1)   38/   E862F : (MACRO)             	smpsAlterNote       $01
(1)   38/   E862F :  (MACRO-2)                  smpsDetune      $01
(1)   38/   E862F : E101                        dc.b    $E1,$01
(1)   39/   E8631 : C915 CBCD CE        	dc.b	nC6, $15, nD6, nE6, nF6
(1)   40/   E8636 :                     
(1)   41/   E8636 :                     Sound3F_ContinueJingle_Loop00:
(1)   42/   E8636 : D015                	dc.b	nG6, $15
(1)   43/   E8638 : (MACRO)             	smpsAlterVol        $05
(1)   43/   E8638 : E605                        dc.b    $E6,$05
(1)   44/   E863A : (MACRO)             	smpsLoop            $00, $08, Sound3F_ContinueJingle_Loop00
(1)   44/   E863A : F7                          dc.b    $F7
(1)   44/   E863B : 0008                        dc.b    $00,$08
(1)   44/   E863D : 3686                                dc.w    z80_ptr(SOUND3F_CONTINUEJINGLE_LOOP00)
(1)   45/   E863F : (MACRO)             	smpsStop
(1)   45/   E863F : F2                          dc.b    $F2
(1)   46/   E8640 :                     
(1)   47/   E8640 :                     Sound3F_40_42_Voices:
(1)   48/   E8640 :                     ;	Voice $00
(1)   49/   E8640 :                     ;	$14
(1)   50/   E8640 :                     ;	$25, $33, $36, $11, 	$1F, $1F, $1F, $1F, 	$15, $18, $1C, $13
(1)   51/   E8640 :                     ;	$0B, $08, $0D, $09, 	$0F, $9F, $8F, $0F, 	$24, $05, $0A, $80
(1)   52/   E8640 : (MACRO)             	smpsVcAlgorithm     $04
(1)   52/   E8640 : =$4                 vcAlgorithm set $04
(1)   53/   E8640 : (MACRO)             	smpsVcFeedback      $02
(1)   53/   E8640 : =$2                 vcFeedback set $02
(1)   54/   E8640 : (MACRO)             	smpsVcUnusedBits    $00
(1)   54/   E8640 : =$0                 vcUnusedBits set $00
(1)   54/   E8640 : =$0                 vcD1R1Unk set 0
(1)   54/   E8640 : =$0                 vcD1R2Unk set 0
(1)   54/   E8640 : =$0                 vcD1R3Unk set 0
(1)   54/   E8640 : =$0                 vcD1R4Unk set 0
(1)   55/   E8640 : (MACRO)             	smpsVcDetune        $01, $03, $03, $02
(1)   55/   E8640 : =$1                 vcDT1 set $01
(1)   55/   E8640 : =$3                 vcDT2 set $03
(1)   55/   E8640 : =$3                 vcDT3 set $03
(1)   55/   E8640 : =$2                 vcDT4 set $02
(1)   56/   E8640 : (MACRO)             	smpsVcCoarseFreq    $01, $06, $03, $05
(1)   56/   E8640 : =$1                 vcCF1 set $01
(1)   56/   E8640 : =$6                 vcCF2 set $06
(1)   56/   E8640 : =$3                 vcCF3 set $03
(1)   56/   E8640 : =$5                 vcCF4 set $05
(1)   57/   E8640 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   57/   E8640 : =$0                 vcRS1 set $00
(1)   57/   E8640 : =$0                 vcRS2 set $00
(1)   57/   E8640 : =$0                 vcRS3 set $00
(1)   57/   E8640 : =$0                 vcRS4 set $00
(1)   58/   E8640 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   58/   E8640 : =$1F                vcAR1 set $1F
(1)   58/   E8640 : =$1F                vcAR2 set $1F
(1)   58/   E8640 : =$1F                vcAR3 set $1F
(1)   58/   E8640 : =$1F                vcAR4 set $1F
(1)   59/   E8640 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   59/   E8640 : =$0                 vcAM1 set $00<<7
(1)   59/   E8640 : =$0                 vcAM2 set $00<<7
(1)   59/   E8640 : =$0                 vcAM3 set $00<<7
(1)   59/   E8640 : =$0                 vcAM4 set $00<<7
(1)   60/   E8640 : (MACRO)             	smpsVcDecayRate1    $13, $1C, $18, $15
(1)   60/   E8640 : =$13                vcD1R1 set $13
(1)   60/   E8640 : =$1C                vcD1R2 set $1C
(1)   60/   E8640 : =$18                vcD1R3 set $18
(1)   60/   E8640 : =$15                vcD1R4 set $15
(1)   61/   E8640 : (MACRO)             	smpsVcDecayRate2    $09, $0D, $08, $0B
(1)   61/   E8640 : =$9                 vcD2R1 set $09
(1)   61/   E8640 : =$D                 vcD2R2 set $0D
(1)   61/   E8640 : =$8                 vcD2R3 set $08
(1)   61/   E8640 : =$B                 vcD2R4 set $0B
(1)   62/   E8640 : (MACRO)             	smpsVcDecayLevel    $00, $08, $09, $00
(1)   62/   E8640 : =$0                 vcDL1 set $00
(1)   62/   E8640 : =$8                 vcDL2 set $08
(1)   62/   E8640 : =$9                 vcDL3 set $09
(1)   62/   E8640 : =$0                 vcDL4 set $00
(1)   63/   E8640 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   63/   E8640 : =$F                 vcRR1 set $0F
(1)   63/   E8640 : =$F                 vcRR2 set $0F
(1)   63/   E8640 : =$F                 vcRR3 set $0F
(1)   63/   E8640 : =$F                 vcRR4 set $0F
(1)   64/   E8640 : (MACRO)             	smpsVcTotalLevel    $80, $0A, $05, $24
(1)   64/   E8640 : =$80                vcTL1 set $80
(1)   64/   E8640 : =$A                 vcTL2 set $0A
(1)   64/   E8640 : =$5                 vcTL3 set $05
(1)   64/   E8640 : =$24                vcTL4 set $24
(1)   64/   E8640 : 14                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   64/   E8641 :                     ;   0     1     2     3     4     5     6     7
(1)   64/   E8641 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   64/   E8641 : =$0                 vcTLMask4 set 0
(1)   64/   E8641 : =$0                 vcTLMask3 set 0
(1)   64/   E8641 : =$0                 vcTLMask2 set 0
(1)   64/   E8641 : =$0                 vcTLMask1 set 0
(1)   64/   E8641 :                     
(1)   64/   E8641 :                     
(1)   64/   E8641 : 2533 3611                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   64/   E8645 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   64/   E8649 : 1518 1C13                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   64/   E864D : 0B08 0D09                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   64/   E8651 : 0F9F 8F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   64/   E8655 : 2405 0A80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   65/   E8659 :                     
(1)   66/   E8659 :                     
  547/   E8659 :                        Sound40:	include "sfx-improved/C0 - Casino Bonus.asm"
(1)    1/   E8659 :                     Sound40_CasinoBonus_Header:
(1)    2/   E8659 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8659 :                     
(1)    2/   E8659 : =$3                 SourceDriver set 3
(1)    2/   E8659 :                     
(1)    2/   E8659 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8659 :                     
(1)    2/   E8659 : =$E8659             songStart set *
(1)    2/   E8659 :                     
(1)    2/   E8659 :                     
(1)    3/   E8659 : (MACRO)             	smpsHeaderVoice     Sound3F_40_42_Voices
(1)    3/   E8659 : 4086                                dc.w    z80_ptr(SOUND3F_40_42_VOICES)
(1)    4/   E865B : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E865B : 01                          dc.b    $01
(1)    5/   E865C : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E865C : 02                          dc.b    $02
(1)    6/   E865D :                     
(1)    7/   E865D : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound40_CasinoBonus_FM5,	$00, $08
(1)    7/   E865D : 8005                        dc.b    $80,CFM5
(1)    7/   E865F :  (MACRO-2)                  CheckedChannelPointer SOUND40_CASINOBONUS_FM5
(1)    7/   E865F : 6D86                                dc.w    z80_ptr(SOUND40_CASINOBONUS_FM5)
(1)    7/   E8661 : 00                                  dc.b    $00
(1)    7/   E8662 : 08                          dc.b    $08
(1)    8/   E8663 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound40_CasinoBonus_FM4,	$00, $08
(1)    8/   E8663 : 8004                        dc.b    $80,CFM4
(1)    8/   E8665 :  (MACRO-2)                  CheckedChannelPointer SOUND40_CASINOBONUS_FM4
(1)    8/   E8665 : 6986                                dc.w    z80_ptr(SOUND40_CASINOBONUS_FM4)
(1)    8/   E8667 : 00                                  dc.b    $00
(1)    8/   E8668 : 08                          dc.b    $08
(1)    9/   E8669 :                     
(1)   10/   E8669 :                     ; FM4 Data
(1)   11/   E8669 :                     Sound40_CasinoBonus_FM4:
(1)   12/   E8669 : (MACRO)             	smpsAlterNote       $03
(1)   12/   E8669 :  (MACRO-2)                  smpsDetune      $03
(1)   12/   E8669 : E103                        dc.b    $E1,$03
(1)   13/   E866B : 8002                	dc.b	nRst, $02
(1)   14/   E866D :                     
(1)   15/   E866D :                     ; FM5 Data
(1)   16/   E866D :                     Sound40_CasinoBonus_FM5:
(1)   17/   E866D : (MACRO)             	smpsSetvoice        $00
(1)   17/   E866D :  (MACRO-2)                  smpsFMvoice $00
(1)   17/   E866D : EF00                                dc.b    $EF,$00
(1)   18/   E866F : C416                	dc.b	nG5, $16
(1)   19/   E8671 : (MACRO)             	smpsStop
(1)   19/   E8671 : F2                          dc.b    $F2
(1)   20/   E8672 :                     
  548/   E8672 :                        Sound41:	include "sfx-improved/C1 - Explosion.asm"
(1)    1/   E8672 :                     Sound41_Explosion_Header:
(1)    2/   E8672 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8672 :                     
(1)    2/   E8672 : =$3                 SourceDriver set 3
(1)    2/   E8672 :                     
(1)    2/   E8672 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8672 :                     
(1)    2/   E8672 : =$E8672             songStart set *
(1)    2/   E8672 :                     
(1)    2/   E8672 :                     
(1)    3/   E8672 : (MACRO)             	smpsHeaderVoice     Sound41_Explosion_Voices
(1)    3/   E8672 : 9386                                dc.w    z80_ptr(SOUND41_EXPLOSION_VOICES)
(1)    4/   E8674 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8674 : 01                          dc.b    $01
(1)    5/   E8675 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8675 : 02                          dc.b    $02
(1)    6/   E8676 :                     
(1)    7/   E8676 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound41_Explosion_FM5,	$00, $00
(1)    7/   E8676 : 8005                        dc.b    $80,CFM5
(1)    7/   E8678 :  (MACRO-2)                  CheckedChannelPointer SOUND41_EXPLOSION_FM5
(1)    7/   E8678 : 8286                                dc.w    z80_ptr(SOUND41_EXPLOSION_FM5)
(1)    7/   E867A : 00                                  dc.b    $00
(1)    7/   E867B : 00                          dc.b    $00
(1)    8/   E867C : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound41_Explosion_PSG3,	$00, $02
(1)    8/   E867C : 80C0                        dc.b    $80,CPSG3
(1)    8/   E867E :  (MACRO-2)                  CheckedChannelPointer SOUND41_EXPLOSION_PSG3
(1)    8/   E867E : 8C86                                dc.w    z80_ptr(SOUND41_EXPLOSION_PSG3)
(1)    8/   E8680 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8680 : 00                                  dc.b    $00
(1)    8/   E8681 : 02                          dc.b    $02
(1)    9/   E8682 :                     
(1)   10/   E8682 :                     ; FM5 Data
(1)   11/   E8682 :                     Sound41_Explosion_FM5:
(1)   12/   E8682 : (MACRO)             	smpsModSet          $03, $01, $72, $0B
(1)   12/   E8682 : F0                          dc.b    $F0
(1)   12/   E8683 : 0301 720B                           dc.b    $03,$01,$72,$0B
(1)   12/   E8687 :                             ;dc.b   $01,$72,$0B
(1)   13/   E8687 : (MACRO)             	smpsSetvoice        $00
(1)   13/   E8687 :  (MACRO-2)                  smpsFMvoice $00
(1)   13/   E8687 : EF00                                dc.b    $EF,$00
(1)   14/   E8689 : BA16                	dc.b	nA4, $16
(1)   15/   E868B : (MACRO)             	smpsStop
(1)   15/   E868B : F2                          dc.b    $F2
(1)   16/   E868C :                     
(1)   17/   E868C :                     ; PSG3 Data
(1)   18/   E868C :                     Sound41_Explosion_PSG3:
(1)   19/   E868C : (MACRO)             	smpsPSGvoice        fTone_01
(1)   19/   E868C : F501                        dc.b    $F5,FTONE_01
(1)   20/   E868E : (MACRO)             	smpsPSGform         $E7
(1)   20/   E868E : F3E7                        dc.b    $F3,$E7
(1)   21/   E8690 : B01B                	dc.b	nB3, $1B
(1)   22/   E8692 : (MACRO)             	smpsStop
(1)   22/   E8692 : F2                          dc.b    $F2
(1)   23/   E8693 :                     
(1)   24/   E8693 :                     Sound41_Explosion_Voices:
(1)   25/   E8693 :                     ;	Voice $00
(1)   26/   E8693 :                     ;	$3C
(1)   27/   E8693 :                     ;	$0F, $01, $03, $01, 	$1F, $1F, $1F, $1F, 	$19, $12, $19, $0E
(1)   28/   E8693 :                     ;	$05, $12, $00, $0F, 	$0F, $7F, $FF, $FF, 	$00, $80, $00, $80
(1)   29/   E8693 : (MACRO)             	smpsVcAlgorithm     $04
(1)   29/   E8693 : =$4                 vcAlgorithm set $04
(1)   30/   E8693 : (MACRO)             	smpsVcFeedback      $07
(1)   30/   E8693 : =$7                 vcFeedback set $07
(1)   31/   E8693 : (MACRO)             	smpsVcUnusedBits    $00
(1)   31/   E8693 : =$0                 vcUnusedBits set $00
(1)   31/   E8693 : =$0                 vcD1R1Unk set 0
(1)   31/   E8693 : =$0                 vcD1R2Unk set 0
(1)   31/   E8693 : =$0                 vcD1R3Unk set 0
(1)   31/   E8693 : =$0                 vcD1R4Unk set 0
(1)   32/   E8693 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   32/   E8693 : =$0                 vcDT1 set $00
(1)   32/   E8693 : =$0                 vcDT2 set $00
(1)   32/   E8693 : =$0                 vcDT3 set $00
(1)   32/   E8693 : =$0                 vcDT4 set $00
(1)   33/   E8693 : (MACRO)             	smpsVcCoarseFreq    $01, $03, $01, $0F
(1)   33/   E8693 : =$1                 vcCF1 set $01
(1)   33/   E8693 : =$3                 vcCF2 set $03
(1)   33/   E8693 : =$1                 vcCF3 set $01
(1)   33/   E8693 : =$F                 vcCF4 set $0F
(1)   34/   E8693 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   34/   E8693 : =$0                 vcRS1 set $00
(1)   34/   E8693 : =$0                 vcRS2 set $00
(1)   34/   E8693 : =$0                 vcRS3 set $00
(1)   34/   E8693 : =$0                 vcRS4 set $00
(1)   35/   E8693 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   35/   E8693 : =$1F                vcAR1 set $1F
(1)   35/   E8693 : =$1F                vcAR2 set $1F
(1)   35/   E8693 : =$1F                vcAR3 set $1F
(1)   35/   E8693 : =$1F                vcAR4 set $1F
(1)   36/   E8693 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E8693 : =$0                 vcAM1 set $00<<5
(1)   36/   E8693 : =$0                 vcAM2 set $00<<5
(1)   36/   E8693 : =$0                 vcAM3 set $00<<5
(1)   36/   E8693 : =$0                 vcAM4 set $00<<5
(1)   37/   E8693 : (MACRO)             	smpsVcDecayRate1    $0E, $19, $12, $19
(1)   37/   E8693 : =$E                 vcD1R1 set $0E
(1)   37/   E8693 : =$19                vcD1R2 set $19
(1)   37/   E8693 : =$12                vcD1R3 set $12
(1)   37/   E8693 : =$19                vcD1R4 set $19
(1)   38/   E8693 : (MACRO)             	smpsVcDecayRate2    $0F, $00, $12, $05
(1)   38/   E8693 : =$F                 vcD2R1 set $0F
(1)   38/   E8693 : =$0                 vcD2R2 set $00
(1)   38/   E8693 : =$12                vcD2R3 set $12
(1)   38/   E8693 : =$5                 vcD2R4 set $05
(1)   39/   E8693 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $07, $00
(1)   39/   E8693 : =$F                 vcDL1 set $0F
(1)   39/   E8693 : =$F                 vcDL2 set $0F
(1)   39/   E8693 : =$7                 vcDL3 set $07
(1)   39/   E8693 : =$0                 vcDL4 set $00
(1)   40/   E8693 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E8693 : =$F                 vcRR1 set $0F
(1)   40/   E8693 : =$F                 vcRR2 set $0F
(1)   40/   E8693 : =$F                 vcRR3 set $0F
(1)   40/   E8693 : =$F                 vcRR4 set $0F
(1)   41/   E8693 : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $00
(1)   41/   E8693 : =$0                 vcTL1 set $00
(1)   41/   E8693 : =$0                 vcTL2 set $00
(1)   41/   E8693 : =$0                 vcTL3 set $00
(1)   41/   E8693 : =$0                 vcTL4 set $00
(1)   41/   E8693 : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E8694 :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E8694 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E8694 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   41/   E8694 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   41/   E8694 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   41/   E8694 : =$80                vcTLMask1 set $80
(1)   41/   E8694 :                     
(1)   41/   E8694 :                     
(1)   41/   E8694 : 0F01 0301                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E8698 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E869C : 1912 190E                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E86A0 : 0512 000F                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E86A4 : 0F7F FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E86A8 : 0080 0080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E86AC :                     
(1)   43/   E86AC :                     
  549/   E86AC :                        Sound42:	include "sfx-improved/C2 - Water Warning.asm"
(1)    1/   E86AC :                     Sound42_WaterWarning_Header:
(1)    2/   E86AC : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E86AC :                     
(1)    2/   E86AC : =$3                 SourceDriver set 3
(1)    2/   E86AC :                     
(1)    2/   E86AC : =$0                 SourceSMPS2ASM set 0
(1)    2/   E86AC :                     
(1)    2/   E86AC : =$E86AC             songStart set *
(1)    2/   E86AC :                     
(1)    2/   E86AC :                     
(1)    3/   E86AC : (MACRO)             	smpsHeaderVoice     Sound3F_40_42_Voices
(1)    3/   E86AC : 4086                                dc.w    z80_ptr(SOUND3F_40_42_VOICES)
(1)    4/   E86AE : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E86AE : 01                          dc.b    $01
(1)    5/   E86AF : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E86AF : 01                          dc.b    $01
(1)    6/   E86B0 :                     
(1)    7/   E86B0 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound42_WaterWarning_FM5,	$0C, $08
(1)    7/   E86B0 : 8005                        dc.b    $80,CFM5
(1)    7/   E86B2 :  (MACRO-2)                  CheckedChannelPointer SOUND42_WATERWARNING_FM5
(1)    7/   E86B2 : B686                                dc.w    z80_ptr(SOUND42_WATERWARNING_FM5)
(1)    7/   E86B4 : 0C                                  dc.b    $0C
(1)    7/   E86B5 : 08                          dc.b    $08
(1)    8/   E86B6 :                     
(1)    9/   E86B6 :                     ; FM5 Data
(1)   10/   E86B6 :                     Sound42_WaterWarning_FM5:
(1)   11/   E86B6 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E86B6 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E86B6 : EF00                                dc.b    $EF,$00
(1)   12/   E86B8 : BA08 BA25           	dc.b	nA4, $08, nA4, $25
(1)   13/   E86BC : (MACRO)             	smpsStop
(1)   13/   E86BC : F2                          dc.b    $F2
(1)   14/   E86BD :                     
  550/   E86BD :                        Sound43:	include "sfx-improved/C3 - Enter Giant Ring (Unused).asm"
(1)    1/   E86BD :                     Sound43_EnterGiantRing_Header:
(1)    2/   E86BD : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E86BD :                     
(1)    2/   E86BD : =$3                 SourceDriver set 3
(1)    2/   E86BD :                     
(1)    2/   E86BD : =$0                 SourceSMPS2ASM set 0
(1)    2/   E86BD :                     
(1)    2/   E86BD : =$E86BD             songStart set *
(1)    2/   E86BD :                     
(1)    2/   E86BD :                     
(1)    3/   E86BD : (MACRO)             	smpsHeaderVoice     Sound43_EnterGiantRing_Voices
(1)    3/   E86BD : EC86                                dc.w    z80_ptr(SOUND43_ENTERGIANTRING_VOICES)
(1)    4/   E86BF : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E86BF : 01                          dc.b    $01
(1)    5/   E86C0 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E86C0 : 02                          dc.b    $02
(1)    6/   E86C1 :                     
(1)    7/   E86C1 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound43_EnterGiantRing_FM4,	$0C, $00
(1)    7/   E86C1 : 8004                        dc.b    $80,CFM4
(1)    7/   E86C3 :  (MACRO-2)                  CheckedChannelPointer SOUND43_ENTERGIANTRING_FM4
(1)    7/   E86C3 : CD86                                dc.w    z80_ptr(SOUND43_ENTERGIANTRING_FM4)
(1)    7/   E86C5 : 0C                                  dc.b    $0C
(1)    7/   E86C6 : 00                          dc.b    $00
(1)    8/   E86C7 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound43_EnterGiantRing_FM5,	$00, $13
(1)    8/   E86C7 : 8005                        dc.b    $80,CFM5
(1)    8/   E86C9 :  (MACRO-2)                  CheckedChannelPointer SOUND43_ENTERGIANTRING_FM5
(1)    8/   E86C9 : D986                                dc.w    z80_ptr(SOUND43_ENTERGIANTRING_FM5)
(1)    8/   E86CB : 00                                  dc.b    $00
(1)    8/   E86CC : 13                          dc.b    $13
(1)    9/   E86CD :                     
(1)   10/   E86CD :                     ; FM4 Data
(1)   11/   E86CD :                     Sound43_EnterGiantRing_FM4:
(1)   12/   E86CD : (MACRO)             	smpsSetvoice        $01
(1)   12/   E86CD :  (MACRO-2)                  smpsFMvoice $01
(1)   12/   E86CD : EF01                                dc.b    $EF,$01
(1)   13/   E86CF : 8001 A208           	dc.b	nRst, $01, nA2, $08
(1)   14/   E86D3 : (MACRO)             	smpsSetvoice        $00
(1)   14/   E86D3 :  (MACRO-2)                  smpsFMvoice $00
(1)   14/   E86D3 : EF00                                dc.b    $EF,$00
(1)   15/   E86D5 : E7AD 26             	dc.b	smpsNoAttack, nAb3, $26
(1)   16/   E86D8 : (MACRO)             	smpsStop
(1)   16/   E86D8 : F2                          dc.b    $F2
(1)   17/   E86D9 :                     
(1)   18/   E86D9 :                     ; FM5 Data
(1)   19/   E86D9 :                     Sound43_EnterGiantRing_FM5:
(1)   20/   E86D9 : (MACRO)             	smpsSetvoice        $02
(1)   20/   E86D9 :  (MACRO-2)                  smpsFMvoice $02
(1)   20/   E86D9 : EF02                                dc.b    $EF,$02
(1)   21/   E86DB : (MACRO)             	smpsModSet          $06, $01, $03, $FF
(1)   21/   E86DB : F0                          dc.b    $F0
(1)   21/   E86DC : 0601 03FF                           dc.b    $06,$01,$03,$FF
(1)   21/   E86E0 :                             ;dc.b   $01,$03,$FF
(1)   22/   E86E0 : 800A                	dc.b	nRst, $0A
(1)   23/   E86E2 :                     
(1)   24/   E86E2 :                     Sound43_EnterGiantRing_Loop00:
(1)   25/   E86E2 : C306                	dc.b	nFs5, $06
(1)   26/   E86E4 : (MACRO)             	smpsLoop            $00, $05, Sound43_EnterGiantRing_Loop00
(1)   26/   E86E4 : F7                          dc.b    $F7
(1)   26/   E86E5 : 0005                        dc.b    $00,$05
(1)   26/   E86E7 : E286                                dc.w    z80_ptr(SOUND43_ENTERGIANTRING_LOOP00)
(1)   27/   E86E9 : C317                	dc.b	nFs5, $17
(1)   28/   E86EB : (MACRO)             	smpsStop
(1)   28/   E86EB : F2                          dc.b    $F2
(1)   29/   E86EC :                     
(1)   30/   E86EC :                     Sound43_EnterGiantRing_Voices:
(1)   31/   E86EC :                     ;	Voice $00
(1)   32/   E86EC :                     ;	$30
(1)   33/   E86EC :                     ;	$30, $5C, $34, $30, 	$9E, $A8, $AC, $DC, 	$0E, $0A, $04, $05
(1)   34/   E86EC :                     ;	$08, $08, $08, $08, 	$BF, $BF, $BF, $BF, 	$24, $1C, $04, $80
(1)   35/   E86EC : (MACRO)             	smpsVcAlgorithm     $00
(1)   35/   E86EC : =$0                 vcAlgorithm set $00
(1)   36/   E86EC : (MACRO)             	smpsVcFeedback      $06
(1)   36/   E86EC : =$6                 vcFeedback set $06
(1)   37/   E86EC : (MACRO)             	smpsVcUnusedBits    $00
(1)   37/   E86EC : =$0                 vcUnusedBits set $00
(1)   37/   E86EC : =$0                 vcD1R1Unk set 0
(1)   37/   E86EC : =$0                 vcD1R2Unk set 0
(1)   37/   E86EC : =$0                 vcD1R3Unk set 0
(1)   37/   E86EC : =$0                 vcD1R4Unk set 0
(1)   38/   E86EC : (MACRO)             	smpsVcDetune        $03, $03, $05, $03
(1)   38/   E86EC : =$3                 vcDT1 set $03
(1)   38/   E86EC : =$3                 vcDT2 set $03
(1)   38/   E86EC : =$5                 vcDT3 set $05
(1)   38/   E86EC : =$3                 vcDT4 set $03
(1)   39/   E86EC : (MACRO)             	smpsVcCoarseFreq    $00, $04, $0C, $00
(1)   39/   E86EC : =$0                 vcCF1 set $00
(1)   39/   E86EC : =$4                 vcCF2 set $04
(1)   39/   E86EC : =$C                 vcCF3 set $0C
(1)   39/   E86EC : =$0                 vcCF4 set $00
(1)   40/   E86EC : (MACRO)             	smpsVcRateScale     $03, $02, $02, $02
(1)   40/   E86EC : =$3                 vcRS1 set $03
(1)   40/   E86EC : =$2                 vcRS2 set $02
(1)   40/   E86EC : =$2                 vcRS3 set $02
(1)   40/   E86EC : =$2                 vcRS4 set $02
(1)   41/   E86EC : (MACRO)             	smpsVcAttackRate    $1C, $2C, $28, $1E
(1)   41/   E86EC : =$1C                vcAR1 set $1C
(1)   41/   E86EC : =$2C                vcAR2 set $2C
(1)   41/   E86EC : =$28                vcAR3 set $28
(1)   41/   E86EC : =$1E                vcAR4 set $1E
(1)   42/   E86EC : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   42/   E86EC : =$0                 vcAM1 set $00<<5
(1)   42/   E86EC : =$0                 vcAM2 set $00<<5
(1)   42/   E86EC : =$0                 vcAM3 set $00<<5
(1)   42/   E86EC : =$0                 vcAM4 set $00<<5
(1)   43/   E86EC : (MACRO)             	smpsVcDecayRate1    $05, $04, $0A, $0E
(1)   43/   E86EC : =$5                 vcD1R1 set $05
(1)   43/   E86EC : =$4                 vcD1R2 set $04
(1)   43/   E86EC : =$A                 vcD1R3 set $0A
(1)   43/   E86EC : =$E                 vcD1R4 set $0E
(1)   44/   E86EC : (MACRO)             	smpsVcDecayRate2    $08, $08, $08, $08
(1)   44/   E86EC : =$8                 vcD2R1 set $08
(1)   44/   E86EC : =$8                 vcD2R2 set $08
(1)   44/   E86EC : =$8                 vcD2R3 set $08
(1)   44/   E86EC : =$8                 vcD2R4 set $08
(1)   45/   E86EC : (MACRO)             	smpsVcDecayLevel    $0B, $0B, $0B, $0B
(1)   45/   E86EC : =$B                 vcDL1 set $0B
(1)   45/   E86EC : =$B                 vcDL2 set $0B
(1)   45/   E86EC : =$B                 vcDL3 set $0B
(1)   45/   E86EC : =$B                 vcDL4 set $0B
(1)   46/   E86EC : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   46/   E86EC : =$F                 vcRR1 set $0F
(1)   46/   E86EC : =$F                 vcRR2 set $0F
(1)   46/   E86EC : =$F                 vcRR3 set $0F
(1)   46/   E86EC : =$F                 vcRR4 set $0F
(1)   47/   E86EC : (MACRO)             	smpsVcTotalLevel    $00, $04, $1C, $24
(1)   47/   E86EC : =$0                 vcTL1 set $00
(1)   47/   E86EC : =$4                 vcTL2 set $04
(1)   47/   E86EC : =$1C                vcTL3 set $1C
(1)   47/   E86EC : =$24                vcTL4 set $24
(1)   47/   E86EC : 30                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   47/   E86ED :                     ;   0     1     2     3     4     5     6     7
(1)   47/   E86ED :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   47/   E86ED : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   47/   E86ED : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   47/   E86ED : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   47/   E86ED : =$80                vcTLMask1 set $80
(1)   47/   E86ED :                     
(1)   47/   E86ED :                     
(1)   47/   E86ED : 305C 3430                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   47/   E86F1 : 9EA8 ACDC                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   47/   E86F5 : 0E0A 0405                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   47/   E86F9 : 0808 0808                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   47/   E86FD : BFBF BFBF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   47/   E8701 : 241C 0480                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   48/   E8705 :                     
(1)   49/   E8705 :                     ;	Voice $01
(1)   50/   E8705 :                     ;	$30
(1)   51/   E8705 :                     ;	$30, $5C, $34, $30, 	$9E, $A8, $AC, $DC, 	$0E, $0A, $04, $05
(1)   52/   E8705 :                     ;	$08, $08, $08, $08, 	$BF, $BF, $BF, $BF, 	$24, $2C, $04, $80
(1)   53/   E8705 : (MACRO)             	smpsVcAlgorithm     $00
(1)   53/   E8705 : =$0                 vcAlgorithm set $00
(1)   54/   E8705 : (MACRO)             	smpsVcFeedback      $06
(1)   54/   E8705 : =$6                 vcFeedback set $06
(1)   55/   E8705 : (MACRO)             	smpsVcUnusedBits    $00
(1)   55/   E8705 : =$0                 vcUnusedBits set $00
(1)   55/   E8705 : =$0                 vcD1R1Unk set 0
(1)   55/   E8705 : =$0                 vcD1R2Unk set 0
(1)   55/   E8705 : =$0                 vcD1R3Unk set 0
(1)   55/   E8705 : =$0                 vcD1R4Unk set 0
(1)   56/   E8705 : (MACRO)             	smpsVcDetune        $03, $03, $05, $03
(1)   56/   E8705 : =$3                 vcDT1 set $03
(1)   56/   E8705 : =$3                 vcDT2 set $03
(1)   56/   E8705 : =$5                 vcDT3 set $05
(1)   56/   E8705 : =$3                 vcDT4 set $03
(1)   57/   E8705 : (MACRO)             	smpsVcCoarseFreq    $00, $04, $0C, $00
(1)   57/   E8705 : =$0                 vcCF1 set $00
(1)   57/   E8705 : =$4                 vcCF2 set $04
(1)   57/   E8705 : =$C                 vcCF3 set $0C
(1)   57/   E8705 : =$0                 vcCF4 set $00
(1)   58/   E8705 : (MACRO)             	smpsVcRateScale     $03, $02, $02, $02
(1)   58/   E8705 : =$3                 vcRS1 set $03
(1)   58/   E8705 : =$2                 vcRS2 set $02
(1)   58/   E8705 : =$2                 vcRS3 set $02
(1)   58/   E8705 : =$2                 vcRS4 set $02
(1)   59/   E8705 : (MACRO)             	smpsVcAttackRate    $1C, $2C, $28, $1E
(1)   59/   E8705 : =$1C                vcAR1 set $1C
(1)   59/   E8705 : =$2C                vcAR2 set $2C
(1)   59/   E8705 : =$28                vcAR3 set $28
(1)   59/   E8705 : =$1E                vcAR4 set $1E
(1)   60/   E8705 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   60/   E8705 : =$0                 vcAM1 set $00<<5
(1)   60/   E8705 : =$0                 vcAM2 set $00<<5
(1)   60/   E8705 : =$0                 vcAM3 set $00<<5
(1)   60/   E8705 : =$0                 vcAM4 set $00<<5
(1)   61/   E8705 : (MACRO)             	smpsVcDecayRate1    $05, $04, $0A, $0E
(1)   61/   E8705 : =$5                 vcD1R1 set $05
(1)   61/   E8705 : =$4                 vcD1R2 set $04
(1)   61/   E8705 : =$A                 vcD1R3 set $0A
(1)   61/   E8705 : =$E                 vcD1R4 set $0E
(1)   62/   E8705 : (MACRO)             	smpsVcDecayRate2    $08, $08, $08, $08
(1)   62/   E8705 : =$8                 vcD2R1 set $08
(1)   62/   E8705 : =$8                 vcD2R2 set $08
(1)   62/   E8705 : =$8                 vcD2R3 set $08
(1)   62/   E8705 : =$8                 vcD2R4 set $08
(1)   63/   E8705 : (MACRO)             	smpsVcDecayLevel    $0B, $0B, $0B, $0B
(1)   63/   E8705 : =$B                 vcDL1 set $0B
(1)   63/   E8705 : =$B                 vcDL2 set $0B
(1)   63/   E8705 : =$B                 vcDL3 set $0B
(1)   63/   E8705 : =$B                 vcDL4 set $0B
(1)   64/   E8705 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   64/   E8705 : =$F                 vcRR1 set $0F
(1)   64/   E8705 : =$F                 vcRR2 set $0F
(1)   64/   E8705 : =$F                 vcRR3 set $0F
(1)   64/   E8705 : =$F                 vcRR4 set $0F
(1)   65/   E8705 : (MACRO)             	smpsVcTotalLevel    $00, $04, $2C, $24
(1)   65/   E8705 : =$0                 vcTL1 set $00
(1)   65/   E8705 : =$4                 vcTL2 set $04
(1)   65/   E8705 : =$2C                vcTL3 set $2C
(1)   65/   E8705 : =$24                vcTL4 set $24
(1)   65/   E8705 : 30                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   65/   E8706 :                     ;   0     1     2     3     4     5     6     7
(1)   65/   E8706 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   65/   E8706 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   65/   E8706 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   65/   E8706 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   65/   E8706 : =$80                vcTLMask1 set $80
(1)   65/   E8706 :                     
(1)   65/   E8706 :                     
(1)   65/   E8706 : 305C 3430                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   65/   E870A : 9EA8 ACDC                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   65/   E870E : 0E0A 0405                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   65/   E8712 : 0808 0808                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   65/   E8716 : BFBF BFBF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   65/   E871A : 242C 0480                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   66/   E871E :                     
(1)   67/   E871E :                     ;	Voice $02
(1)   68/   E871E :                     ;	$04
(1)   69/   E871E :                     ;	$37, $72, $77, $49, 	$1F, $1F, $1F, $1F, 	$07, $0A, $07, $0D
(1)   70/   E871E :                     ;	$00, $0B, $00, $0B, 	$1F, $0F, $1F, $0F, 	$13, $81, $13, $88
(1)   71/   E871E : (MACRO)             	smpsVcAlgorithm     $04
(1)   71/   E871E : =$4                 vcAlgorithm set $04
(1)   72/   E871E : (MACRO)             	smpsVcFeedback      $00
(1)   72/   E871E : =$0                 vcFeedback set $00
(1)   73/   E871E : (MACRO)             	smpsVcUnusedBits    $00
(1)   73/   E871E : =$0                 vcUnusedBits set $00
(1)   73/   E871E : =$0                 vcD1R1Unk set 0
(1)   73/   E871E : =$0                 vcD1R2Unk set 0
(1)   73/   E871E : =$0                 vcD1R3Unk set 0
(1)   73/   E871E : =$0                 vcD1R4Unk set 0
(1)   74/   E871E : (MACRO)             	smpsVcDetune        $04, $07, $07, $03
(1)   74/   E871E : =$4                 vcDT1 set $04
(1)   74/   E871E : =$7                 vcDT2 set $07
(1)   74/   E871E : =$7                 vcDT3 set $07
(1)   74/   E871E : =$3                 vcDT4 set $03
(1)   75/   E871E : (MACRO)             	smpsVcCoarseFreq    $09, $07, $02, $07
(1)   75/   E871E : =$9                 vcCF1 set $09
(1)   75/   E871E : =$7                 vcCF2 set $07
(1)   75/   E871E : =$2                 vcCF3 set $02
(1)   75/   E871E : =$7                 vcCF4 set $07
(1)   76/   E871E : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   76/   E871E : =$0                 vcRS1 set $00
(1)   76/   E871E : =$0                 vcRS2 set $00
(1)   76/   E871E : =$0                 vcRS3 set $00
(1)   76/   E871E : =$0                 vcRS4 set $00
(1)   77/   E871E : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   77/   E871E : =$1F                vcAR1 set $1F
(1)   77/   E871E : =$1F                vcAR2 set $1F
(1)   77/   E871E : =$1F                vcAR3 set $1F
(1)   77/   E871E : =$1F                vcAR4 set $1F
(1)   78/   E871E : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   78/   E871E : =$0                 vcAM1 set $00<<5
(1)   78/   E871E : =$0                 vcAM2 set $00<<5
(1)   78/   E871E : =$0                 vcAM3 set $00<<5
(1)   78/   E871E : =$0                 vcAM4 set $00<<5
(1)   79/   E871E : (MACRO)             	smpsVcDecayRate1    $0D, $07, $0A, $07
(1)   79/   E871E : =$D                 vcD1R1 set $0D
(1)   79/   E871E : =$7                 vcD1R2 set $07
(1)   79/   E871E : =$A                 vcD1R3 set $0A
(1)   79/   E871E : =$7                 vcD1R4 set $07
(1)   80/   E871E : (MACRO)             	smpsVcDecayRate2    $0B, $00, $0B, $00
(1)   80/   E871E : =$B                 vcD2R1 set $0B
(1)   80/   E871E : =$0                 vcD2R2 set $00
(1)   80/   E871E : =$B                 vcD2R3 set $0B
(1)   80/   E871E : =$0                 vcD2R4 set $00
(1)   81/   E871E : (MACRO)             	smpsVcDecayLevel    $00, $01, $00, $01
(1)   81/   E871E : =$0                 vcDL1 set $00
(1)   81/   E871E : =$1                 vcDL2 set $01
(1)   81/   E871E : =$0                 vcDL3 set $00
(1)   81/   E871E : =$1                 vcDL4 set $01
(1)   82/   E871E : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   82/   E871E : =$F                 vcRR1 set $0F
(1)   82/   E871E : =$F                 vcRR2 set $0F
(1)   82/   E871E : =$F                 vcRR3 set $0F
(1)   82/   E871E : =$F                 vcRR4 set $0F
(1)   83/   E871E : (MACRO)             	smpsVcTotalLevel    $08, $13, $01, $13
(1)   83/   E871E : =$8                 vcTL1 set $08
(1)   83/   E871E : =$13                vcTL2 set $13
(1)   83/   E871E : =$1                 vcTL3 set $01
(1)   83/   E871E : =$13                vcTL4 set $13
(1)   83/   E871E : 04                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   83/   E871F :                     ;   0     1     2     3     4     5     6     7
(1)   83/   E871F :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   83/   E871F : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   83/   E871F : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   83/   E871F : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   83/   E871F : =$80                vcTLMask1 set $80
(1)   83/   E871F :                     
(1)   83/   E871F :                     
(1)   83/   E871F : 3772 7749                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   83/   E8723 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   83/   E8727 : 070A 070D                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   83/   E872B : 000B 000B                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   83/   E872F : 1F0F 1F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   83/   E8733 : 1381 1388                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   84/   E8737 :                     
(1)   85/   E8737 :                     
  551/   E8737 :                        Sound44:	include "sfx-improved/C4 - Boss Explosion.asm"
(1)    1/   E8737 :                     Sound44_BossExplosion_Header:
(1)    2/   E8737 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8737 :                     
(1)    2/   E8737 : =$3                 SourceDriver set 3
(1)    2/   E8737 :                     
(1)    2/   E8737 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8737 :                     
(1)    2/   E8737 : =$E8737             songStart set *
(1)    2/   E8737 :                     
(1)    2/   E8737 :                     
(1)    3/   E8737 : (MACRO)             	smpsHeaderVoice     Sound44_BossExplosion_Voices
(1)    3/   E8737 : 4687                                dc.w    z80_ptr(SOUND44_BOSSEXPLOSION_VOICES)
(1)    4/   E8739 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8739 : 01                          dc.b    $01
(1)    5/   E873A : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E873A : 01                          dc.b    $01
(1)    6/   E873B :                     
(1)    7/   E873B : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound44_BossExplosion_FM5,	$00, $00
(1)    7/   E873B : 8005                        dc.b    $80,CFM5
(1)    7/   E873D :  (MACRO-2)                  CheckedChannelPointer SOUND44_BOSSEXPLOSION_FM5
(1)    7/   E873D : 4187                                dc.w    z80_ptr(SOUND44_BOSSEXPLOSION_FM5)
(1)    7/   E873F : 00                                  dc.b    $00
(1)    7/   E8740 : 00                          dc.b    $00
(1)    8/   E8741 :                     
(1)    9/   E8741 :                     ; FM5 Data
(1)   10/   E8741 :                     Sound44_BossExplosion_FM5:
(1)   11/   E8741 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8741 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8741 : EF00                                dc.b    $EF,$00
(1)   12/   E8743 : 8A22                	dc.b	nA0, $22
(1)   13/   E8745 : (MACRO)             	smpsStop
(1)   13/   E8745 : F2                          dc.b    $F2
(1)   14/   E8746 :                     
(1)   15/   E8746 :                     Sound44_BossExplosion_Voices:
(1)   16/   E8746 :                     ;	Voice $00
(1)   17/   E8746 :                     ;	$FA
(1)   18/   E8746 :                     ;	$21, $30, $10, $32, 	$1F, $1F, $1F, $1F, 	$05, $18, $05, $10
(1)   19/   E8746 :                     ;	$0B, $1F, $10, $10, 	$1F, $2F, $4F, $2F, 	$0D, $07, $04, $80
(1)   20/   E8746 : (MACRO)             	smpsVcAlgorithm     $02
(1)   20/   E8746 : =$2                 vcAlgorithm set $02
(1)   21/   E8746 : (MACRO)             	smpsVcFeedback      $07
(1)   21/   E8746 : =$7                 vcFeedback set $07
(1)   22/   E8746 : (MACRO)             	smpsVcUnusedBits    $03
(1)   22/   E8746 : =$3                 vcUnusedBits set $03
(1)   22/   E8746 : =$0                 vcD1R1Unk set 0
(1)   22/   E8746 : =$0                 vcD1R2Unk set 0
(1)   22/   E8746 : =$0                 vcD1R3Unk set 0
(1)   22/   E8746 : =$0                 vcD1R4Unk set 0
(1)   23/   E8746 : (MACRO)             	smpsVcDetune        $03, $01, $03, $02
(1)   23/   E8746 : =$3                 vcDT1 set $03
(1)   23/   E8746 : =$1                 vcDT2 set $01
(1)   23/   E8746 : =$3                 vcDT3 set $03
(1)   23/   E8746 : =$2                 vcDT4 set $02
(1)   24/   E8746 : (MACRO)             	smpsVcCoarseFreq    $02, $00, $00, $01
(1)   24/   E8746 : =$2                 vcCF1 set $02
(1)   24/   E8746 : =$0                 vcCF2 set $00
(1)   24/   E8746 : =$0                 vcCF3 set $00
(1)   24/   E8746 : =$1                 vcCF4 set $01
(1)   25/   E8746 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E8746 : =$0                 vcRS1 set $00
(1)   25/   E8746 : =$0                 vcRS2 set $00
(1)   25/   E8746 : =$0                 vcRS3 set $00
(1)   25/   E8746 : =$0                 vcRS4 set $00
(1)   26/   E8746 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E8746 : =$1F                vcAR1 set $1F
(1)   26/   E8746 : =$1F                vcAR2 set $1F
(1)   26/   E8746 : =$1F                vcAR3 set $1F
(1)   26/   E8746 : =$1F                vcAR4 set $1F
(1)   27/   E8746 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8746 : =$0                 vcAM1 set $00<<5
(1)   27/   E8746 : =$0                 vcAM2 set $00<<5
(1)   27/   E8746 : =$0                 vcAM3 set $00<<5
(1)   27/   E8746 : =$0                 vcAM4 set $00<<5
(1)   28/   E8746 : (MACRO)             	smpsVcDecayRate1    $10, $05, $18, $05
(1)   28/   E8746 : =$10                vcD1R1 set $10
(1)   28/   E8746 : =$5                 vcD1R2 set $05
(1)   28/   E8746 : =$18                vcD1R3 set $18
(1)   28/   E8746 : =$5                 vcD1R4 set $05
(1)   29/   E8746 : (MACRO)             	smpsVcDecayRate2    $10, $10, $1F, $0B
(1)   29/   E8746 : =$10                vcD2R1 set $10
(1)   29/   E8746 : =$10                vcD2R2 set $10
(1)   29/   E8746 : =$1F                vcD2R3 set $1F
(1)   29/   E8746 : =$B                 vcD2R4 set $0B
(1)   30/   E8746 : (MACRO)             	smpsVcDecayLevel    $02, $04, $02, $01
(1)   30/   E8746 : =$2                 vcDL1 set $02
(1)   30/   E8746 : =$4                 vcDL2 set $04
(1)   30/   E8746 : =$2                 vcDL3 set $02
(1)   30/   E8746 : =$1                 vcDL4 set $01
(1)   31/   E8746 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E8746 : =$F                 vcRR1 set $0F
(1)   31/   E8746 : =$F                 vcRR2 set $0F
(1)   31/   E8746 : =$F                 vcRR3 set $0F
(1)   31/   E8746 : =$F                 vcRR4 set $0F
(1)   32/   E8746 : (MACRO)             	smpsVcTotalLevel    $00, $04, $07, $0D
(1)   32/   E8746 : =$0                 vcTL1 set $00
(1)   32/   E8746 : =$4                 vcTL2 set $04
(1)   32/   E8746 : =$7                 vcTL3 set $07
(1)   32/   E8746 : =$D                 vcTL4 set $0D
(1)   32/   E8746 : FA                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8747 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8747 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8747 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E8747 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E8747 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E8747 : =$80                vcTLMask1 set $80
(1)   32/   E8747 :                     
(1)   32/   E8747 :                     
(1)   32/   E8747 : 2130 1032                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E874B : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E874F : 0518 0510                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8753 : 0B1F 1010                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8757 : 1F2F 4F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E875B : 0D07 0480                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E875F :                     
(1)   34/   E875F :                     
  552/   E875F :                        Sound45:	include "sfx-improved/C5 - Tally End.asm"
(1)    1/   E875F :                     Sound45_TallyEnd_Header:
(1)    2/   E875F : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E875F :                     
(1)    2/   E875F : =$3                 SourceDriver set 3
(1)    2/   E875F :                     
(1)    2/   E875F : =$0                 SourceSMPS2ASM set 0
(1)    2/   E875F :                     
(1)    2/   E875F : =$E875F             songStart set *
(1)    2/   E875F :                     
(1)    2/   E875F :                     
(1)    3/   E875F : (MACRO)             	smpsHeaderVoice     Sound45_TallyEnd_Voices
(1)    3/   E875F : 9487                                dc.w    z80_ptr(SOUND45_TALLYEND_VOICES)
(1)    4/   E8761 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8761 : 01                          dc.b    $01
(1)    5/   E8762 : (MACRO)             	smpsHeaderChanSFX   $03
(1)    5/   E8762 : 03                          dc.b    $03
(1)    6/   E8763 :                     
(1)    7/   E8763 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound45_TallyEnd_FM5,	$00, $00
(1)    7/   E8763 : 8005                        dc.b    $80,CFM5
(1)    7/   E8765 :  (MACRO-2)                  CheckedChannelPointer SOUND45_TALLYEND_FM5
(1)    7/   E8765 : 7587                                dc.w    z80_ptr(SOUND45_TALLYEND_FM5)
(1)    7/   E8767 : 00                                  dc.b    $00
(1)    7/   E8768 : 00                          dc.b    $00
(1)    8/   E8769 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound45_TallyEnd_FM4,	$00, $00
(1)    8/   E8769 : 8004                        dc.b    $80,CFM4
(1)    8/   E876B :  (MACRO-2)                  CheckedChannelPointer SOUND45_TALLYEND_FM4
(1)    8/   E876B : 7E87                                dc.w    z80_ptr(SOUND45_TALLYEND_FM4)
(1)    8/   E876D : 00                                  dc.b    $00
(1)    8/   E876E : 00                          dc.b    $00
(1)    9/   E876F : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound45_TallyEnd_PSG3,	$00, $00
(1)    9/   E876F : 80C0                        dc.b    $80,CPSG3
(1)    9/   E8771 :  (MACRO-2)                  CheckedChannelPointer SOUND45_TALLYEND_PSG3
(1)    9/   E8771 : 8587                                dc.w    z80_ptr(SOUND45_TALLYEND_PSG3)
(1)    9/   E8773 :  (MACRO-2)                          PSGPitchConvert $00
(1)    9/   E8773 : 00                                  dc.b    $00
(1)    9/   E8774 : 00                          dc.b    $00
(1)   10/   E8775 :                     
(1)   11/   E8775 :                     ; FM5 Data
(1)   12/   E8775 :                     Sound45_TallyEnd_FM5:
(1)   13/   E8775 : (MACRO)             	smpsSetvoice        $00
(1)   13/   E8775 :  (MACRO-2)                  smpsFMvoice $00
(1)   13/   E8775 : EF00                                dc.b    $EF,$00
(1)   14/   E8777 : 8A08 8002 8A08      	dc.b	nA0, $08, nRst, $02, nA0, $08
(1)   15/   E877D : (MACRO)             	smpsStop
(1)   15/   E877D : F2                          dc.b    $F2
(1)   16/   E877E :                     
(1)   17/   E877E :                     ; FM4 Data
(1)   18/   E877E :                     Sound45_TallyEnd_FM4:
(1)   19/   E877E : (MACRO)             	smpsSetvoice        $01
(1)   19/   E877E :  (MACRO-2)                  smpsFMvoice $01
(1)   19/   E877E : EF01                                dc.b    $EF,$01
(1)   20/   E8780 : 8012 C655           	dc.b	nRst, $12, nA5, $55
(1)   21/   E8784 : (MACRO)             	smpsStop
(1)   21/   E8784 : F2                          dc.b    $F2
(1)   22/   E8785 :                     
(1)   23/   E8785 :                     ; PSG3 Data
(1)   24/   E8785 :                     Sound45_TallyEnd_PSG3:
(1)   25/   E8785 : (MACRO)             	smpsPSGvoice        fTone_02
(1)   25/   E8785 : F502                        dc.b    $F5,FTONE_02
(1)   26/   E8787 : (MACRO)             	smpsPSGform         $E7
(1)   26/   E8787 : F3E7                        dc.b    $F3,$E7
(1)   27/   E8789 : 8002 C205 C404 C205 	dc.b	nRst, $02, nF5, $05, nG5, $04, nF5, $05, nG5, $04
            E8791 : C404               
(1)   28/   E8793 : (MACRO)             	smpsStop
(1)   28/   E8793 : F2                          dc.b    $F2
(1)   29/   E8794 :                     
(1)   30/   E8794 :                     Sound45_TallyEnd_Voices:
(1)   31/   E8794 :                     ;	Voice $00
(1)   32/   E8794 :                     ;	$3B
(1)   33/   E8794 :                     ;	$03, $02, $02, $06, 	$18, $1A, $1A, $96, 	$17, $0E, $0A, $10
(1)   34/   E8794 :                     ;	$00, $00, $00, $00, 	$FF, $FF, $FF, $FF, 	$00, $28, $39, $80
(1)   35/   E8794 : (MACRO)             	smpsVcAlgorithm     $03
(1)   35/   E8794 : =$3                 vcAlgorithm set $03
(1)   36/   E8794 : (MACRO)             	smpsVcFeedback      $07
(1)   36/   E8794 : =$7                 vcFeedback set $07
(1)   37/   E8794 : (MACRO)             	smpsVcUnusedBits    $00
(1)   37/   E8794 : =$0                 vcUnusedBits set $00
(1)   37/   E8794 : =$0                 vcD1R1Unk set 0
(1)   37/   E8794 : =$0                 vcD1R2Unk set 0
(1)   37/   E8794 : =$0                 vcD1R3Unk set 0
(1)   37/   E8794 : =$0                 vcD1R4Unk set 0
(1)   38/   E8794 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   38/   E8794 : =$0                 vcDT1 set $00
(1)   38/   E8794 : =$0                 vcDT2 set $00
(1)   38/   E8794 : =$0                 vcDT3 set $00
(1)   38/   E8794 : =$0                 vcDT4 set $00
(1)   39/   E8794 : (MACRO)             	smpsVcCoarseFreq    $06, $02, $02, $03
(1)   39/   E8794 : =$6                 vcCF1 set $06
(1)   39/   E8794 : =$2                 vcCF2 set $02
(1)   39/   E8794 : =$2                 vcCF3 set $02
(1)   39/   E8794 : =$3                 vcCF4 set $03
(1)   40/   E8794 : (MACRO)             	smpsVcRateScale     $02, $00, $00, $00
(1)   40/   E8794 : =$2                 vcRS1 set $02
(1)   40/   E8794 : =$0                 vcRS2 set $00
(1)   40/   E8794 : =$0                 vcRS3 set $00
(1)   40/   E8794 : =$0                 vcRS4 set $00
(1)   41/   E8794 : (MACRO)             	smpsVcAttackRate    $16, $1A, $1A, $18
(1)   41/   E8794 : =$16                vcAR1 set $16
(1)   41/   E8794 : =$1A                vcAR2 set $1A
(1)   41/   E8794 : =$1A                vcAR3 set $1A
(1)   41/   E8794 : =$18                vcAR4 set $18
(1)   42/   E8794 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   42/   E8794 : =$0                 vcAM1 set $00<<5
(1)   42/   E8794 : =$0                 vcAM2 set $00<<5
(1)   42/   E8794 : =$0                 vcAM3 set $00<<5
(1)   42/   E8794 : =$0                 vcAM4 set $00<<5
(1)   43/   E8794 : (MACRO)             	smpsVcDecayRate1    $10, $0A, $0E, $17
(1)   43/   E8794 : =$10                vcD1R1 set $10
(1)   43/   E8794 : =$A                 vcD1R2 set $0A
(1)   43/   E8794 : =$E                 vcD1R3 set $0E
(1)   43/   E8794 : =$17                vcD1R4 set $17
(1)   44/   E8794 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   44/   E8794 : =$0                 vcD2R1 set $00
(1)   44/   E8794 : =$0                 vcD2R2 set $00
(1)   44/   E8794 : =$0                 vcD2R3 set $00
(1)   44/   E8794 : =$0                 vcD2R4 set $00
(1)   45/   E8794 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0F, $0F
(1)   45/   E8794 : =$F                 vcDL1 set $0F
(1)   45/   E8794 : =$F                 vcDL2 set $0F
(1)   45/   E8794 : =$F                 vcDL3 set $0F
(1)   45/   E8794 : =$F                 vcDL4 set $0F
(1)   46/   E8794 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   46/   E8794 : =$F                 vcRR1 set $0F
(1)   46/   E8794 : =$F                 vcRR2 set $0F
(1)   46/   E8794 : =$F                 vcRR3 set $0F
(1)   46/   E8794 : =$F                 vcRR4 set $0F
(1)   47/   E8794 : (MACRO)             	smpsVcTotalLevel    $00, $39, $28, $00
(1)   47/   E8794 : =$0                 vcTL1 set $00
(1)   47/   E8794 : =$39                vcTL2 set $39
(1)   47/   E8794 : =$28                vcTL3 set $28
(1)   47/   E8794 : =$0                 vcTL4 set $00
(1)   47/   E8794 : 3B                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   47/   E8795 :                     ;   0     1     2     3     4     5     6     7
(1)   47/   E8795 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   47/   E8795 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   47/   E8795 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   47/   E8795 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   47/   E8795 : =$80                vcTLMask1 set $80
(1)   47/   E8795 :                     
(1)   47/   E8795 :                     
(1)   47/   E8795 : 0302 0206                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   47/   E8799 : 181A 1A96                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   47/   E879D : 170E 0A10                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   47/   E87A1 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   47/   E87A5 : FFFF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   47/   E87A9 : 0028 3980                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   48/   E87AD :                     
(1)   49/   E87AD :                     Sound_Ring_Voices:
(1)   50/   E87AD :                     ;	Voice $01
(1)   51/   E87AD :                     ;	$04
(1)   52/   E87AD :                     ;	$37, $72, $77, $49, 	$1F, $1F, $1F, $1F, 	$07, $0A, $07, $0D
(1)   53/   E87AD :                     ;	$00, $0B, $00, $0B, 	$1F, $0F, $1F, $0F, 	$23, $80, $23, $80
(1)   54/   E87AD : (MACRO)             	smpsVcAlgorithm     $04
(1)   54/   E87AD : =$4                 vcAlgorithm set $04
(1)   55/   E87AD : (MACRO)             	smpsVcFeedback      $00
(1)   55/   E87AD : =$0                 vcFeedback set $00
(1)   56/   E87AD : (MACRO)             	smpsVcUnusedBits    $00
(1)   56/   E87AD : =$0                 vcUnusedBits set $00
(1)   56/   E87AD : =$0                 vcD1R1Unk set 0
(1)   56/   E87AD : =$0                 vcD1R2Unk set 0
(1)   56/   E87AD : =$0                 vcD1R3Unk set 0
(1)   56/   E87AD : =$0                 vcD1R4Unk set 0
(1)   57/   E87AD : (MACRO)             	smpsVcDetune        $04, $07, $07, $03
(1)   57/   E87AD : =$4                 vcDT1 set $04
(1)   57/   E87AD : =$7                 vcDT2 set $07
(1)   57/   E87AD : =$7                 vcDT3 set $07
(1)   57/   E87AD : =$3                 vcDT4 set $03
(1)   58/   E87AD : (MACRO)             	smpsVcCoarseFreq    $09, $07, $02, $07
(1)   58/   E87AD : =$9                 vcCF1 set $09
(1)   58/   E87AD : =$7                 vcCF2 set $07
(1)   58/   E87AD : =$2                 vcCF3 set $02
(1)   58/   E87AD : =$7                 vcCF4 set $07
(1)   59/   E87AD : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   59/   E87AD : =$0                 vcRS1 set $00
(1)   59/   E87AD : =$0                 vcRS2 set $00
(1)   59/   E87AD : =$0                 vcRS3 set $00
(1)   59/   E87AD : =$0                 vcRS4 set $00
(1)   60/   E87AD : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   60/   E87AD : =$1F                vcAR1 set $1F
(1)   60/   E87AD : =$1F                vcAR2 set $1F
(1)   60/   E87AD : =$1F                vcAR3 set $1F
(1)   60/   E87AD : =$1F                vcAR4 set $1F
(1)   61/   E87AD : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   61/   E87AD : =$0                 vcAM1 set $00<<5
(1)   61/   E87AD : =$0                 vcAM2 set $00<<5
(1)   61/   E87AD : =$0                 vcAM3 set $00<<5
(1)   61/   E87AD : =$0                 vcAM4 set $00<<5
(1)   62/   E87AD : (MACRO)             	smpsVcDecayRate1    $0D, $07, $0A, $07
(1)   62/   E87AD : =$D                 vcD1R1 set $0D
(1)   62/   E87AD : =$7                 vcD1R2 set $07
(1)   62/   E87AD : =$A                 vcD1R3 set $0A
(1)   62/   E87AD : =$7                 vcD1R4 set $07
(1)   63/   E87AD : (MACRO)             	smpsVcDecayRate2    $0B, $00, $0B, $00
(1)   63/   E87AD : =$B                 vcD2R1 set $0B
(1)   63/   E87AD : =$0                 vcD2R2 set $00
(1)   63/   E87AD : =$B                 vcD2R3 set $0B
(1)   63/   E87AD : =$0                 vcD2R4 set $00
(1)   64/   E87AD : (MACRO)             	smpsVcDecayLevel    $00, $01, $00, $01
(1)   64/   E87AD : =$0                 vcDL1 set $00
(1)   64/   E87AD : =$1                 vcDL2 set $01
(1)   64/   E87AD : =$0                 vcDL3 set $00
(1)   64/   E87AD : =$1                 vcDL4 set $01
(1)   65/   E87AD : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   65/   E87AD : =$F                 vcRR1 set $0F
(1)   65/   E87AD : =$F                 vcRR2 set $0F
(1)   65/   E87AD : =$F                 vcRR3 set $0F
(1)   65/   E87AD : =$F                 vcRR4 set $0F
(1)   66/   E87AD : (MACRO)             	smpsVcTotalLevel    $00, $23, $00, $23
(1)   66/   E87AD : =$0                 vcTL1 set $00
(1)   66/   E87AD : =$23                vcTL2 set $23
(1)   66/   E87AD : =$0                 vcTL3 set $00
(1)   66/   E87AD : =$23                vcTL4 set $23
(1)   66/   E87AD : 04                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   66/   E87AE :                     ;   0     1     2     3     4     5     6     7
(1)   66/   E87AE :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   66/   E87AE : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   66/   E87AE : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   66/   E87AE : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   66/   E87AE : =$80                vcTLMask1 set $80
(1)   66/   E87AE :                     
(1)   66/   E87AE :                     
(1)   66/   E87AE : 3772 7749                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   66/   E87B2 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   66/   E87B6 : 070A 070D                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   66/   E87BA : 000B 000B                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   66/   E87BE : 1F0F 1F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   66/   E87C2 : 2380 2380                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   67/   E87C6 :                     
(1)   68/   E87C6 :                     
  553/   E87C6 :                        Sound46:	include "sfx-improved/C6 - Ring Spill.asm"
(1)    1/   E87C6 :                     Sound46_RingSpill_Header:
(1)    2/   E87C6 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E87C6 :                     
(1)    2/   E87C6 : =$3                 SourceDriver set 3
(1)    2/   E87C6 :                     
(1)    2/   E87C6 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E87C6 :                     
(1)    2/   E87C6 : =$E87C6             songStart set *
(1)    2/   E87C6 :                     
(1)    2/   E87C6 :                     
(1)    3/   E87C6 : (MACRO)             	smpsHeaderVoice     Sound_Ring_Voices
(1)    3/   E87C6 : AD87                                dc.w    z80_ptr(SOUND_RING_VOICES)
(1)    4/   E87C8 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E87C8 : 01                          dc.b    $01
(1)    5/   E87C9 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E87C9 : 02                          dc.b    $02
(1)    6/   E87CA :                     
(1)    7/   E87CA : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound46_RingSpill_FM4,	$00, $05
(1)    7/   E87CA : 8004                        dc.b    $80,CFM4
(1)    7/   E87CC :  (MACRO-2)                  CheckedChannelPointer SOUND46_RINGSPILL_FM4
(1)    7/   E87CC : D687                                dc.w    z80_ptr(SOUND46_RINGSPILL_FM4)
(1)    7/   E87CE : 00                                  dc.b    $00
(1)    7/   E87CF : 05                          dc.b    $05
(1)    8/   E87D0 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound46_RingSpill_FM5,	$00, $08
(1)    8/   E87D0 : 8005                        dc.b    $80,CFM5
(1)    8/   E87D2 :  (MACRO-2)                  CheckedChannelPointer SOUND46_RINGSPILL_FM5
(1)    8/   E87D2 : E287                                dc.w    z80_ptr(SOUND46_RINGSPILL_FM5)
(1)    8/   E87D4 : 00                                  dc.b    $00
(1)    8/   E87D5 : 08                          dc.b    $08
(1)    9/   E87D6 :                     
(1)   10/   E87D6 :                     ; FM4 Data
(1)   11/   E87D6 :                     Sound46_RingSpill_FM4:
(1)   12/   E87D6 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E87D6 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E87D6 : EF00                                dc.b    $EF,$00
(1)   13/   E87D8 : C602 0505 0505 0505 	dc.b	nA5, $02, $05, $05, $05, $05, $05, $05, $3A
            E87E0 : 3A               
(1)   14/   E87E1 : (MACRO)             	smpsStop
(1)   14/   E87E1 : F2                          dc.b    $F2
(1)   15/   E87E2 :                     
(1)   16/   E87E2 :                     ; FM5 Data
(1)   17/   E87E2 :                     Sound46_RingSpill_FM5:
(1)   18/   E87E2 : (MACRO)             	smpsSetvoice        $00
(1)   18/   E87E2 :  (MACRO-2)                  smpsFMvoice $00
(1)   18/   E87E2 : EF00                                dc.b    $EF,$00
(1)   19/   E87E4 : 8002 C402 0515 0205 	dc.b	nRst, $02, nG5, $02, $05, $15, $02, $05, $32
            E87EC : 32               
(1)   20/   E87ED : (MACRO)             	smpsStop
(1)   20/   E87ED : F2                          dc.b    $F2
(1)   21/   E87EE :                     
  554/   E87EE :                        Sound47:	include "sfx-improved/C7 - Chain Rise (Unused).asm"
(1)    1/   E87EE :                     Sound47_Header:
(1)    2/   E87EE : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E87EE :                     
(1)    2/   E87EE : =$3                 SourceDriver set 3
(1)    2/   E87EE :                     
(1)    2/   E87EE : =$0                 SourceSMPS2ASM set 0
(1)    2/   E87EE :                     
(1)    2/   E87EE : =$E87EE             songStart set *
(1)    2/   E87EE :                     
(1)    2/   E87EE :                     
(1)    3/   E87EE : (MACRO)             	smpsHeaderVoice     Sound47_Voices
(1)    3/   E87EE : 0388                                dc.w    z80_ptr(SOUND47_VOICES)
(1)    4/   E87F0 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E87F0 : 01                          dc.b    $01
(1)    5/   E87F1 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E87F1 : 01                          dc.b    $01
(1)    6/   E87F2 :                     
(1)    7/   E87F2 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound47_FM5,	$00, $00
(1)    7/   E87F2 : 8005                        dc.b    $80,CFM5
(1)    7/   E87F4 :  (MACRO-2)                  CheckedChannelPointer SOUND47_FM5
(1)    7/   E87F4 : F887                                dc.w    z80_ptr(SOUND47_FM5)
(1)    7/   E87F6 : 00                                  dc.b    $00
(1)    7/   E87F7 : 00                          dc.b    $00
(1)    8/   E87F8 :                     
(1)    9/   E87F8 :                     ; FM5 Data
(1)   10/   E87F8 :                     Sound47_FM5:
(1)   11/   E87F8 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E87F8 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E87F8 : EF00                                dc.b    $EF,$00
(1)   12/   E87FA : BE05 8004 BE04 8004 	dc.b	nCs5, $05, nRst, $04, nCs5, $04, nRst, $04
(1)   13/   E8802 : (MACRO)             	smpsStop
(1)   13/   E8802 : F2                          dc.b    $F2
(1)   14/   E8803 :                     
(1)   15/   E8803 :                     Sound47_Voices:
(1)   16/   E8803 :                     ;	Voice $00
(1)   17/   E8803 :                     ;	$28
(1)   18/   E8803 :                     ;	$2F, $5F, $37, $2B, 	$1F, $1F, $1F, $1F, 	$15, $15, $15, $13
(1)   19/   E8803 :                     ;	$13, $0C, $0D, $10, 	$2F, $2F, $3F, $2F, 	$00, $10, $1F, $80
(1)   20/   E8803 : (MACRO)             	smpsVcAlgorithm     $00
(1)   20/   E8803 : =$0                 vcAlgorithm set $00
(1)   21/   E8803 : (MACRO)             	smpsVcFeedback      $05
(1)   21/   E8803 : =$5                 vcFeedback set $05
(1)   22/   E8803 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E8803 : =$0                 vcUnusedBits set $00
(1)   22/   E8803 : =$0                 vcD1R1Unk set 0
(1)   22/   E8803 : =$0                 vcD1R2Unk set 0
(1)   22/   E8803 : =$0                 vcD1R3Unk set 0
(1)   22/   E8803 : =$0                 vcD1R4Unk set 0
(1)   23/   E8803 : (MACRO)             	smpsVcDetune        $02, $03, $05, $02
(1)   23/   E8803 : =$2                 vcDT1 set $02
(1)   23/   E8803 : =$3                 vcDT2 set $03
(1)   23/   E8803 : =$5                 vcDT3 set $05
(1)   23/   E8803 : =$2                 vcDT4 set $02
(1)   24/   E8803 : (MACRO)             	smpsVcCoarseFreq    $0B, $07, $0F, $0F
(1)   24/   E8803 : =$B                 vcCF1 set $0B
(1)   24/   E8803 : =$7                 vcCF2 set $07
(1)   24/   E8803 : =$F                 vcCF3 set $0F
(1)   24/   E8803 : =$F                 vcCF4 set $0F
(1)   25/   E8803 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E8803 : =$0                 vcRS1 set $00
(1)   25/   E8803 : =$0                 vcRS2 set $00
(1)   25/   E8803 : =$0                 vcRS3 set $00
(1)   25/   E8803 : =$0                 vcRS4 set $00
(1)   26/   E8803 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E8803 : =$1F                vcAR1 set $1F
(1)   26/   E8803 : =$1F                vcAR2 set $1F
(1)   26/   E8803 : =$1F                vcAR3 set $1F
(1)   26/   E8803 : =$1F                vcAR4 set $1F
(1)   27/   E8803 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8803 : =$0                 vcAM1 set $00<<5
(1)   27/   E8803 : =$0                 vcAM2 set $00<<5
(1)   27/   E8803 : =$0                 vcAM3 set $00<<5
(1)   27/   E8803 : =$0                 vcAM4 set $00<<5
(1)   28/   E8803 : (MACRO)             	smpsVcDecayRate1    $13, $15, $15, $15
(1)   28/   E8803 : =$13                vcD1R1 set $13
(1)   28/   E8803 : =$15                vcD1R2 set $15
(1)   28/   E8803 : =$15                vcD1R3 set $15
(1)   28/   E8803 : =$15                vcD1R4 set $15
(1)   29/   E8803 : (MACRO)             	smpsVcDecayRate2    $10, $0D, $0C, $13
(1)   29/   E8803 : =$10                vcD2R1 set $10
(1)   29/   E8803 : =$D                 vcD2R2 set $0D
(1)   29/   E8803 : =$C                 vcD2R3 set $0C
(1)   29/   E8803 : =$13                vcD2R4 set $13
(1)   30/   E8803 : (MACRO)             	smpsVcDecayLevel    $02, $03, $02, $02
(1)   30/   E8803 : =$2                 vcDL1 set $02
(1)   30/   E8803 : =$3                 vcDL2 set $03
(1)   30/   E8803 : =$2                 vcDL3 set $02
(1)   30/   E8803 : =$2                 vcDL4 set $02
(1)   31/   E8803 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E8803 : =$F                 vcRR1 set $0F
(1)   31/   E8803 : =$F                 vcRR2 set $0F
(1)   31/   E8803 : =$F                 vcRR3 set $0F
(1)   31/   E8803 : =$F                 vcRR4 set $0F
(1)   32/   E8803 : (MACRO)             	smpsVcTotalLevel    $00, $1F, $10, $00
(1)   32/   E8803 : =$0                 vcTL1 set $00
(1)   32/   E8803 : =$1F                vcTL2 set $1F
(1)   32/   E8803 : =$10                vcTL3 set $10
(1)   32/   E8803 : =$0                 vcTL4 set $00
(1)   32/   E8803 : 28                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8804 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8804 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8804 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E8804 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E8804 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E8804 : =$80                vcTLMask1 set $80
(1)   32/   E8804 :                     
(1)   32/   E8804 :                     
(1)   32/   E8804 : 2F5F 372B                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8808 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E880C : 1515 1513                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8810 : 130C 0D10                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8814 : 2F2F 3F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8818 : 0010 1F80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E881C :                     
(1)   34/   E881C :                     
  555/   E881C :                        Sound48:	include "sfx-improved/C8 - Flamethrower.asm"
(1)    1/   E881C :                     Sound48_Flamethrower_Header:
(1)    2/   E881C : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E881C :                     
(1)    2/   E881C : =$3                 SourceDriver set 3
(1)    2/   E881C :                     
(1)    2/   E881C : =$0                 SourceSMPS2ASM set 0
(1)    2/   E881C :                     
(1)    2/   E881C : =$E881C             songStart set *
(1)    2/   E881C :                     
(1)    2/   E881C :                     
(1)    3/   E881C : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E881C : 0000                        dc.w    $0000
(1)    4/   E881E : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E881E : 01                          dc.b    $01
(1)    5/   E881F : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E881F : 01                          dc.b    $01
(1)    6/   E8820 :                     
(1)    7/   E8820 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound48_Flamethrower_PSG3,	$00, $00
(1)    7/   E8820 : 80C0                        dc.b    $80,CPSG3
(1)    7/   E8822 :  (MACRO-2)                  CheckedChannelPointer SOUND48_FLAMETHROWER_PSG3
(1)    7/   E8822 : 2688                                dc.w    z80_ptr(SOUND48_FLAMETHROWER_PSG3)
(1)    7/   E8824 :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E8824 : 00                                  dc.b    $00
(1)    7/   E8825 : 00                          dc.b    $00
(1)    8/   E8826 :                     
(1)    9/   E8826 :                     ; PSG3 Data
(1)   10/   E8826 :                     Sound48_Flamethrower_PSG3:
(1)   11/   E8826 : (MACRO)             	smpsPSGvoice        $00
(1)   11/   E8826 : F500                        dc.b    $F5,$00
(1)   12/   E8828 : (MACRO)             	smpsPSGform         $E7
(1)   12/   E8828 : F3E7                        dc.b    $F3,$E7
(1)   13/   E882A : A725                	dc.b	nD3, $25
(1)   14/   E882C : (MACRO)             	smpsStop
(1)   14/   E882C : F2                          dc.b    $F2
(1)   15/   E882D :                     
  556/   E882D :                        Sound49:	include "sfx-improved/C9 - Hidden Bonus (Unused).asm"
(1)    1/   E882D :                     Sound49_Bonus_Header:
(1)    2/   E882D : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E882D :                     
(1)    2/   E882D : =$3                 SourceDriver set 3
(1)    2/   E882D :                     
(1)    2/   E882D : =$0                 SourceSMPS2ASM set 0
(1)    2/   E882D :                     
(1)    2/   E882D : =$E882D             songStart set *
(1)    2/   E882D :                     
(1)    2/   E882D :                     
(1)    3/   E882D : (MACRO)             	smpsHeaderVoice     Sound49_Bonus_Voices
(1)    3/   E882D : 4188                                dc.w    z80_ptr(SOUND49_BONUS_VOICES)
(1)    4/   E882F : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E882F : 01                          dc.b    $01
(1)    5/   E8830 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8830 : 01                          dc.b    $01
(1)    6/   E8831 :                     
(1)    7/   E8831 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound49_Bonus_FM5,	$0E, $00
(1)    7/   E8831 : 8005                        dc.b    $80,CFM5
(1)    7/   E8833 :  (MACRO-2)                  CheckedChannelPointer SOUND49_BONUS_FM5
(1)    7/   E8833 : 3788                                dc.w    z80_ptr(SOUND49_BONUS_FM5)
(1)    7/   E8835 : 0E                                  dc.b    $0E
(1)    7/   E8836 : 00                          dc.b    $00
(1)    8/   E8837 :                     
(1)    9/   E8837 :                     ; FM5 Data
(1)   10/   E8837 :                     Sound49_Bonus_FM5:
(1)   11/   E8837 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8837 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8837 : EF00                                dc.b    $EF,$00
(1)   12/   E8839 : (MACRO)             	smpsModSet          $01, $01, $33, $18
(1)   12/   E8839 : F0                          dc.b    $F0
(1)   12/   E883A : 0101 3318                           dc.b    $01,$01,$33,$18
(1)   12/   E883E :                             ;dc.b   $01,$33,$18
(1)   13/   E883E : B91A                	dc.b	nAb4, $1A
(1)   14/   E8840 : (MACRO)             	smpsStop
(1)   14/   E8840 : F2                          dc.b    $F2
(1)   15/   E8841 :                     
(1)   16/   E8841 :                     Sound49_Bonus_Voices:
(1)   17/   E8841 :                     ;	Voice $00
(1)   18/   E8841 :                     ;	$3B
(1)   19/   E8841 :                     ;	$0A, $31, $05, $02, 	$5F, $5F, $5F, $5F, 	$04, $14, $16, $0C
(1)   20/   E8841 :                     ;	$00, $04, $00, $00, 	$1F, $6F, $D8, $FF, 	$03, $25, $00, $80
(1)   21/   E8841 : (MACRO)             	smpsVcAlgorithm     $03
(1)   21/   E8841 : =$3                 vcAlgorithm set $03
(1)   22/   E8841 : (MACRO)             	smpsVcFeedback      $07
(1)   22/   E8841 : =$7                 vcFeedback set $07
(1)   23/   E8841 : (MACRO)             	smpsVcUnusedBits    $00
(1)   23/   E8841 : =$0                 vcUnusedBits set $00
(1)   23/   E8841 : =$0                 vcD1R1Unk set 0
(1)   23/   E8841 : =$0                 vcD1R2Unk set 0
(1)   23/   E8841 : =$0                 vcD1R3Unk set 0
(1)   23/   E8841 : =$0                 vcD1R4Unk set 0
(1)   24/   E8841 : (MACRO)             	smpsVcDetune        $00, $00, $03, $00
(1)   24/   E8841 : =$0                 vcDT1 set $00
(1)   24/   E8841 : =$0                 vcDT2 set $00
(1)   24/   E8841 : =$3                 vcDT3 set $03
(1)   24/   E8841 : =$0                 vcDT4 set $00
(1)   25/   E8841 : (MACRO)             	smpsVcCoarseFreq    $02, $05, $01, $0A
(1)   25/   E8841 : =$2                 vcCF1 set $02
(1)   25/   E8841 : =$5                 vcCF2 set $05
(1)   25/   E8841 : =$1                 vcCF3 set $01
(1)   25/   E8841 : =$A                 vcCF4 set $0A
(1)   26/   E8841 : (MACRO)             	smpsVcRateScale     $01, $01, $01, $01
(1)   26/   E8841 : =$1                 vcRS1 set $01
(1)   26/   E8841 : =$1                 vcRS2 set $01
(1)   26/   E8841 : =$1                 vcRS3 set $01
(1)   26/   E8841 : =$1                 vcRS4 set $01
(1)   27/   E8841 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   27/   E8841 : =$1F                vcAR1 set $1F
(1)   27/   E8841 : =$1F                vcAR2 set $1F
(1)   27/   E8841 : =$1F                vcAR3 set $1F
(1)   27/   E8841 : =$1F                vcAR4 set $1F
(1)   28/   E8841 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   28/   E8841 : =$0                 vcAM1 set $00<<5
(1)   28/   E8841 : =$0                 vcAM2 set $00<<5
(1)   28/   E8841 : =$0                 vcAM3 set $00<<5
(1)   28/   E8841 : =$0                 vcAM4 set $00<<5
(1)   29/   E8841 : (MACRO)             	smpsVcDecayRate1    $0C, $16, $14, $04
(1)   29/   E8841 : =$C                 vcD1R1 set $0C
(1)   29/   E8841 : =$16                vcD1R2 set $16
(1)   29/   E8841 : =$14                vcD1R3 set $14
(1)   29/   E8841 : =$4                 vcD1R4 set $04
(1)   30/   E8841 : (MACRO)             	smpsVcDecayRate2    $00, $00, $04, $00
(1)   30/   E8841 : =$0                 vcD2R1 set $00
(1)   30/   E8841 : =$0                 vcD2R2 set $00
(1)   30/   E8841 : =$4                 vcD2R3 set $04
(1)   30/   E8841 : =$0                 vcD2R4 set $00
(1)   31/   E8841 : (MACRO)             	smpsVcDecayLevel    $0F, $0D, $06, $01
(1)   31/   E8841 : =$F                 vcDL1 set $0F
(1)   31/   E8841 : =$D                 vcDL2 set $0D
(1)   31/   E8841 : =$6                 vcDL3 set $06
(1)   31/   E8841 : =$1                 vcDL4 set $01
(1)   32/   E8841 : (MACRO)             	smpsVcReleaseRate   $0F, $08, $0F, $0F
(1)   32/   E8841 : =$F                 vcRR1 set $0F
(1)   32/   E8841 : =$8                 vcRR2 set $08
(1)   32/   E8841 : =$F                 vcRR3 set $0F
(1)   32/   E8841 : =$F                 vcRR4 set $0F
(1)   33/   E8841 : (MACRO)             	smpsVcTotalLevel    $00, $00, $25, $03
(1)   33/   E8841 : =$0                 vcTL1 set $00
(1)   33/   E8841 : =$0                 vcTL2 set $00
(1)   33/   E8841 : =$25                vcTL3 set $25
(1)   33/   E8841 : =$3                 vcTL4 set $03
(1)   33/   E8841 : 3B                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   33/   E8842 :                     ;   0     1     2     3     4     5     6     7
(1)   33/   E8842 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   33/   E8842 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   33/   E8842 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   33/   E8842 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   33/   E8842 : =$80                vcTLMask1 set $80
(1)   33/   E8842 :                     
(1)   33/   E8842 :                     
(1)   33/   E8842 : 0A31 0502                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   33/   E8846 : 5F5F 5F5F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   33/   E884A : 0414 160C                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   33/   E884E : 0004 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   33/   E8852 : 1F6F D8FF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   33/   E8856 : 0325 0080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   34/   E885A :                     
(1)   35/   E885A :                     
  557/   E885A :                        Sound4A:	include "sfx-improved/CA - Special Stage Entry.asm"
(1)    1/   E885A :                     Sound4A_SpecStageEntry_Header:
(1)    2/   E885A : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E885A :                     
(1)    2/   E885A : =$3                 SourceDriver set 3
(1)    2/   E885A :                     
(1)    2/   E885A : =$0                 SourceSMPS2ASM set 0
(1)    2/   E885A :                     
(1)    2/   E885A : =$E885A             songStart set *
(1)    2/   E885A :                     
(1)    2/   E885A :                     
(1)    3/   E885A : (MACRO)             	smpsHeaderVoice     Sound4A_SpecStageEntry_Voices
(1)    3/   E885A : 6E88                                dc.w    z80_ptr(SOUND4A_SPECSTAGEENTRY_VOICES)
(1)    4/   E885C : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E885C : 01                          dc.b    $01
(1)    5/   E885D : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E885D : 01                          dc.b    $01
(1)    6/   E885E :                     
(1)    7/   E885E : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound4A_SpecStageEntry_FM5,	$00, $02
(1)    7/   E885E : 8005                        dc.b    $80,CFM5
(1)    7/   E8860 :  (MACRO-2)                  CheckedChannelPointer SOUND4A_SPECSTAGEENTRY_FM5
(1)    7/   E8860 : 6488                                dc.w    z80_ptr(SOUND4A_SPECSTAGEENTRY_FM5)
(1)    7/   E8862 : 00                                  dc.b    $00
(1)    7/   E8863 : 02                          dc.b    $02
(1)    8/   E8864 :                     
(1)    9/   E8864 :                     ; FM5 Data
(1)   10/   E8864 :                     Sound4A_SpecStageEntry_FM5:
(1)   11/   E8864 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8864 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8864 : EF00                                dc.b    $EF,$00
(1)   12/   E8866 : (MACRO)             	smpsModSet          $01, $01, $5B, $02
(1)   12/   E8866 : F0                          dc.b    $F0
(1)   12/   E8867 : 0101 5B02                           dc.b    $01,$01,$5B,$02
(1)   12/   E886B :                             ;dc.b   $01,$5B,$02
(1)   13/   E886B : CC65                	dc.b	nEb6, $65
(1)   14/   E886D : (MACRO)             	smpsStop
(1)   14/   E886D : F2                          dc.b    $F2
(1)   15/   E886E :                     
(1)   16/   E886E :                     Sound4A_SpecStageEntry_Voices:
(1)   17/   E886E :                     ;	Voice $00
(1)   18/   E886E :                     ;	$20
(1)   19/   E886E :                     ;	$36, $35, $30, $31, 	$41, $49, $3B, $4B, 	$09, $06, $09, $08
(1)   20/   E886E :                     ;	$01, $03, $02, $A9, 	$0F, $0F, $0F, $0F, 	$29, $27, $23, $80
(1)   21/   E886E : (MACRO)             	smpsVcAlgorithm     $00
(1)   21/   E886E : =$0                 vcAlgorithm set $00
(1)   22/   E886E : (MACRO)             	smpsVcFeedback      $04
(1)   22/   E886E : =$4                 vcFeedback set $04
(1)   23/   E886E : (MACRO)             	smpsVcUnusedBits    $00
(1)   23/   E886E : =$0                 vcUnusedBits set $00
(1)   23/   E886E : =$0                 vcD1R1Unk set 0
(1)   23/   E886E : =$0                 vcD1R2Unk set 0
(1)   23/   E886E : =$0                 vcD1R3Unk set 0
(1)   23/   E886E : =$0                 vcD1R4Unk set 0
(1)   24/   E886E : (MACRO)             	smpsVcDetune        $03, $03, $03, $03
(1)   24/   E886E : =$3                 vcDT1 set $03
(1)   24/   E886E : =$3                 vcDT2 set $03
(1)   24/   E886E : =$3                 vcDT3 set $03
(1)   24/   E886E : =$3                 vcDT4 set $03
(1)   25/   E886E : (MACRO)             	smpsVcCoarseFreq    $01, $00, $05, $06
(1)   25/   E886E : =$1                 vcCF1 set $01
(1)   25/   E886E : =$0                 vcCF2 set $00
(1)   25/   E886E : =$5                 vcCF3 set $05
(1)   25/   E886E : =$6                 vcCF4 set $06
(1)   26/   E886E : (MACRO)             	smpsVcRateScale     $01, $00, $01, $01
(1)   26/   E886E : =$1                 vcRS1 set $01
(1)   26/   E886E : =$0                 vcRS2 set $00
(1)   26/   E886E : =$1                 vcRS3 set $01
(1)   26/   E886E : =$1                 vcRS4 set $01
(1)   27/   E886E : (MACRO)             	smpsVcAttackRate    $0B, $3B, $09, $01
(1)   27/   E886E : =$B                 vcAR1 set $0B
(1)   27/   E886E : =$3B                vcAR2 set $3B
(1)   27/   E886E : =$9                 vcAR3 set $09
(1)   27/   E886E : =$1                 vcAR4 set $01
(1)   28/   E886E : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   28/   E886E : =$0                 vcAM1 set $00<<5
(1)   28/   E886E : =$0                 vcAM2 set $00<<5
(1)   28/   E886E : =$0                 vcAM3 set $00<<5
(1)   28/   E886E : =$0                 vcAM4 set $00<<5
(1)   29/   E886E : (MACRO)             	smpsVcDecayRate1    $08, $09, $06, $09
(1)   29/   E886E : =$8                 vcD1R1 set $08
(1)   29/   E886E : =$9                 vcD1R2 set $09
(1)   29/   E886E : =$6                 vcD1R3 set $06
(1)   29/   E886E : =$9                 vcD1R4 set $09
(1)   30/   E886E : (MACRO)             	smpsVcDecayRate2    $A9, $02, $03, $01
(1)   30/   E886E : =$A9                vcD2R1 set $A9
(1)   30/   E886E : =$2                 vcD2R2 set $02
(1)   30/   E886E : =$3                 vcD2R3 set $03
(1)   30/   E886E : =$1                 vcD2R4 set $01
(1)   31/   E886E : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   31/   E886E : =$0                 vcDL1 set $00
(1)   31/   E886E : =$0                 vcDL2 set $00
(1)   31/   E886E : =$0                 vcDL3 set $00
(1)   31/   E886E : =$0                 vcDL4 set $00
(1)   32/   E886E : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   32/   E886E : =$F                 vcRR1 set $0F
(1)   32/   E886E : =$F                 vcRR2 set $0F
(1)   32/   E886E : =$F                 vcRR3 set $0F
(1)   32/   E886E : =$F                 vcRR4 set $0F
(1)   33/   E886E : (MACRO)             	smpsVcTotalLevel    $00, $23, $27, $29
(1)   33/   E886E : =$0                 vcTL1 set $00
(1)   33/   E886E : =$23                vcTL2 set $23
(1)   33/   E886E : =$27                vcTL3 set $27
(1)   33/   E886E : =$29                vcTL4 set $29
(1)   33/   E886E : 20                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   33/   E886F :                     ;   0     1     2     3     4     5     6     7
(1)   33/   E886F :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   33/   E886F : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   33/   E886F : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   33/   E886F : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   33/   E886F : =$80                vcTLMask1 set $80
(1)   33/   E886F :                     
(1)   33/   E886F :                     
(1)   33/   E886F : 3635 3031                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   33/   E8873 : 4149 3B4B                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   33/   E8877 : 0906 0908                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   33/   E887B : 0103 02A9                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   33/   E887F : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   33/   E8883 : 2927 2380                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   34/   E8887 :                     
(1)   35/   E8887 :                     
  558/   E8887 :                        Sound4B:	include "sfx-improved/CB - Slow Smash.asm"
(1)    1/   E8887 :                     Sound4B_SlowSmash_Header:
(1)    2/   E8887 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8887 :                     
(1)    2/   E8887 : =$3                 SourceDriver set 3
(1)    2/   E8887 :                     
(1)    2/   E8887 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8887 :                     
(1)    2/   E8887 : =$E8887             songStart set *
(1)    2/   E8887 :                     
(1)    2/   E8887 :                     
(1)    3/   E8887 : (MACRO)             	smpsHeaderVoice     Sound2C_39_4B_Voices
(1)    3/   E8887 : F481                                dc.w    z80_ptr(SOUND2C_39_4B_VOICES)
(1)    4/   E8889 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8889 : 01                          dc.b    $01
(1)    5/   E888A : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E888A : 02                          dc.b    $02
(1)    6/   E888B :                     
(1)    7/   E888B : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound4B_SlowSmash_FM5,	$00, $00
(1)    7/   E888B : 8005                        dc.b    $80,CFM5
(1)    7/   E888D :  (MACRO-2)                  CheckedChannelPointer SOUND4B_SLOWSMASH_FM5
(1)    7/   E888D : 9788                                dc.w    z80_ptr(SOUND4B_SLOWSMASH_FM5)
(1)    7/   E888F : 00                                  dc.b    $00
(1)    7/   E8890 : 00                          dc.b    $00
(1)    8/   E8891 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound4B_SlowSmash_PSG3,	$00, $00
(1)    8/   E8891 : 80C0                        dc.b    $80,CPSG3
(1)    8/   E8893 :  (MACRO-2)                  CheckedChannelPointer SOUND4B_SLOWSMASH_PSG3
(1)    8/   E8893 : A888                                dc.w    z80_ptr(SOUND4B_SLOWSMASH_PSG3)
(1)    8/   E8895 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8895 : 00                                  dc.b    $00
(1)    8/   E8896 : 00                          dc.b    $00
(1)    9/   E8897 :                     
(1)   10/   E8897 :                     ; FM5 Data
(1)   11/   E8897 :                     Sound4B_SlowSmash_FM5:
(1)   12/   E8897 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8897 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8897 : EF00                                dc.b    $EF,$00
(1)   13/   E8899 : (MACRO)             	smpsModSet          $03, $01, $20, $04
(1)   13/   E8899 : F0                          dc.b    $F0
(1)   13/   E889A : 0301 2004                           dc.b    $03,$01,$20,$04
(1)   13/   E889E :                             ;dc.b   $01,$20,$04
(1)   14/   E889E :                     
(1)   15/   E889E :                     Sound4B_SlowSmash_Loop00:
(1)   16/   E889E : 8118                	dc.b	nC0, $18
(1)   17/   E88A0 : (MACRO)             	smpsAlterVol        $0A
(1)   17/   E88A0 : E60A                        dc.b    $E6,$0A
(1)   18/   E88A2 : (MACRO)             	smpsLoop            $00, $06, Sound4B_SlowSmash_Loop00
(1)   18/   E88A2 : F7                          dc.b    $F7
(1)   18/   E88A3 : 0006                        dc.b    $00,$06
(1)   18/   E88A5 : 9E88                                dc.w    z80_ptr(SOUND4B_SLOWSMASH_LOOP00)
(1)   19/   E88A7 : (MACRO)             	smpsStop
(1)   19/   E88A7 : F2                          dc.b    $F2
(1)   20/   E88A8 :                     
(1)   21/   E88A8 :                     ; PSG3 Data
(1)   22/   E88A8 :                     Sound4B_SlowSmash_PSG3:
(1)   23/   E88A8 : (MACRO)             	smpsModSet          $01, $01, $0F, $05
(1)   23/   E88A8 : F0                          dc.b    $F0
(1)   23/   E88A9 : 0101 0F05                           dc.b    $01,$01,$0F,$05
(1)   23/   E88AD :                             ;dc.b   $01,$0F,$05
(1)   24/   E88AD : (MACRO)             	smpsPSGform         $E7
(1)   24/   E88AD : F3E7                        dc.b    $F3,$E7
(1)   25/   E88AF :                     
(1)   26/   E88AF :                     Sound4B_SlowSmash_Loop01:
(1)   27/   E88AF : B018 E7             	dc.b	nB3, $18, smpsNoAttack
(1)   28/   E88B2 : (MACRO)             	smpsPSGAlterVol     $03
(1)   28/   E88B2 : EC03                        dc.b    $EC,$03
(1)   29/   E88B4 : (MACRO)             	smpsLoop            $00, $05, Sound4B_SlowSmash_Loop01
(1)   29/   E88B4 : F7                          dc.b    $F7
(1)   29/   E88B5 : 0005                        dc.b    $00,$05
(1)   29/   E88B7 : AF88                                dc.w    z80_ptr(SOUND4B_SLOWSMASH_LOOP01)
(1)   30/   E88B9 : (MACRO)             	smpsStop
(1)   30/   E88B9 : F2                          dc.b    $F2
(1)   31/   E88BA :                     
  559/   E88BA :                        Sound4C:	include "sfx-improved/CC - Spring.asm"
(1)    1/   E88BA :                     Sound4C_Spring_Header:
(1)    2/   E88BA : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E88BA :                     
(1)    2/   E88BA : =$3                 SourceDriver set 3
(1)    2/   E88BA :                     
(1)    2/   E88BA : =$0                 SourceSMPS2ASM set 0
(1)    2/   E88BA :                     
(1)    2/   E88BA : =$E88BA             songStart set *
(1)    2/   E88BA :                     
(1)    2/   E88BA :                     
(1)    3/   E88BA : (MACRO)             	smpsHeaderVoice     Sound4C_Spring_Voices
(1)    3/   E88BA : DB88                                dc.w    z80_ptr(SOUND4C_SPRING_VOICES)
(1)    4/   E88BC : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E88BC : 01                          dc.b    $01
(1)    5/   E88BD : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E88BD : 01                          dc.b    $01
(1)    6/   E88BE :                     
(1)    7/   E88BE : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound4C_Spring_FM4,	$00, $02
(1)    7/   E88BE : 8004                        dc.b    $80,CFM4
(1)    7/   E88C0 :  (MACRO-2)                  CheckedChannelPointer SOUND4C_SPRING_FM4
(1)    7/   E88C0 : C488                                dc.w    z80_ptr(SOUND4C_SPRING_FM4)
(1)    7/   E88C2 : 00                                  dc.b    $00
(1)    7/   E88C3 : 02                          dc.b    $02
(1)    8/   E88C4 :                     
(1)    9/   E88C4 :                     ; FM4 Data
(1)   10/   E88C4 :                     Sound4C_Spring_FM4:
(1)   11/   E88C4 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E88C4 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E88C4 : EF00                                dc.b    $EF,$00
(1)   12/   E88C6 : 8001                	dc.b	nRst, $01
(1)   13/   E88C8 : (MACRO)             	smpsModSet          $03, $01, $5D, $0F
(1)   13/   E88C8 : F0                          dc.b    $F0
(1)   13/   E88C9 : 0301 5D0F                           dc.b    $03,$01,$5D,$0F
(1)   13/   E88CD :                             ;dc.b   $01,$5D,$0F
(1)   14/   E88CD : B00C                	dc.b	nB3, $0C
(1)   15/   E88CF : (MACRO)             	smpsModOff
(1)   15/   E88CF : FA                                  dc.b    $FA
(1)   16/   E88D0 :                     
(1)   17/   E88D0 :                     Sound4C_Spring_Loop00:
(1)   18/   E88D0 : E7                  	dc.b	smpsNoAttack
(1)   19/   E88D1 : (MACRO)             	smpsAlterVol        $02
(1)   19/   E88D1 : E602                        dc.b    $E6,$02
(1)   20/   E88D3 : BD02                	dc.b	nC5, $02
(1)   21/   E88D5 : (MACRO)             	smpsLoop            $00, $19, Sound4C_Spring_Loop00
(1)   21/   E88D5 : F7                          dc.b    $F7
(1)   21/   E88D6 : 0019                        dc.b    $00,$19
(1)   21/   E88D8 : D088                                dc.w    z80_ptr(SOUND4C_SPRING_LOOP00)
(1)   22/   E88DA : (MACRO)             	smpsStop
(1)   22/   E88DA : F2                          dc.b    $F2
(1)   23/   E88DB :                     
(1)   24/   E88DB :                     Sound4C_Spring_Voices:
(1)   25/   E88DB :                     ;	Voice $00
(1)   26/   E88DB :                     ;	$20
(1)   27/   E88DB :                     ;	$36, $35, $30, $31, 	$DF, $DF, $9F, $9F, 	$07, $06, $09, $06
(1)   28/   E88DB :                     ;	$07, $06, $06, $08, 	$2F, $1F, $1F, $FF, 	$16, $30, $13, $80
(1)   29/   E88DB : (MACRO)             	smpsVcAlgorithm     $00
(1)   29/   E88DB : =$0                 vcAlgorithm set $00
(1)   30/   E88DB : (MACRO)             	smpsVcFeedback      $04
(1)   30/   E88DB : =$4                 vcFeedback set $04
(1)   31/   E88DB : (MACRO)             	smpsVcUnusedBits    $00
(1)   31/   E88DB : =$0                 vcUnusedBits set $00
(1)   31/   E88DB : =$0                 vcD1R1Unk set 0
(1)   31/   E88DB : =$0                 vcD1R2Unk set 0
(1)   31/   E88DB : =$0                 vcD1R3Unk set 0
(1)   31/   E88DB : =$0                 vcD1R4Unk set 0
(1)   32/   E88DB : (MACRO)             	smpsVcDetune        $03, $03, $03, $03
(1)   32/   E88DB : =$3                 vcDT1 set $03
(1)   32/   E88DB : =$3                 vcDT2 set $03
(1)   32/   E88DB : =$3                 vcDT3 set $03
(1)   32/   E88DB : =$3                 vcDT4 set $03
(1)   33/   E88DB : (MACRO)             	smpsVcCoarseFreq    $01, $00, $05, $06
(1)   33/   E88DB : =$1                 vcCF1 set $01
(1)   33/   E88DB : =$0                 vcCF2 set $00
(1)   33/   E88DB : =$5                 vcCF3 set $05
(1)   33/   E88DB : =$6                 vcCF4 set $06
(1)   34/   E88DB : (MACRO)             	smpsVcRateScale     $02, $02, $03, $03
(1)   34/   E88DB : =$2                 vcRS1 set $02
(1)   34/   E88DB : =$2                 vcRS2 set $02
(1)   34/   E88DB : =$3                 vcRS3 set $03
(1)   34/   E88DB : =$3                 vcRS4 set $03
(1)   35/   E88DB : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   35/   E88DB : =$1F                vcAR1 set $1F
(1)   35/   E88DB : =$1F                vcAR2 set $1F
(1)   35/   E88DB : =$1F                vcAR3 set $1F
(1)   35/   E88DB : =$1F                vcAR4 set $1F
(1)   36/   E88DB : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E88DB : =$0                 vcAM1 set $00<<5
(1)   36/   E88DB : =$0                 vcAM2 set $00<<5
(1)   36/   E88DB : =$0                 vcAM3 set $00<<5
(1)   36/   E88DB : =$0                 vcAM4 set $00<<5
(1)   37/   E88DB : (MACRO)             	smpsVcDecayRate1    $06, $09, $06, $07
(1)   37/   E88DB : =$6                 vcD1R1 set $06
(1)   37/   E88DB : =$9                 vcD1R2 set $09
(1)   37/   E88DB : =$6                 vcD1R3 set $06
(1)   37/   E88DB : =$7                 vcD1R4 set $07
(1)   38/   E88DB : (MACRO)             	smpsVcDecayRate2    $08, $06, $06, $07
(1)   38/   E88DB : =$8                 vcD2R1 set $08
(1)   38/   E88DB : =$6                 vcD2R2 set $06
(1)   38/   E88DB : =$6                 vcD2R3 set $06
(1)   38/   E88DB : =$7                 vcD2R4 set $07
(1)   39/   E88DB : (MACRO)             	smpsVcDecayLevel    $0F, $01, $01, $02
(1)   39/   E88DB : =$F                 vcDL1 set $0F
(1)   39/   E88DB : =$1                 vcDL2 set $01
(1)   39/   E88DB : =$1                 vcDL3 set $01
(1)   39/   E88DB : =$2                 vcDL4 set $02
(1)   40/   E88DB : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E88DB : =$F                 vcRR1 set $0F
(1)   40/   E88DB : =$F                 vcRR2 set $0F
(1)   40/   E88DB : =$F                 vcRR3 set $0F
(1)   40/   E88DB : =$F                 vcRR4 set $0F
(1)   41/   E88DB : (MACRO)             	smpsVcTotalLevel    $00, $13, $30, $16
(1)   41/   E88DB : =$0                 vcTL1 set $00
(1)   41/   E88DB : =$13                vcTL2 set $13
(1)   41/   E88DB : =$30                vcTL3 set $30
(1)   41/   E88DB : =$16                vcTL4 set $16
(1)   41/   E88DB : 20                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E88DC :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E88DC :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E88DC : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   41/   E88DC : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   41/   E88DC : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   41/   E88DC : =$80                vcTLMask1 set $80
(1)   41/   E88DC :                     
(1)   41/   E88DC :                     
(1)   41/   E88DC : 3635 3031                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E88E0 : DFDF 9F9F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E88E4 : 0706 0906                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E88E8 : 0706 0608                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E88EC : 2F1F 1FFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E88F0 : 1630 1380                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E88F4 :                     
(1)   43/   E88F4 :                     
  560/   E88F4 :                        Sound4D:	include "sfx-improved/CD - Switch.asm"
(1)    1/   E88F4 :                     Sound4D_Blip_Header:
(1)    2/   E88F4 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E88F4 :                     
(1)    2/   E88F4 : =$3                 SourceDriver set 3
(1)    2/   E88F4 :                     
(1)    2/   E88F4 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E88F4 :                     
(1)    2/   E88F4 : =$E88F4             songStart set *
(1)    2/   E88F4 :                     
(1)    2/   E88F4 :                     
(1)    3/   E88F4 : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E88F4 : 0000                        dc.w    $0000
(1)    4/   E88F6 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E88F6 : 01                          dc.b    $01
(1)    5/   E88F7 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E88F7 : 01                          dc.b    $01
(1)    6/   E88F8 :                     
(1)    7/   E88F8 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound4D_Blip_PSG3,	$00, $00
(1)    7/   E88F8 : 80C0                        dc.b    $80,CPSG3
(1)    7/   E88FA :  (MACRO-2)                  CheckedChannelPointer SOUND4D_BLIP_PSG3
(1)    7/   E88FA : FE88                                dc.w    z80_ptr(SOUND4D_BLIP_PSG3)
(1)    7/   E88FC :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E88FC : 00                                  dc.b    $00
(1)    7/   E88FD : 00                          dc.b    $00
(1)    8/   E88FE :                     
(1)    9/   E88FE :                     ; PSG3 Data
(1)   10/   E88FE :                     Sound4D_Blip_PSG3:
(1)   11/   E88FE : BB02                	dc.b	nBb4, $02
(1)   12/   E8900 : (MACRO)             	smpsStop
(1)   12/   E8900 : F2                          dc.b    $F2
(1)   13/   E8901 :                     
  561/   E8901 :                        Sound4E:	include "sfx-improved/CE - Ring Left Speaker.asm"
(1)    1/   E8901 :                     Sound4E_RingLeft_Header:
(1)    2/   E8901 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8901 :                     
(1)    2/   E8901 : =$3                 SourceDriver set 3
(1)    2/   E8901 :                     
(1)    2/   E8901 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8901 :                     
(1)    2/   E8901 : =$E8901             songStart set *
(1)    2/   E8901 :                     
(1)    2/   E8901 :                     
(1)    3/   E8901 : (MACRO)             	smpsHeaderVoice     Sound_Ring_Voices
(1)    3/   E8901 : AD87                                dc.w    z80_ptr(SOUND_RING_VOICES)
(1)    4/   E8903 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8903 : 01                          dc.b    $01
(1)    5/   E8904 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8904 : 01                          dc.b    $01
(1)    6/   E8905 :                     
(1)    7/   E8905 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound4E_RingLeft_FM4,	$00, $05
(1)    7/   E8905 : 8004                        dc.b    $80,CFM4
(1)    7/   E8907 :  (MACRO-2)                  CheckedChannelPointer SOUND4E_RINGLEFT_FM4
(1)    7/   E8907 : 0B89                                dc.w    z80_ptr(SOUND4E_RINGLEFT_FM4)
(1)    7/   E8909 : 00                                  dc.b    $00
(1)    7/   E890A : 05                          dc.b    $05
(1)    8/   E890B :                     
(1)    9/   E890B :                     ; FM4 Data
(1)   10/   E890B :                     Sound4E_RingLeft_FM4:
(1)   11/   E890B : (MACRO)             	smpsSetvoice        $00
(1)   11/   E890B :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E890B : EF00                                dc.b    $EF,$00
(1)   12/   E890D : (MACRO)             	smpsPan             panLeft, $00
(1)   12/   E890D : =$0                 panNone set $00
(1)   12/   E890D : =$40                panRight set $40
(1)   12/   E890D : =$80                panLeft set $80
(1)   12/   E890D : =$C0                panCentre set $C0
(1)   12/   E890D : =$C0                panCenter set $C0 ; silly Americans :U
(1)   12/   E890D : E080                        dc.b $E0,PANLEFT+$00
(1)   13/   E890F : C104 C405 C91B      	dc.b	nE5, $04, nG5, $05, nC6, $1B
(1)   14/   E8915 : (MACRO)             	smpsStop
(1)   14/   E8915 : F2                          dc.b    $F2
(1)   15/   E8916 :                     
  562/   E8916 :                        Sound4F:	include "sfx-improved/CF - Signpost.asm"
(1)    1/   E8916 :                     Sound4F_Signpost_Header:
(1)    2/   E8916 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8916 :                     
(1)    2/   E8916 : =$3                 SourceDriver set 3
(1)    2/   E8916 :                     
(1)    2/   E8916 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8916 :                     
(1)    2/   E8916 : =$E8916             songStart set *
(1)    2/   E8916 :                     
(1)    2/   E8916 :                     
(1)    3/   E8916 : (MACRO)             	smpsHeaderVoice     Sound4F_Signpost_Voices
(1)    3/   E8916 : 3489                                dc.w    z80_ptr(SOUND4F_SIGNPOST_VOICES)
(1)    4/   E8918 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8918 : 01                          dc.b    $01
(1)    5/   E8919 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8919 : 02                          dc.b    $02
(1)    6/   E891A :                     
(1)    7/   E891A : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound4F_Signpost_FM4,	$27, $03
(1)    7/   E891A : 8004                        dc.b    $80,CFM4
(1)    7/   E891C :  (MACRO-2)                  CheckedChannelPointer SOUND4F_SIGNPOST_FM4
(1)    7/   E891C : 2689                                dc.w    z80_ptr(SOUND4F_SIGNPOST_FM4)
(1)    7/   E891E : 27                                  dc.b    $27
(1)    7/   E891F : 03                          dc.b    $03
(1)    8/   E8920 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound4F_Signpost_FM5,	$27, $00
(1)    8/   E8920 : 8005                        dc.b    $80,CFM5
(1)    8/   E8922 :  (MACRO-2)                  CheckedChannelPointer SOUND4F_SIGNPOST_FM5
(1)    8/   E8922 : 2889                                dc.w    z80_ptr(SOUND4F_SIGNPOST_FM5)
(1)    8/   E8924 : 27                                  dc.b    $27
(1)    8/   E8925 : 00                          dc.b    $00
(1)    9/   E8926 :                     
(1)   10/   E8926 :                     ; FM4 Data
(1)   11/   E8926 :                     Sound4F_Signpost_FM4:
(1)   12/   E8926 : 8004                	dc.b	nRst, $04
(1)   13/   E8928 :                     
(1)   14/   E8928 :                     ; FM5 Data
(1)   15/   E8928 :                     Sound4F_Signpost_FM5:
(1)   16/   E8928 : (MACRO)             	smpsSetvoice        $00
(1)   16/   E8928 :  (MACRO-2)                  smpsFMvoice $00
(1)   16/   E8928 : EF00                                dc.b    $EF,$00
(1)   17/   E892A :                     
(1)   18/   E892A :                     Sound4F_Signpost_Loop00:
(1)   19/   E892A : B405                	dc.b	nEb4, $05
(1)   20/   E892C : (MACRO)             	smpsAlterVol        $02
(1)   20/   E892C : E602                        dc.b    $E6,$02
(1)   21/   E892E : (MACRO)             	smpsLoop            $00, $15, Sound4F_Signpost_Loop00
(1)   21/   E892E : F7                          dc.b    $F7
(1)   21/   E892F : 0015                        dc.b    $00,$15
(1)   21/   E8931 : 2A89                                dc.w    z80_ptr(SOUND4F_SIGNPOST_LOOP00)
(1)   22/   E8933 : (MACRO)             	smpsStop
(1)   22/   E8933 : F2                          dc.b    $F2
(1)   23/   E8934 :                     
(1)   24/   E8934 :                     Sound4F_Signpost_Voices:
(1)   25/   E8934 :                     ;	Voice $00
(1)   26/   E8934 :                     ;	$F4
(1)   27/   E8934 :                     ;	$06, $04, $0F, $0E, 	$1F, $1F, $1F, $1F, 	$00, $00, $0B, $0B
(1)   28/   E8934 :                     ;	$00, $00, $05, $08, 	$0F, $0F, $FF, $FF, 	$0C, $8B, $03, $80
(1)   29/   E8934 : (MACRO)             	smpsVcAlgorithm     $04
(1)   29/   E8934 : =$4                 vcAlgorithm set $04
(1)   30/   E8934 : (MACRO)             	smpsVcFeedback      $06
(1)   30/   E8934 : =$6                 vcFeedback set $06
(1)   31/   E8934 : (MACRO)             	smpsVcUnusedBits    $03
(1)   31/   E8934 : =$3                 vcUnusedBits set $03
(1)   31/   E8934 : =$0                 vcD1R1Unk set 0
(1)   31/   E8934 : =$0                 vcD1R2Unk set 0
(1)   31/   E8934 : =$0                 vcD1R3Unk set 0
(1)   31/   E8934 : =$0                 vcD1R4Unk set 0
(1)   32/   E8934 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   32/   E8934 : =$0                 vcDT1 set $00
(1)   32/   E8934 : =$0                 vcDT2 set $00
(1)   32/   E8934 : =$0                 vcDT3 set $00
(1)   32/   E8934 : =$0                 vcDT4 set $00
(1)   33/   E8934 : (MACRO)             	smpsVcCoarseFreq    $0E, $0F, $04, $06
(1)   33/   E8934 : =$E                 vcCF1 set $0E
(1)   33/   E8934 : =$F                 vcCF2 set $0F
(1)   33/   E8934 : =$4                 vcCF3 set $04
(1)   33/   E8934 : =$6                 vcCF4 set $06
(1)   34/   E8934 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   34/   E8934 : =$0                 vcRS1 set $00
(1)   34/   E8934 : =$0                 vcRS2 set $00
(1)   34/   E8934 : =$0                 vcRS3 set $00
(1)   34/   E8934 : =$0                 vcRS4 set $00
(1)   35/   E8934 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   35/   E8934 : =$1F                vcAR1 set $1F
(1)   35/   E8934 : =$1F                vcAR2 set $1F
(1)   35/   E8934 : =$1F                vcAR3 set $1F
(1)   35/   E8934 : =$1F                vcAR4 set $1F
(1)   36/   E8934 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E8934 : =$0                 vcAM1 set $00<<5
(1)   36/   E8934 : =$0                 vcAM2 set $00<<5
(1)   36/   E8934 : =$0                 vcAM3 set $00<<5
(1)   36/   E8934 : =$0                 vcAM4 set $00<<5
(1)   37/   E8934 : (MACRO)             	smpsVcDecayRate1    $0B, $0B, $00, $00
(1)   37/   E8934 : =$B                 vcD1R1 set $0B
(1)   37/   E8934 : =$B                 vcD1R2 set $0B
(1)   37/   E8934 : =$0                 vcD1R3 set $00
(1)   37/   E8934 : =$0                 vcD1R4 set $00
(1)   38/   E8934 : (MACRO)             	smpsVcDecayRate2    $08, $05, $00, $00
(1)   38/   E8934 : =$8                 vcD2R1 set $08
(1)   38/   E8934 : =$5                 vcD2R2 set $05
(1)   38/   E8934 : =$0                 vcD2R3 set $00
(1)   38/   E8934 : =$0                 vcD2R4 set $00
(1)   39/   E8934 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $00, $00
(1)   39/   E8934 : =$F                 vcDL1 set $0F
(1)   39/   E8934 : =$F                 vcDL2 set $0F
(1)   39/   E8934 : =$0                 vcDL3 set $00
(1)   39/   E8934 : =$0                 vcDL4 set $00
(1)   40/   E8934 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E8934 : =$F                 vcRR1 set $0F
(1)   40/   E8934 : =$F                 vcRR2 set $0F
(1)   40/   E8934 : =$F                 vcRR3 set $0F
(1)   40/   E8934 : =$F                 vcRR4 set $0F
(1)   41/   E8934 : (MACRO)             	smpsVcTotalLevel    $00, $03, $0B, $0C
(1)   41/   E8934 : =$0                 vcTL1 set $00
(1)   41/   E8934 : =$3                 vcTL2 set $03
(1)   41/   E8934 : =$B                 vcTL3 set $0B
(1)   41/   E8934 : =$C                 vcTL4 set $0C
(1)   41/   E8934 : F4                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E8935 :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E8935 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E8935 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   41/   E8935 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   41/   E8935 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   41/   E8935 : =$80                vcTLMask1 set $80
(1)   41/   E8935 :                     
(1)   41/   E8935 :                     
(1)   41/   E8935 : 0604 0F0E                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E8939 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E893D : 0000 0B0B                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E8941 : 0000 0508                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E8945 : 0F0F FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E8949 : 0C8B 0380                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E894D :                     
(1)   43/   E894D :                     
  563/   E894D :                        Sound50:	include "sfx-improved/D0 - CNZ Boss Zap.asm"
(1)    1/   E894D :                     Sound50_CNZBossZap_Header:
(1)    2/   E894D : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E894D :                     
(1)    2/   E894D : =$3                 SourceDriver set 3
(1)    2/   E894D :                     
(1)    2/   E894D : =$0                 SourceSMPS2ASM set 0
(1)    2/   E894D :                     
(1)    2/   E894D : =$E894D             songStart set *
(1)    2/   E894D :                     
(1)    2/   E894D :                     
(1)    3/   E894D : (MACRO)             	smpsHeaderVoice     Sound50_CNZBossZap_Voices
(1)    3/   E894D : 6789                                dc.w    z80_ptr(SOUND50_CNZBOSSZAP_VOICES)
(1)    4/   E894F : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E894F : 01                          dc.b    $01
(1)    5/   E8950 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8950 : 01                          dc.b    $01
(1)    6/   E8951 :                     
(1)    7/   E8951 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound50_CNZBossZap_FM5,	$F4, $00
(1)    7/   E8951 : 8005                        dc.b    $80,CFM5
(1)    7/   E8953 :  (MACRO-2)                  CheckedChannelPointer SOUND50_CNZBOSSZAP_FM5
(1)    7/   E8953 : 5789                                dc.w    z80_ptr(SOUND50_CNZBOSSZAP_FM5)
(1)    7/   E8955 : F4                                  dc.b    $F4
(1)    7/   E8956 : 00                          dc.b    $00
(1)    8/   E8957 :                     
(1)    9/   E8957 :                     ; FM5 Data
(1)   10/   E8957 :                     Sound50_CNZBossZap_FM5:
(1)   11/   E8957 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8957 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8957 : EF00                                dc.b    $EF,$00
(1)   12/   E8959 : B304 8001           	dc.b	nD4, $04, nRst, $01
(1)   13/   E895D :                     
(1)   14/   E895D :                     Sound50_CNZBossZap_Loop00:
(1)   15/   E895D : B404 8001           	dc.b	nEb4, $04, nRst, $01
(1)   16/   E8961 : (MACRO)             	smpsLoop            $00, $04, Sound50_CNZBossZap_Loop00
(1)   16/   E8961 : F7                          dc.b    $F7
(1)   16/   E8962 : 0004                        dc.b    $00,$04
(1)   16/   E8964 : 5D89                                dc.w    z80_ptr(SOUND50_CNZBOSSZAP_LOOP00)
(1)   17/   E8966 : (MACRO)             	smpsStop
(1)   17/   E8966 : F2                          dc.b    $F2
(1)   18/   E8967 :                     
(1)   19/   E8967 :                     Sound50_CNZBossZap_Voices:
(1)   20/   E8967 :                     ;	Voice $00
(1)   21/   E8967 :                     ;	$83
(1)   22/   E8967 :                     ;	$12, $10, $13, $1E, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   23/   E8967 :                     ;	$02, $02, $02, $02, 	$2F, $2F, $FF, $3F, 	$06, $10, $34, $87
(1)   24/   E8967 : (MACRO)             	smpsVcAlgorithm     $03
(1)   24/   E8967 : =$3                 vcAlgorithm set $03
(1)   25/   E8967 : (MACRO)             	smpsVcFeedback      $00
(1)   25/   E8967 : =$0                 vcFeedback set $00
(1)   26/   E8967 : (MACRO)             	smpsVcUnusedBits    $02
(1)   26/   E8967 : =$2                 vcUnusedBits set $02
(1)   26/   E8967 : =$0                 vcD1R1Unk set 0
(1)   26/   E8967 : =$0                 vcD1R2Unk set 0
(1)   26/   E8967 : =$0                 vcD1R3Unk set 0
(1)   26/   E8967 : =$0                 vcD1R4Unk set 0
(1)   27/   E8967 : (MACRO)             	smpsVcDetune        $01, $01, $01, $01
(1)   27/   E8967 : =$1                 vcDT1 set $01
(1)   27/   E8967 : =$1                 vcDT2 set $01
(1)   27/   E8967 : =$1                 vcDT3 set $01
(1)   27/   E8967 : =$1                 vcDT4 set $01
(1)   28/   E8967 : (MACRO)             	smpsVcCoarseFreq    $0E, $03, $00, $02
(1)   28/   E8967 : =$E                 vcCF1 set $0E
(1)   28/   E8967 : =$3                 vcCF2 set $03
(1)   28/   E8967 : =$0                 vcCF3 set $00
(1)   28/   E8967 : =$2                 vcCF4 set $02
(1)   29/   E8967 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   29/   E8967 : =$0                 vcRS1 set $00
(1)   29/   E8967 : =$0                 vcRS2 set $00
(1)   29/   E8967 : =$0                 vcRS3 set $00
(1)   29/   E8967 : =$0                 vcRS4 set $00
(1)   30/   E8967 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   30/   E8967 : =$1F                vcAR1 set $1F
(1)   30/   E8967 : =$1F                vcAR2 set $1F
(1)   30/   E8967 : =$1F                vcAR3 set $1F
(1)   30/   E8967 : =$1F                vcAR4 set $1F
(1)   31/   E8967 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   31/   E8967 : =$0                 vcAM1 set $00<<5
(1)   31/   E8967 : =$0                 vcAM2 set $00<<5
(1)   31/   E8967 : =$0                 vcAM3 set $00<<5
(1)   31/   E8967 : =$0                 vcAM4 set $00<<5
(1)   32/   E8967 : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   32/   E8967 : =$0                 vcD1R1 set $00
(1)   32/   E8967 : =$0                 vcD1R2 set $00
(1)   32/   E8967 : =$0                 vcD1R3 set $00
(1)   32/   E8967 : =$0                 vcD1R4 set $00
(1)   33/   E8967 : (MACRO)             	smpsVcDecayRate2    $02, $02, $02, $02
(1)   33/   E8967 : =$2                 vcD2R1 set $02
(1)   33/   E8967 : =$2                 vcD2R2 set $02
(1)   33/   E8967 : =$2                 vcD2R3 set $02
(1)   33/   E8967 : =$2                 vcD2R4 set $02
(1)   34/   E8967 : (MACRO)             	smpsVcDecayLevel    $03, $0F, $02, $02
(1)   34/   E8967 : =$3                 vcDL1 set $03
(1)   34/   E8967 : =$F                 vcDL2 set $0F
(1)   34/   E8967 : =$2                 vcDL3 set $02
(1)   34/   E8967 : =$2                 vcDL4 set $02
(1)   35/   E8967 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   35/   E8967 : =$F                 vcRR1 set $0F
(1)   35/   E8967 : =$F                 vcRR2 set $0F
(1)   35/   E8967 : =$F                 vcRR3 set $0F
(1)   35/   E8967 : =$F                 vcRR4 set $0F
(1)   36/   E8967 : (MACRO)             	smpsVcTotalLevel    $07, $34, $10, $06
(1)   36/   E8967 : =$7                 vcTL1 set $07
(1)   36/   E8967 : =$34                vcTL2 set $34
(1)   36/   E8967 : =$10                vcTL3 set $10
(1)   36/   E8967 : =$6                 vcTL4 set $06
(1)   36/   E8967 : 83                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   36/   E8968 :                     ;   0     1     2     3     4     5     6     7
(1)   36/   E8968 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   36/   E8968 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   36/   E8968 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   36/   E8968 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   36/   E8968 : =$80                vcTLMask1 set $80
(1)   36/   E8968 :                     
(1)   36/   E8968 :                     
(1)   36/   E8968 : 1210 131E                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   36/   E896C : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   36/   E8970 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   36/   E8974 : 0202 0202                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   36/   E8978 : 2F2F FF3F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   36/   E897C : 0610 3487                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   37/   E8980 :                     
(1)   38/   E8980 :                     
  564/   E8980 :                        Sound51:	include "sfx-improved/D1 - Unknown (Unused).asm"
(1)    1/   E8980 :                     Sound51_Header:
(1)    2/   E8980 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8980 :                     
(1)    2/   E8980 : =$3                 SourceDriver set 3
(1)    2/   E8980 :                     
(1)    2/   E8980 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8980 :                     
(1)    2/   E8980 : =$E8980             songStart set *
(1)    2/   E8980 :                     
(1)    2/   E8980 :                     
(1)    3/   E8980 : (MACRO)             	smpsHeaderVoice     Sound51_Voices
(1)    3/   E8980 : A089                                dc.w    z80_ptr(SOUND51_VOICES)
(1)    4/   E8982 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8982 : 01                          dc.b    $01
(1)    5/   E8983 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8983 : 02                          dc.b    $02
(1)    6/   E8984 :                     
(1)    7/   E8984 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound51_PSG3,	$00, $01
(1)    7/   E8984 : 80C0                        dc.b    $80,CPSG3
(1)    7/   E8986 :  (MACRO-2)                  CheckedChannelPointer SOUND51_PSG3
(1)    7/   E8986 : 9089                                dc.w    z80_ptr(SOUND51_PSG3)
(1)    7/   E8988 :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E8988 : 00                                  dc.b    $00
(1)    7/   E8989 : 01                          dc.b    $01
(1)    8/   E898A : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound51_FM5,	$00, $0B
(1)    8/   E898A : 8005                        dc.b    $80,CFM5
(1)    8/   E898C :  (MACRO-2)                  CheckedChannelPointer SOUND51_FM5
(1)    8/   E898C : 9989                                dc.w    z80_ptr(SOUND51_FM5)
(1)    8/   E898E : 00                                  dc.b    $00
(1)    8/   E898F : 0B                          dc.b    $0B
(1)    9/   E8990 :                     
(1)   10/   E8990 :                     ; PSG3 Data
(1)   11/   E8990 :                     Sound51_PSG3:
(1)   12/   E8990 : (MACRO)             	smpsPSGvoice        fTone_02
(1)   12/   E8990 : F502                        dc.b    $F5,FTONE_02
(1)   13/   E8992 : (MACRO)             	smpsPSGform         $E4
(1)   13/   E8992 : F3E4                        dc.b    $F3,$E4
(1)   14/   E8994 : B004 8502           	dc.b	nB3, $04, nE0, $02
(1)   15/   E8998 : (MACRO)             	smpsStop
(1)   15/   E8998 : F2                          dc.b    $F2
(1)   16/   E8999 :                     
(1)   17/   E8999 :                     ; FM5 Data
(1)   18/   E8999 :                     Sound51_FM5:
(1)   19/   E8999 : (MACRO)             	smpsSetvoice        $00
(1)   19/   E8999 :  (MACRO-2)                  smpsFMvoice $00
(1)   19/   E8999 : EF00                                dc.b    $EF,$00
(1)   20/   E899B : (MACRO)             	smpsNoteFill        $04
(1)   20/   E899B : E804                                dc.b    $E8,$04
(1)   21/   E899D : A506                	dc.b	nC3, $06
(1)   22/   E899F : (MACRO)             	smpsStop
(1)   22/   E899F : F2                          dc.b    $F2
(1)   23/   E89A0 :                     
(1)   24/   E89A0 :                     Sound51_Voices:
(1)   25/   E89A0 :                     ;	Voice $00
(1)   26/   E89A0 :                     ;	$3C
(1)   27/   E89A0 :                     ;	$02, $00, $01, $01, 	$1F, $1F, $1F, $1F, 	$00, $0E, $19, $10
(1)   28/   E89A0 :                     ;	$00, $0C, $00, $0F, 	$0F, $EF, $FF, $FF, 	$05, $80, $00, $80
(1)   29/   E89A0 : (MACRO)             	smpsVcAlgorithm     $04
(1)   29/   E89A0 : =$4                 vcAlgorithm set $04
(1)   30/   E89A0 : (MACRO)             	smpsVcFeedback      $07
(1)   30/   E89A0 : =$7                 vcFeedback set $07
(1)   31/   E89A0 : (MACRO)             	smpsVcUnusedBits    $00
(1)   31/   E89A0 : =$0                 vcUnusedBits set $00
(1)   31/   E89A0 : =$0                 vcD1R1Unk set 0
(1)   31/   E89A0 : =$0                 vcD1R2Unk set 0
(1)   31/   E89A0 : =$0                 vcD1R3Unk set 0
(1)   31/   E89A0 : =$0                 vcD1R4Unk set 0
(1)   32/   E89A0 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   32/   E89A0 : =$0                 vcDT1 set $00
(1)   32/   E89A0 : =$0                 vcDT2 set $00
(1)   32/   E89A0 : =$0                 vcDT3 set $00
(1)   32/   E89A0 : =$0                 vcDT4 set $00
(1)   33/   E89A0 : (MACRO)             	smpsVcCoarseFreq    $01, $01, $00, $02
(1)   33/   E89A0 : =$1                 vcCF1 set $01
(1)   33/   E89A0 : =$1                 vcCF2 set $01
(1)   33/   E89A0 : =$0                 vcCF3 set $00
(1)   33/   E89A0 : =$2                 vcCF4 set $02
(1)   34/   E89A0 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   34/   E89A0 : =$0                 vcRS1 set $00
(1)   34/   E89A0 : =$0                 vcRS2 set $00
(1)   34/   E89A0 : =$0                 vcRS3 set $00
(1)   34/   E89A0 : =$0                 vcRS4 set $00
(1)   35/   E89A0 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   35/   E89A0 : =$1F                vcAR1 set $1F
(1)   35/   E89A0 : =$1F                vcAR2 set $1F
(1)   35/   E89A0 : =$1F                vcAR3 set $1F
(1)   35/   E89A0 : =$1F                vcAR4 set $1F
(1)   36/   E89A0 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E89A0 : =$0                 vcAM1 set $00<<5
(1)   36/   E89A0 : =$0                 vcAM2 set $00<<5
(1)   36/   E89A0 : =$0                 vcAM3 set $00<<5
(1)   36/   E89A0 : =$0                 vcAM4 set $00<<5
(1)   37/   E89A0 : (MACRO)             	smpsVcDecayRate1    $10, $19, $0E, $00
(1)   37/   E89A0 : =$10                vcD1R1 set $10
(1)   37/   E89A0 : =$19                vcD1R2 set $19
(1)   37/   E89A0 : =$E                 vcD1R3 set $0E
(1)   37/   E89A0 : =$0                 vcD1R4 set $00
(1)   38/   E89A0 : (MACRO)             	smpsVcDecayRate2    $0F, $00, $0C, $00
(1)   38/   E89A0 : =$F                 vcD2R1 set $0F
(1)   38/   E89A0 : =$0                 vcD2R2 set $00
(1)   38/   E89A0 : =$C                 vcD2R3 set $0C
(1)   38/   E89A0 : =$0                 vcD2R4 set $00
(1)   39/   E89A0 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0E, $00
(1)   39/   E89A0 : =$F                 vcDL1 set $0F
(1)   39/   E89A0 : =$F                 vcDL2 set $0F
(1)   39/   E89A0 : =$E                 vcDL3 set $0E
(1)   39/   E89A0 : =$0                 vcDL4 set $00
(1)   40/   E89A0 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E89A0 : =$F                 vcRR1 set $0F
(1)   40/   E89A0 : =$F                 vcRR2 set $0F
(1)   40/   E89A0 : =$F                 vcRR3 set $0F
(1)   40/   E89A0 : =$F                 vcRR4 set $0F
(1)   41/   E89A0 : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $05
(1)   41/   E89A0 : =$0                 vcTL1 set $00
(1)   41/   E89A0 : =$0                 vcTL2 set $00
(1)   41/   E89A0 : =$0                 vcTL3 set $00
(1)   41/   E89A0 : =$5                 vcTL4 set $05
(1)   41/   E89A0 : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E89A1 :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E89A1 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E89A1 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   41/   E89A1 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   41/   E89A1 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   41/   E89A1 : =$80                vcTLMask1 set $80
(1)   41/   E89A1 :                     
(1)   41/   E89A1 :                     
(1)   41/   E89A1 : 0200 0101                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E89A5 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E89A9 : 000E 1910                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E89AD : 000C 000F                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E89B1 : 0FEF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E89B5 : 0580 0080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E89B9 :                     
(1)   43/   E89B9 :                     
  565/   E89B9 :                        Sound52:	include "sfx-improved/D2 - Unknown (Unused).asm"
(1)    1/   E89B9 :                     Sound52_Header:
(1)    2/   E89B9 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E89B9 :                     
(1)    2/   E89B9 : =$3                 SourceDriver set 3
(1)    2/   E89B9 :                     
(1)    2/   E89B9 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E89B9 :                     
(1)    2/   E89B9 : =$E89B9             songStart set *
(1)    2/   E89B9 :                     
(1)    2/   E89B9 :                     
(1)    3/   E89B9 : (MACRO)             	smpsHeaderVoice     Sound52_Voices
(1)    3/   E89B9 : DD89                                dc.w    z80_ptr(SOUND52_VOICES)
(1)    4/   E89BB : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E89BB : 01                          dc.b    $01
(1)    5/   E89BC : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E89BC : 01                          dc.b    $01
(1)    6/   E89BD :                     
(1)    7/   E89BD : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound52_FM5,	$00, $02
(1)    7/   E89BD : 8005                        dc.b    $80,CFM5
(1)    7/   E89BF :  (MACRO-2)                  CheckedChannelPointer SOUND52_FM5
(1)    7/   E89BF : C389                                dc.w    z80_ptr(SOUND52_FM5)
(1)    7/   E89C1 : 00                                  dc.b    $00
(1)    7/   E89C2 : 02                          dc.b    $02
(1)    8/   E89C3 :                     
(1)    9/   E89C3 :                     ; FM5 Data
(1)   10/   E89C3 :                     Sound52_FM5:
(1)   11/   E89C3 : (MACRO)             	smpsModSet          $01, $01, $2A, $07
(1)   11/   E89C3 : F0                          dc.b    $F0
(1)   11/   E89C4 : 0101 2A07                           dc.b    $01,$01,$2A,$07
(1)   11/   E89C8 :                             ;dc.b   $01,$2A,$07
(1)   12/   E89C8 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E89C8 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E89C8 : EF00                                dc.b    $EF,$00
(1)   13/   E89CA :                     
(1)   14/   E89CA :                     Sound52_Loop00:
(1)   15/   E89CA : A503 E7             	dc.b	nC3, $03, smpsNoAttack
(1)   16/   E89CD : (MACRO)             	smpsLoop            $00, $13, Sound52_Loop00
(1)   16/   E89CD : F7                          dc.b    $F7
(1)   16/   E89CE : 0013                        dc.b    $00,$13
(1)   16/   E89D0 : CA89                                dc.w    z80_ptr(SOUND52_LOOP00)
(1)   17/   E89D2 :                     
(1)   18/   E89D2 :                     Sound52_Loop01:
(1)   19/   E89D2 : A503 E7             	dc.b	nC3, $03, smpsNoAttack
(1)   20/   E89D5 : (MACRO)             	smpsAlterVol        $02
(1)   20/   E89D5 : E602                        dc.b    $E6,$02
(1)   21/   E89D7 : (MACRO)             	smpsLoop            $00, $13, Sound52_Loop01
(1)   21/   E89D7 : F7                          dc.b    $F7
(1)   21/   E89D8 : 0013                        dc.b    $00,$13
(1)   21/   E89DA : D289                                dc.w    z80_ptr(SOUND52_LOOP01)
(1)   22/   E89DC : (MACRO)             	smpsStop
(1)   22/   E89DC : F2                          dc.b    $F2
(1)   23/   E89DD :                     
(1)   24/   E89DD :                     Sound52_Voices:
(1)   25/   E89DD :                     ;	Voice $00
(1)   26/   E89DD :                     ;	$28
(1)   27/   E89DD :                     ;	$21, $21, $21, $30, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   28/   E89DD :                     ;	$00, $00, $00, $00, 	$FF, $FF, $FF, $FF, 	$29, $29, $20, $80
(1)   29/   E89DD : (MACRO)             	smpsVcAlgorithm     $00
(1)   29/   E89DD : =$0                 vcAlgorithm set $00
(1)   30/   E89DD : (MACRO)             	smpsVcFeedback      $05
(1)   30/   E89DD : =$5                 vcFeedback set $05
(1)   31/   E89DD : (MACRO)             	smpsVcUnusedBits    $00
(1)   31/   E89DD : =$0                 vcUnusedBits set $00
(1)   31/   E89DD : =$0                 vcD1R1Unk set 0
(1)   31/   E89DD : =$0                 vcD1R2Unk set 0
(1)   31/   E89DD : =$0                 vcD1R3Unk set 0
(1)   31/   E89DD : =$0                 vcD1R4Unk set 0
(1)   32/   E89DD : (MACRO)             	smpsVcDetune        $03, $02, $02, $02
(1)   32/   E89DD : =$3                 vcDT1 set $03
(1)   32/   E89DD : =$2                 vcDT2 set $02
(1)   32/   E89DD : =$2                 vcDT3 set $02
(1)   32/   E89DD : =$2                 vcDT4 set $02
(1)   33/   E89DD : (MACRO)             	smpsVcCoarseFreq    $00, $01, $01, $01
(1)   33/   E89DD : =$0                 vcCF1 set $00
(1)   33/   E89DD : =$1                 vcCF2 set $01
(1)   33/   E89DD : =$1                 vcCF3 set $01
(1)   33/   E89DD : =$1                 vcCF4 set $01
(1)   34/   E89DD : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   34/   E89DD : =$0                 vcRS1 set $00
(1)   34/   E89DD : =$0                 vcRS2 set $00
(1)   34/   E89DD : =$0                 vcRS3 set $00
(1)   34/   E89DD : =$0                 vcRS4 set $00
(1)   35/   E89DD : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   35/   E89DD : =$1F                vcAR1 set $1F
(1)   35/   E89DD : =$1F                vcAR2 set $1F
(1)   35/   E89DD : =$1F                vcAR3 set $1F
(1)   35/   E89DD : =$1F                vcAR4 set $1F
(1)   36/   E89DD : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E89DD : =$0                 vcAM1 set $00<<5
(1)   36/   E89DD : =$0                 vcAM2 set $00<<5
(1)   36/   E89DD : =$0                 vcAM3 set $00<<5
(1)   36/   E89DD : =$0                 vcAM4 set $00<<5
(1)   37/   E89DD : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   37/   E89DD : =$0                 vcD1R1 set $00
(1)   37/   E89DD : =$0                 vcD1R2 set $00
(1)   37/   E89DD : =$0                 vcD1R3 set $00
(1)   37/   E89DD : =$0                 vcD1R4 set $00
(1)   38/   E89DD : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   38/   E89DD : =$0                 vcD2R1 set $00
(1)   38/   E89DD : =$0                 vcD2R2 set $00
(1)   38/   E89DD : =$0                 vcD2R3 set $00
(1)   38/   E89DD : =$0                 vcD2R4 set $00
(1)   39/   E89DD : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0F, $0F
(1)   39/   E89DD : =$F                 vcDL1 set $0F
(1)   39/   E89DD : =$F                 vcDL2 set $0F
(1)   39/   E89DD : =$F                 vcDL3 set $0F
(1)   39/   E89DD : =$F                 vcDL4 set $0F
(1)   40/   E89DD : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E89DD : =$F                 vcRR1 set $0F
(1)   40/   E89DD : =$F                 vcRR2 set $0F
(1)   40/   E89DD : =$F                 vcRR3 set $0F
(1)   40/   E89DD : =$F                 vcRR4 set $0F
(1)   41/   E89DD : (MACRO)             	smpsVcTotalLevel    $00, $20, $29, $29
(1)   41/   E89DD : =$0                 vcTL1 set $00
(1)   41/   E89DD : =$20                vcTL2 set $20
(1)   41/   E89DD : =$29                vcTL3 set $29
(1)   41/   E89DD : =$29                vcTL4 set $29
(1)   41/   E89DD : 28                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E89DE :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E89DE :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E89DE : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   41/   E89DE : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   41/   E89DE : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   41/   E89DE : =$80                vcTLMask1 set $80
(1)   41/   E89DE :                     
(1)   41/   E89DE :                     
(1)   41/   E89DE : 2121 2130                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E89E2 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E89E6 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E89EA : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E89EE : FFFF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E89F2 : 2929 2080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E89F6 :                     
(1)   43/   E89F6 :                     
  566/   E89F6 :                        Sound53:	include "sfx-improved/D3 - Signpost 2P.asm"
(1)    1/   E89F6 :                     Sound53_Signpost2P_Header:
(1)    2/   E89F6 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E89F6 :                     
(1)    2/   E89F6 : =$3                 SourceDriver set 3
(1)    2/   E89F6 :                     
(1)    2/   E89F6 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E89F6 :                     
(1)    2/   E89F6 : =$E89F6             songStart set *
(1)    2/   E89F6 :                     
(1)    2/   E89F6 :                     
(1)    3/   E89F6 : (MACRO)             	smpsHeaderVoice     Sound53_Signpost2P_Voices
(1)    3/   E89F6 : 1C8A                                dc.w    z80_ptr(SOUND53_SIGNPOST2P_VOICES)
(1)    4/   E89F8 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E89F8 : 01                          dc.b    $01
(1)    5/   E89F9 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E89F9 : 01                          dc.b    $01
(1)    6/   E89FA :                     
(1)    7/   E89FA : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound53_Signpost2P_FM5,	$F5, $03
(1)    7/   E89FA : 8005                        dc.b    $80,CFM5
(1)    7/   E89FC :  (MACRO-2)                  CheckedChannelPointer SOUND53_SIGNPOST2P_FM5
(1)    7/   E89FC : 008A                                dc.w    z80_ptr(SOUND53_SIGNPOST2P_FM5)
(1)    7/   E89FE : F5                                  dc.b    $F5
(1)    7/   E89FF : 03                          dc.b    $03
(1)    8/   E8A00 :                     
(1)    9/   E8A00 :                     ; FM5 Data
(1)   10/   E8A00 :                     Sound53_Signpost2P_FM5:
(1)   11/   E8A00 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8A00 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8A00 : EF00                                dc.b    $EF,$00
(1)   12/   E8A02 : (MACRO)             	smpsModSet          $01, $01, $46, $09
(1)   12/   E8A02 : F0                          dc.b    $F0
(1)   12/   E8A03 : 0101 4609                           dc.b    $01,$01,$46,$09
(1)   12/   E8A07 :                             ;dc.b   $01,$46,$09
(1)   13/   E8A07 : A714 E714 E7        	dc.b	nD3, $14, smpsNoAttack, $14, smpsNoAttack
(1)   14/   E8A0C : (MACRO)             	smpsAlterVol        $04
(1)   14/   E8A0C : E604                        dc.b    $E6,$04
(1)   15/   E8A0E : 14E7                	dc.b	$14, smpsNoAttack
(1)   16/   E8A10 : (MACRO)             	smpsAlterVol        $04
(1)   16/   E8A10 : E604                        dc.b    $E6,$04
(1)   17/   E8A12 : 14E7                	dc.b	$14, smpsNoAttack
(1)   18/   E8A14 : (MACRO)             	smpsAlterVol        $04
(1)   18/   E8A14 : E604                        dc.b    $E6,$04
(1)   19/   E8A16 : 0AE7                	dc.b	$0A, smpsNoAttack
(1)   20/   E8A18 : (MACRO)             	smpsAlterVol        $04
(1)   20/   E8A18 : E604                        dc.b    $E6,$04
(1)   21/   E8A1A : 0A                  	dc.b	$0A
(1)   22/   E8A1B : (MACRO)             	smpsStop
(1)   22/   E8A1B : F2                          dc.b    $F2
(1)   23/   E8A1C :                     
(1)   24/   E8A1C :                     Sound53_Signpost2P_Voices:
(1)   25/   E8A1C :                     ;	Voice $00
(1)   26/   E8A1C :                     ;	$07
(1)   27/   E8A1C :                     ;	$0A, $0C, $0C, $0C, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   28/   E8A1C :                     ;	$00, $00, $00, $00, 	$FF, $FF, $FF, $FF, 	$2A, $0F, $0F, $80
(1)   29/   E8A1C : (MACRO)             	smpsVcAlgorithm     $07
(1)   29/   E8A1C : =$7                 vcAlgorithm set $07
(1)   30/   E8A1C : (MACRO)             	smpsVcFeedback      $00
(1)   30/   E8A1C : =$0                 vcFeedback set $00
(1)   31/   E8A1C : (MACRO)             	smpsVcUnusedBits    $00
(1)   31/   E8A1C : =$0                 vcUnusedBits set $00
(1)   31/   E8A1C : =$0                 vcD1R1Unk set 0
(1)   31/   E8A1C : =$0                 vcD1R2Unk set 0
(1)   31/   E8A1C : =$0                 vcD1R3Unk set 0
(1)   31/   E8A1C : =$0                 vcD1R4Unk set 0
(1)   32/   E8A1C : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   32/   E8A1C : =$0                 vcDT1 set $00
(1)   32/   E8A1C : =$0                 vcDT2 set $00
(1)   32/   E8A1C : =$0                 vcDT3 set $00
(1)   32/   E8A1C : =$0                 vcDT4 set $00
(1)   33/   E8A1C : (MACRO)             	smpsVcCoarseFreq    $0C, $0C, $0C, $0A
(1)   33/   E8A1C : =$C                 vcCF1 set $0C
(1)   33/   E8A1C : =$C                 vcCF2 set $0C
(1)   33/   E8A1C : =$C                 vcCF3 set $0C
(1)   33/   E8A1C : =$A                 vcCF4 set $0A
(1)   34/   E8A1C : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   34/   E8A1C : =$0                 vcRS1 set $00
(1)   34/   E8A1C : =$0                 vcRS2 set $00
(1)   34/   E8A1C : =$0                 vcRS3 set $00
(1)   34/   E8A1C : =$0                 vcRS4 set $00
(1)   35/   E8A1C : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   35/   E8A1C : =$1F                vcAR1 set $1F
(1)   35/   E8A1C : =$1F                vcAR2 set $1F
(1)   35/   E8A1C : =$1F                vcAR3 set $1F
(1)   35/   E8A1C : =$1F                vcAR4 set $1F
(1)   36/   E8A1C : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E8A1C : =$0                 vcAM1 set $00<<7
(1)   36/   E8A1C : =$0                 vcAM2 set $00<<7
(1)   36/   E8A1C : =$0                 vcAM3 set $00<<7
(1)   36/   E8A1C : =$0                 vcAM4 set $00<<7
(1)   37/   E8A1C : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   37/   E8A1C : =$0                 vcD1R1 set $00
(1)   37/   E8A1C : =$0                 vcD1R2 set $00
(1)   37/   E8A1C : =$0                 vcD1R3 set $00
(1)   37/   E8A1C : =$0                 vcD1R4 set $00
(1)   38/   E8A1C : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   38/   E8A1C : =$0                 vcD2R1 set $00
(1)   38/   E8A1C : =$0                 vcD2R2 set $00
(1)   38/   E8A1C : =$0                 vcD2R3 set $00
(1)   38/   E8A1C : =$0                 vcD2R4 set $00
(1)   39/   E8A1C : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0F, $0F
(1)   39/   E8A1C : =$F                 vcDL1 set $0F
(1)   39/   E8A1C : =$F                 vcDL2 set $0F
(1)   39/   E8A1C : =$F                 vcDL3 set $0F
(1)   39/   E8A1C : =$F                 vcDL4 set $0F
(1)   40/   E8A1C : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E8A1C : =$F                 vcRR1 set $0F
(1)   40/   E8A1C : =$F                 vcRR2 set $0F
(1)   40/   E8A1C : =$F                 vcRR3 set $0F
(1)   40/   E8A1C : =$F                 vcRR4 set $0F
(1)   41/   E8A1C : (MACRO)             	smpsVcTotalLevel    $80, $0F, $0F, $2A
(1)   41/   E8A1C : =$80                vcTL1 set $80
(1)   41/   E8A1C : =$F                 vcTL2 set $0F
(1)   41/   E8A1C : =$F                 vcTL3 set $0F
(1)   41/   E8A1C : =$2A                vcTL4 set $2A
(1)   41/   E8A1C : 07                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E8A1D :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E8A1D :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E8A1D : =$0                 vcTLMask4 set 0
(1)   41/   E8A1D : =$0                 vcTLMask3 set 0
(1)   41/   E8A1D : =$0                 vcTLMask2 set 0
(1)   41/   E8A1D : =$0                 vcTLMask1 set 0
(1)   41/   E8A1D :                     
(1)   41/   E8A1D :                     
(1)   41/   E8A1D : 0A0C 0C0C                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E8A21 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E8A25 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E8A29 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E8A2D : FFFF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E8A31 : 2A0F 0F80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E8A35 :                     
(1)   43/   E8A35 :                     
  567/   E8A35 :                        Sound54:	include "sfx-improved/D4 - OOZ Lid Pop.asm"
(1)    1/   E8A35 :                     Sound54_OOZLidPop_Header:
(1)    2/   E8A35 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8A35 :                     
(1)    2/   E8A35 : =$3                 SourceDriver set 3
(1)    2/   E8A35 :                     
(1)    2/   E8A35 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8A35 :                     
(1)    2/   E8A35 : =$E8A35             songStart set *
(1)    2/   E8A35 :                     
(1)    2/   E8A35 :                     
(1)    3/   E8A35 : (MACRO)             	smpsHeaderVoice     Sound54_OOZLidPop_Voices
(1)    3/   E8A35 : 5D8A                                dc.w    z80_ptr(SOUND54_OOZLIDPOP_VOICES)
(1)    4/   E8A37 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8A37 : 01                          dc.b    $01
(1)    5/   E8A38 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8A38 : 02                          dc.b    $02
(1)    6/   E8A39 :                     
(1)    7/   E8A39 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound54_OOZLidPop_FM5,	$00, $00
(1)    7/   E8A39 : 8005                        dc.b    $80,CFM5
(1)    7/   E8A3B :  (MACRO-2)                  CheckedChannelPointer SOUND54_OOZLIDPOP_FM5
(1)    7/   E8A3B : 458A                                dc.w    z80_ptr(SOUND54_OOZLIDPOP_FM5)
(1)    7/   E8A3D : 00                                  dc.b    $00
(1)    7/   E8A3E : 00                          dc.b    $00
(1)    8/   E8A3F : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound54_OOZLidPop_PSG3,	$00, $06
(1)    8/   E8A3F : 80C0                        dc.b    $80,CPSG3
(1)    8/   E8A41 :  (MACRO-2)                  CheckedChannelPointer SOUND54_OOZLIDPOP_PSG3
(1)    8/   E8A41 : 4A8A                                dc.w    z80_ptr(SOUND54_OOZLIDPOP_PSG3)
(1)    8/   E8A43 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8A43 : 00                                  dc.b    $00
(1)    8/   E8A44 : 06                          dc.b    $06
(1)    9/   E8A45 :                     
(1)   10/   E8A45 :                     ; FM5 Data
(1)   11/   E8A45 :                     Sound54_OOZLidPop_FM5:
(1)   12/   E8A45 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8A45 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8A45 : EF00                                dc.b    $EF,$00
(1)   13/   E8A47 : B615                	dc.b	nF4, $15
(1)   14/   E8A49 : (MACRO)             	smpsStop
(1)   14/   E8A49 : F2                          dc.b    $F2
(1)   15/   E8A4A :                     
(1)   16/   E8A4A :                     ; PSG3 Data
(1)   17/   E8A4A :                     Sound54_OOZLidPop_PSG3:
(1)   18/   E8A4A : (MACRO)             	smpsPSGform         $E7
(1)   18/   E8A4A : F3E7                        dc.b    $F3,$E7
(1)   19/   E8A4C : (MACRO)             	smpsPSGvoice        fTone_04
(1)   19/   E8A4C : F504                        dc.b    $F5,FTONE_04
(1)   20/   E8A4E : C703 E7C5 E7C4 E7C3 	dc.b	nMaxPSG, $03, smpsNoAttack, nAb5, smpsNoAttack, nG5, smpsNoAttack, nFs5, smpsNoAttack, nF5, smpsNoAttack, nE5
            E8A56 : E7C2 E7C1         
(1)   21/   E8A5A : E7C0                	dc.b	smpsNoAttack, nEb5
(1)   22/   E8A5C : (MACRO)             	smpsStop
(1)   22/   E8A5C : F2                          dc.b    $F2
(1)   23/   E8A5D :                     
(1)   24/   E8A5D :                     Sound54_OOZLidPop_Voices:
(1)   25/   E8A5D :                     ;	Voice $00
(1)   26/   E8A5D :                     ;	$07
(1)   27/   E8A5D :                     ;	$03, $03, $02, $00, 	$FF, $6F, $6F, $3F, 	$12, $11, $14, $0E
(1)   28/   E8A5D :                     ;	$1A, $03, $0A, $0D, 	$FF, $FF, $FF, $FF, 	$03, $07, $07, $80
(1)   29/   E8A5D : (MACRO)             	smpsVcAlgorithm     $07
(1)   29/   E8A5D : =$7                 vcAlgorithm set $07
(1)   30/   E8A5D : (MACRO)             	smpsVcFeedback      $00
(1)   30/   E8A5D : =$0                 vcFeedback set $00
(1)   31/   E8A5D : (MACRO)             	smpsVcUnusedBits    $00
(1)   31/   E8A5D : =$0                 vcUnusedBits set $00
(1)   31/   E8A5D : =$0                 vcD1R1Unk set 0
(1)   31/   E8A5D : =$0                 vcD1R2Unk set 0
(1)   31/   E8A5D : =$0                 vcD1R3Unk set 0
(1)   31/   E8A5D : =$0                 vcD1R4Unk set 0
(1)   32/   E8A5D : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   32/   E8A5D : =$0                 vcDT1 set $00
(1)   32/   E8A5D : =$0                 vcDT2 set $00
(1)   32/   E8A5D : =$0                 vcDT3 set $00
(1)   32/   E8A5D : =$0                 vcDT4 set $00
(1)   33/   E8A5D : (MACRO)             	smpsVcCoarseFreq    $00, $02, $03, $03
(1)   33/   E8A5D : =$0                 vcCF1 set $00
(1)   33/   E8A5D : =$2                 vcCF2 set $02
(1)   33/   E8A5D : =$3                 vcCF3 set $03
(1)   33/   E8A5D : =$3                 vcCF4 set $03
(1)   34/   E8A5D : (MACRO)             	smpsVcRateScale     $00, $01, $01, $03
(1)   34/   E8A5D : =$0                 vcRS1 set $00
(1)   34/   E8A5D : =$1                 vcRS2 set $01
(1)   34/   E8A5D : =$1                 vcRS3 set $01
(1)   34/   E8A5D : =$3                 vcRS4 set $03
(1)   35/   E8A5D : (MACRO)             	smpsVcAttackRate    $3F, $2F, $2F, $3F
(1)   35/   E8A5D : =$3F                vcAR1 set $3F
(1)   35/   E8A5D : =$2F                vcAR2 set $2F
(1)   35/   E8A5D : =$2F                vcAR3 set $2F
(1)   35/   E8A5D : =$3F                vcAR4 set $3F
(1)   36/   E8A5D : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   36/   E8A5D : =$0                 vcAM1 set $00<<7
(1)   36/   E8A5D : =$0                 vcAM2 set $00<<7
(1)   36/   E8A5D : =$0                 vcAM3 set $00<<7
(1)   36/   E8A5D : =$0                 vcAM4 set $00<<7
(1)   37/   E8A5D : (MACRO)             	smpsVcDecayRate1    $0E, $14, $11, $12
(1)   37/   E8A5D : =$E                 vcD1R1 set $0E
(1)   37/   E8A5D : =$14                vcD1R2 set $14
(1)   37/   E8A5D : =$11                vcD1R3 set $11
(1)   37/   E8A5D : =$12                vcD1R4 set $12
(1)   38/   E8A5D : (MACRO)             	smpsVcDecayRate2    $0D, $0A, $03, $1A
(1)   38/   E8A5D : =$D                 vcD2R1 set $0D
(1)   38/   E8A5D : =$A                 vcD2R2 set $0A
(1)   38/   E8A5D : =$3                 vcD2R3 set $03
(1)   38/   E8A5D : =$1A                vcD2R4 set $1A
(1)   39/   E8A5D : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0F, $0F
(1)   39/   E8A5D : =$F                 vcDL1 set $0F
(1)   39/   E8A5D : =$F                 vcDL2 set $0F
(1)   39/   E8A5D : =$F                 vcDL3 set $0F
(1)   39/   E8A5D : =$F                 vcDL4 set $0F
(1)   40/   E8A5D : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   40/   E8A5D : =$F                 vcRR1 set $0F
(1)   40/   E8A5D : =$F                 vcRR2 set $0F
(1)   40/   E8A5D : =$F                 vcRR3 set $0F
(1)   40/   E8A5D : =$F                 vcRR4 set $0F
(1)   41/   E8A5D : (MACRO)             	smpsVcTotalLevel    $80, $07, $07, $03
(1)   41/   E8A5D : =$80                vcTL1 set $80
(1)   41/   E8A5D : =$7                 vcTL2 set $07
(1)   41/   E8A5D : =$7                 vcTL3 set $07
(1)   41/   E8A5D : =$3                 vcTL4 set $03
(1)   41/   E8A5D : 07                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   41/   E8A5E :                     ;   0     1     2     3     4     5     6     7
(1)   41/   E8A5E :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   41/   E8A5E : =$0                 vcTLMask4 set 0
(1)   41/   E8A5E : =$0                 vcTLMask3 set 0
(1)   41/   E8A5E : =$0                 vcTLMask2 set 0
(1)   41/   E8A5E : =$0                 vcTLMask1 set 0
(1)   41/   E8A5E :                     
(1)   41/   E8A5E :                     
(1)   41/   E8A5E : 0303 0200                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   41/   E8A62 : FF6F 6F3F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   41/   E8A66 : 1211 140E                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   41/   E8A6A : 1A03 0A0D                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   41/   E8A6E : FFFF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   41/   E8A72 : 0307 0780                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   42/   E8A76 :                     
(1)   43/   E8A76 :                     
  568/   E8A76 :                        Sound55:	include "sfx-improved/D5 - Sliding Spike.asm"
(1)    1/   E8A76 :                     Sound55_SlidingSpike_Header:
(1)    2/   E8A76 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8A76 :                     
(1)    2/   E8A76 : =$3                 SourceDriver set 3
(1)    2/   E8A76 :                     
(1)    2/   E8A76 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8A76 :                     
(1)    2/   E8A76 : =$E8A76             songStart set *
(1)    2/   E8A76 :                     
(1)    2/   E8A76 :                     
(1)    3/   E8A76 : (MACRO)             	smpsHeaderVoice     Sound55_SlidingSpike_Voices
(1)    3/   E8A76 : 878A                                dc.w    z80_ptr(SOUND55_SLIDINGSPIKE_VOICES)
(1)    4/   E8A78 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8A78 : 01                          dc.b    $01
(1)    5/   E8A79 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8A79 : 01                          dc.b    $01
(1)    6/   E8A7A :                     
(1)    7/   E8A7A : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound55_SlidingSpike_FM5,	$00, $00
(1)    7/   E8A7A : 8005                        dc.b    $80,CFM5
(1)    7/   E8A7C :  (MACRO-2)                  CheckedChannelPointer SOUND55_SLIDINGSPIKE_FM5
(1)    7/   E8A7C : 808A                                dc.w    z80_ptr(SOUND55_SLIDINGSPIKE_FM5)
(1)    7/   E8A7E : 00                                  dc.b    $00
(1)    7/   E8A7F : 00                          dc.b    $00
(1)    8/   E8A80 :                     
(1)    9/   E8A80 :                     ; FM5 Data
(1)   10/   E8A80 :                     Sound55_SlidingSpike_FM5:
(1)   11/   E8A80 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8A80 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8A80 : EF00                                dc.b    $EF,$00
(1)   12/   E8A82 : AA07 B615           	dc.b	nF3, $07, nF4, $15
(1)   13/   E8A86 : (MACRO)             	smpsStop
(1)   13/   E8A86 : F2                          dc.b    $F2
(1)   14/   E8A87 :                     
(1)   15/   E8A87 :                     Sound55_SlidingSpike_Voices:
(1)   16/   E8A87 :                     ;	Voice $00
(1)   17/   E8A87 :                     ;	$42
(1)   18/   E8A87 :                     ;	$20, $0F, $0E, $0F, 	$1F, $1F, $1F, $1F, 	$1F, $1F, $1F, $1F
(1)   19/   E8A87 :                     ;	$0F, $0F, $0E, $0E, 	$0F, $0F, $0F, $0F, 	$2E, $20, $80, $80
(1)   20/   E8A87 : (MACRO)             	smpsVcAlgorithm     $02
(1)   20/   E8A87 : =$2                 vcAlgorithm set $02
(1)   21/   E8A87 : (MACRO)             	smpsVcFeedback      $00
(1)   21/   E8A87 : =$0                 vcFeedback set $00
(1)   22/   E8A87 : (MACRO)             	smpsVcUnusedBits    $01
(1)   22/   E8A87 : =$1                 vcUnusedBits set $01
(1)   22/   E8A87 : =$0                 vcD1R1Unk set 0
(1)   22/   E8A87 : =$0                 vcD1R2Unk set 0
(1)   22/   E8A87 : =$0                 vcD1R3Unk set 0
(1)   22/   E8A87 : =$0                 vcD1R4Unk set 0
(1)   23/   E8A87 : (MACRO)             	smpsVcDetune        $00, $00, $00, $02
(1)   23/   E8A87 : =$0                 vcDT1 set $00
(1)   23/   E8A87 : =$0                 vcDT2 set $00
(1)   23/   E8A87 : =$0                 vcDT3 set $00
(1)   23/   E8A87 : =$2                 vcDT4 set $02
(1)   24/   E8A87 : (MACRO)             	smpsVcCoarseFreq    $0F, $0E, $0F, $00
(1)   24/   E8A87 : =$F                 vcCF1 set $0F
(1)   24/   E8A87 : =$E                 vcCF2 set $0E
(1)   24/   E8A87 : =$F                 vcCF3 set $0F
(1)   24/   E8A87 : =$0                 vcCF4 set $00
(1)   25/   E8A87 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E8A87 : =$0                 vcRS1 set $00
(1)   25/   E8A87 : =$0                 vcRS2 set $00
(1)   25/   E8A87 : =$0                 vcRS3 set $00
(1)   25/   E8A87 : =$0                 vcRS4 set $00
(1)   26/   E8A87 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E8A87 : =$1F                vcAR1 set $1F
(1)   26/   E8A87 : =$1F                vcAR2 set $1F
(1)   26/   E8A87 : =$1F                vcAR3 set $1F
(1)   26/   E8A87 : =$1F                vcAR4 set $1F
(1)   27/   E8A87 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8A87 : =$0                 vcAM1 set $00<<5
(1)   27/   E8A87 : =$0                 vcAM2 set $00<<5
(1)   27/   E8A87 : =$0                 vcAM3 set $00<<5
(1)   27/   E8A87 : =$0                 vcAM4 set $00<<5
(1)   28/   E8A87 : (MACRO)             	smpsVcDecayRate1    $1F, $1F, $1F, $1F
(1)   28/   E8A87 : =$1F                vcD1R1 set $1F
(1)   28/   E8A87 : =$1F                vcD1R2 set $1F
(1)   28/   E8A87 : =$1F                vcD1R3 set $1F
(1)   28/   E8A87 : =$1F                vcD1R4 set $1F
(1)   29/   E8A87 : (MACRO)             	smpsVcDecayRate2    $0E, $0E, $0F, $0F
(1)   29/   E8A87 : =$E                 vcD2R1 set $0E
(1)   29/   E8A87 : =$E                 vcD2R2 set $0E
(1)   29/   E8A87 : =$F                 vcD2R3 set $0F
(1)   29/   E8A87 : =$F                 vcD2R4 set $0F
(1)   30/   E8A87 : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   30/   E8A87 : =$0                 vcDL1 set $00
(1)   30/   E8A87 : =$0                 vcDL2 set $00
(1)   30/   E8A87 : =$0                 vcDL3 set $00
(1)   30/   E8A87 : =$0                 vcDL4 set $00
(1)   31/   E8A87 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E8A87 : =$F                 vcRR1 set $0F
(1)   31/   E8A87 : =$F                 vcRR2 set $0F
(1)   31/   E8A87 : =$F                 vcRR3 set $0F
(1)   31/   E8A87 : =$F                 vcRR4 set $0F
(1)   32/   E8A87 : (MACRO)             	smpsVcTotalLevel    $00, $80, $20, $2E
(1)   32/   E8A87 : =$0                 vcTL1 set $00
(1)   32/   E8A87 : =$80                vcTL2 set $80
(1)   32/   E8A87 : =$20                vcTL3 set $20
(1)   32/   E8A87 : =$2E                vcTL4 set $2E
(1)   32/   E8A87 : 42                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8A88 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8A88 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8A88 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E8A88 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E8A88 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E8A88 : =$80                vcTLMask1 set $80
(1)   32/   E8A88 :                     
(1)   32/   E8A88 :                     
(1)   32/   E8A88 : 200F 0E0F                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8A8C : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8A90 : 1F1F 1F1F                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8A94 : 0F0F 0E0E                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8A98 : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8A9C : 2E20 8080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8AA0 :                     
(1)   34/   E8AA0 :                     
  569/   E8AA0 :                        Sound56:	include "sfx-improved/D6 - CNZ Elevator.asm"
(1)    1/   E8AA0 :                     Sound56_CNZElevator_Header:
(1)    2/   E8AA0 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8AA0 :                     
(1)    2/   E8AA0 : =$3                 SourceDriver set 3
(1)    2/   E8AA0 :                     
(1)    2/   E8AA0 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8AA0 :                     
(1)    2/   E8AA0 : =$E8AA0             songStart set *
(1)    2/   E8AA0 :                     
(1)    2/   E8AA0 :                     
(1)    3/   E8AA0 : (MACRO)             	smpsHeaderVoice     Sound56_CNZElevator_Voices
(1)    3/   E8AA0 : CC8A                                dc.w    z80_ptr(SOUND56_CNZELEVATOR_VOICES)
(1)    4/   E8AA2 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8AA2 : 01                          dc.b    $01
(1)    5/   E8AA3 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8AA3 : 01                          dc.b    $01
(1)    6/   E8AA4 :                     
(1)    7/   E8AA4 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound56_CNZElevator_FM5,	$10, $0E
(1)    7/   E8AA4 : 8005                        dc.b    $80,CFM5
(1)    7/   E8AA6 :  (MACRO-2)                  CheckedChannelPointer SOUND56_CNZELEVATOR_FM5
(1)    7/   E8AA6 : AA8A                                dc.w    z80_ptr(SOUND56_CNZELEVATOR_FM5)
(1)    7/   E8AA8 : 10                                  dc.b    $10
(1)    7/   E8AA9 : 0E                          dc.b    $0E
(1)    8/   E8AAA :                     
(1)    9/   E8AAA :                     ; FM5 Data
(1)   10/   E8AAA :                     Sound56_CNZElevator_FM5:
(1)   11/   E8AAA : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8AAA :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8AAA : EF00                                dc.b    $EF,$00
(1)   12/   E8AAC : (MACRO)             	smpsModSet          $01, $01, $1E, $FF
(1)   12/   E8AAC : F0                          dc.b    $F0
(1)   12/   E8AAD : 0101 1EFF                           dc.b    $01,$01,$1E,$FF
(1)   12/   E8AB1 :                             ;dc.b   $01,$1E,$FF
(1)   13/   E8AB1 : 8F1C                	dc.b	nD1, $1C
(1)   14/   E8AB3 : (MACRO)             	smpsModOff
(1)   14/   E8AB3 : FA                                  dc.b    $FA
(1)   15/   E8AB4 :                     
(1)   16/   E8AB4 :                     Sound56_CNZElevator_Loop00:
(1)   17/   E8AB4 : E79A 05             	dc.b	smpsNoAttack, nCs2, $05
(1)   18/   E8AB7 : (MACRO)             	smpsLoop            $00, $09, Sound56_CNZElevator_Loop00
(1)   18/   E8AB7 : F7                          dc.b    $F7
(1)   18/   E8AB8 : 0009                        dc.b    $00,$09
(1)   18/   E8ABA : B48A                                dc.w    z80_ptr(SOUND56_CNZELEVATOR_LOOP00)
(1)   19/   E8ABC :                     
(1)   20/   E8ABC :                     Sound56_CNZElevator_Loop01:
(1)   21/   E8ABC : E79A 04             	dc.b	smpsNoAttack, nCs2, $04
(1)   22/   E8ABF : (MACRO)             	smpsAlterVol        $02
(1)   22/   E8ABF : E602                        dc.b    $E6,$02
(1)   23/   E8AC1 : E79A 04             	dc.b	smpsNoAttack, nCs2, $04
(1)   24/   E8AC4 : (MACRO)             	smpsAlterVol        $02
(1)   24/   E8AC4 : E602                        dc.b    $E6,$02
(1)   25/   E8AC6 : (MACRO)             	smpsLoop            $00, $08, Sound56_CNZElevator_Loop01
(1)   25/   E8AC6 : F7                          dc.b    $F7
(1)   25/   E8AC7 : 0008                        dc.b    $00,$08
(1)   25/   E8AC9 : BC8A                                dc.w    z80_ptr(SOUND56_CNZELEVATOR_LOOP01)
(1)   26/   E8ACB : (MACRO)             	smpsStop
(1)   26/   E8ACB : F2                          dc.b    $F2
(1)   27/   E8ACC :                     
(1)   28/   E8ACC :                     Sound56_CNZElevator_Voices:
(1)   29/   E8ACC :                     ;	Voice $00
(1)   30/   E8ACC :                     ;	$0D
(1)   31/   E8ACC :                     ;	$06, $00, $00, $E5, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   32/   E8ACC :                     ;	$00, $00, $00, $00, 	$0F, $0F, $0F, $0F, 	$27, $80, $80, $80
(1)   33/   E8ACC : (MACRO)             	smpsVcAlgorithm     $05
(1)   33/   E8ACC : =$5                 vcAlgorithm set $05
(1)   34/   E8ACC : (MACRO)             	smpsVcFeedback      $01
(1)   34/   E8ACC : =$1                 vcFeedback set $01
(1)   35/   E8ACC : (MACRO)             	smpsVcUnusedBits    $00
(1)   35/   E8ACC : =$0                 vcUnusedBits set $00
(1)   35/   E8ACC : =$0                 vcD1R1Unk set 0
(1)   35/   E8ACC : =$0                 vcD1R2Unk set 0
(1)   35/   E8ACC : =$0                 vcD1R3Unk set 0
(1)   35/   E8ACC : =$0                 vcD1R4Unk set 0
(1)   36/   E8ACC : (MACRO)             	smpsVcDetune        $0E, $00, $00, $00
(1)   36/   E8ACC : =$E                 vcDT1 set $0E
(1)   36/   E8ACC : =$0                 vcDT2 set $00
(1)   36/   E8ACC : =$0                 vcDT3 set $00
(1)   36/   E8ACC : =$0                 vcDT4 set $00
(1)   37/   E8ACC : (MACRO)             	smpsVcCoarseFreq    $05, $00, $00, $06
(1)   37/   E8ACC : =$5                 vcCF1 set $05
(1)   37/   E8ACC : =$0                 vcCF2 set $00
(1)   37/   E8ACC : =$0                 vcCF3 set $00
(1)   37/   E8ACC : =$6                 vcCF4 set $06
(1)   38/   E8ACC : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   38/   E8ACC : =$0                 vcRS1 set $00
(1)   38/   E8ACC : =$0                 vcRS2 set $00
(1)   38/   E8ACC : =$0                 vcRS3 set $00
(1)   38/   E8ACC : =$0                 vcRS4 set $00
(1)   39/   E8ACC : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   39/   E8ACC : =$1F                vcAR1 set $1F
(1)   39/   E8ACC : =$1F                vcAR2 set $1F
(1)   39/   E8ACC : =$1F                vcAR3 set $1F
(1)   39/   E8ACC : =$1F                vcAR4 set $1F
(1)   40/   E8ACC : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   40/   E8ACC : =$0                 vcAM1 set $00<<5
(1)   40/   E8ACC : =$0                 vcAM2 set $00<<5
(1)   40/   E8ACC : =$0                 vcAM3 set $00<<5
(1)   40/   E8ACC : =$0                 vcAM4 set $00<<5
(1)   41/   E8ACC : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   41/   E8ACC : =$0                 vcD1R1 set $00
(1)   41/   E8ACC : =$0                 vcD1R2 set $00
(1)   41/   E8ACC : =$0                 vcD1R3 set $00
(1)   41/   E8ACC : =$0                 vcD1R4 set $00
(1)   42/   E8ACC : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   42/   E8ACC : =$0                 vcD2R1 set $00
(1)   42/   E8ACC : =$0                 vcD2R2 set $00
(1)   42/   E8ACC : =$0                 vcD2R3 set $00
(1)   42/   E8ACC : =$0                 vcD2R4 set $00
(1)   43/   E8ACC : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   43/   E8ACC : =$0                 vcDL1 set $00
(1)   43/   E8ACC : =$0                 vcDL2 set $00
(1)   43/   E8ACC : =$0                 vcDL3 set $00
(1)   43/   E8ACC : =$0                 vcDL4 set $00
(1)   44/   E8ACC : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   44/   E8ACC : =$F                 vcRR1 set $0F
(1)   44/   E8ACC : =$F                 vcRR2 set $0F
(1)   44/   E8ACC : =$F                 vcRR3 set $0F
(1)   44/   E8ACC : =$F                 vcRR4 set $0F
(1)   45/   E8ACC : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $27
(1)   45/   E8ACC : =$0                 vcTL1 set $00
(1)   45/   E8ACC : =$0                 vcTL2 set $00
(1)   45/   E8ACC : =$0                 vcTL3 set $00
(1)   45/   E8ACC : =$27                vcTL4 set $27
(1)   45/   E8ACC : 0D                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   45/   E8ACD :                     ;   0     1     2     3     4     5     6     7
(1)   45/   E8ACD :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   45/   E8ACD : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   45/   E8ACD : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   45/   E8ACD : =$80                vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   45/   E8ACD : =$80                vcTLMask1 set $80
(1)   45/   E8ACD :                     
(1)   45/   E8ACD :                     
(1)   45/   E8ACD : 0600 00E5                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   45/   E8AD1 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   45/   E8AD5 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   45/   E8AD9 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   45/   E8ADD : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   45/   E8AE1 : 2780 8080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   46/   E8AE5 :                     
(1)   47/   E8AE5 :                     
  570/   E8AE5 :                        Sound57:	include "sfx-improved/D7 - Platform Knock.asm"
(1)    1/   E8AE5 :                     Sound57_PlatformKnock_Header:
(1)    2/   E8AE5 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8AE5 :                     
(1)    2/   E8AE5 : =$3                 SourceDriver set 3
(1)    2/   E8AE5 :                     
(1)    2/   E8AE5 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8AE5 :                     
(1)    2/   E8AE5 : =$E8AE5             songStart set *
(1)    2/   E8AE5 :                     
(1)    2/   E8AE5 :                     
(1)    3/   E8AE5 : (MACRO)             	smpsHeaderVoice     Sound57_PlatformKnock_Voices
(1)    3/   E8AE5 : F48A                                dc.w    z80_ptr(SOUND57_PLATFORMKNOCK_VOICES)
(1)    4/   E8AE7 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8AE7 : 01                          dc.b    $01
(1)    5/   E8AE8 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8AE8 : 01                          dc.b    $01
(1)    6/   E8AE9 :                     
(1)    7/   E8AE9 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound57_PlatformKnock_FM5,	$00, $00
(1)    7/   E8AE9 : 8005                        dc.b    $80,CFM5
(1)    7/   E8AEB :  (MACRO-2)                  CheckedChannelPointer SOUND57_PLATFORMKNOCK_FM5
(1)    7/   E8AEB : EF8A                                dc.w    z80_ptr(SOUND57_PLATFORMKNOCK_FM5)
(1)    7/   E8AED : 00                                  dc.b    $00
(1)    7/   E8AEE : 00                          dc.b    $00
(1)    8/   E8AEF :                     
(1)    9/   E8AEF :                     ; FM5 Data
(1)   10/   E8AEF :                     Sound57_PlatformKnock_FM5:
(1)   11/   E8AEF : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8AEF :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8AEF : EF00                                dc.b    $EF,$00
(1)   12/   E8AF1 : CA15                	dc.b	nCs6, $15
(1)   13/   E8AF3 : (MACRO)             	smpsStop
(1)   13/   E8AF3 : F2                          dc.b    $F2
(1)   14/   E8AF4 :                     
(1)   15/   E8AF4 :                     Sound57_PlatformKnock_Voices:
(1)   16/   E8AF4 :                     ;	Voice $00
(1)   17/   E8AF4 :                     ;	$04
(1)   18/   E8AF4 :                     ;	$09, $00, $70, $30, 	$1C, $DF, $1F, $1F, 	$15, $0B, $12, $0F
(1)   19/   E8AF4 :                     ;	$0C, $00, $0D, $0D, 	$07, $FA, $2F, $FA, 	$00, $00, $29, $00
(1)   20/   E8AF4 : (MACRO)             	smpsVcAlgorithm     $04
(1)   20/   E8AF4 : =$4                 vcAlgorithm set $04
(1)   21/   E8AF4 : (MACRO)             	smpsVcFeedback      $00
(1)   21/   E8AF4 : =$0                 vcFeedback set $00
(1)   22/   E8AF4 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E8AF4 : =$0                 vcUnusedBits set $00
(1)   22/   E8AF4 : =$0                 vcD1R1Unk set 0
(1)   22/   E8AF4 : =$0                 vcD1R2Unk set 0
(1)   22/   E8AF4 : =$0                 vcD1R3Unk set 0
(1)   22/   E8AF4 : =$0                 vcD1R4Unk set 0
(1)   23/   E8AF4 : (MACRO)             	smpsVcDetune        $03, $07, $00, $00
(1)   23/   E8AF4 : =$3                 vcDT1 set $03
(1)   23/   E8AF4 : =$7                 vcDT2 set $07
(1)   23/   E8AF4 : =$0                 vcDT3 set $00
(1)   23/   E8AF4 : =$0                 vcDT4 set $00
(1)   24/   E8AF4 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $09
(1)   24/   E8AF4 : =$0                 vcCF1 set $00
(1)   24/   E8AF4 : =$0                 vcCF2 set $00
(1)   24/   E8AF4 : =$0                 vcCF3 set $00
(1)   24/   E8AF4 : =$9                 vcCF4 set $09
(1)   25/   E8AF4 : (MACRO)             	smpsVcRateScale     $00, $00, $03, $00
(1)   25/   E8AF4 : =$0                 vcRS1 set $00
(1)   25/   E8AF4 : =$0                 vcRS2 set $00
(1)   25/   E8AF4 : =$3                 vcRS3 set $03
(1)   25/   E8AF4 : =$0                 vcRS4 set $00
(1)   26/   E8AF4 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1C
(1)   26/   E8AF4 : =$1F                vcAR1 set $1F
(1)   26/   E8AF4 : =$1F                vcAR2 set $1F
(1)   26/   E8AF4 : =$1F                vcAR3 set $1F
(1)   26/   E8AF4 : =$1C                vcAR4 set $1C
(1)   27/   E8AF4 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8AF4 : =$0                 vcAM1 set $00<<7
(1)   27/   E8AF4 : =$0                 vcAM2 set $00<<7
(1)   27/   E8AF4 : =$0                 vcAM3 set $00<<7
(1)   27/   E8AF4 : =$0                 vcAM4 set $00<<7
(1)   28/   E8AF4 : (MACRO)             	smpsVcDecayRate1    $0F, $12, $0B, $15
(1)   28/   E8AF4 : =$F                 vcD1R1 set $0F
(1)   28/   E8AF4 : =$12                vcD1R2 set $12
(1)   28/   E8AF4 : =$B                 vcD1R3 set $0B
(1)   28/   E8AF4 : =$15                vcD1R4 set $15
(1)   29/   E8AF4 : (MACRO)             	smpsVcDecayRate2    $0D, $0D, $00, $0C
(1)   29/   E8AF4 : =$D                 vcD2R1 set $0D
(1)   29/   E8AF4 : =$D                 vcD2R2 set $0D
(1)   29/   E8AF4 : =$0                 vcD2R3 set $00
(1)   29/   E8AF4 : =$C                 vcD2R4 set $0C
(1)   30/   E8AF4 : (MACRO)             	smpsVcDecayLevel    $0F, $02, $0F, $00
(1)   30/   E8AF4 : =$F                 vcDL1 set $0F
(1)   30/   E8AF4 : =$2                 vcDL2 set $02
(1)   30/   E8AF4 : =$F                 vcDL3 set $0F
(1)   30/   E8AF4 : =$0                 vcDL4 set $00
(1)   31/   E8AF4 : (MACRO)             	smpsVcReleaseRate   $0A, $0F, $0A, $07
(1)   31/   E8AF4 : =$A                 vcRR1 set $0A
(1)   31/   E8AF4 : =$F                 vcRR2 set $0F
(1)   31/   E8AF4 : =$A                 vcRR3 set $0A
(1)   31/   E8AF4 : =$7                 vcRR4 set $07
(1)   32/   E8AF4 : (MACRO)             	smpsVcTotalLevel    $00, $29, $00, $00
(1)   32/   E8AF4 : =$0                 vcTL1 set $00
(1)   32/   E8AF4 : =$29                vcTL2 set $29
(1)   32/   E8AF4 : =$0                 vcTL3 set $00
(1)   32/   E8AF4 : =$0                 vcTL4 set $00
(1)   32/   E8AF4 : 04                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8AF5 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8AF5 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8AF5 : =$0                 vcTLMask4 set 0
(1)   32/   E8AF5 : =$0                 vcTLMask3 set 0
(1)   32/   E8AF5 : =$0                 vcTLMask2 set 0
(1)   32/   E8AF5 : =$0                 vcTLMask1 set 0
(1)   32/   E8AF5 :                     
(1)   32/   E8AF5 :                     
(1)   32/   E8AF5 : 0900 7030                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8AF9 : 1CDF 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8AFD : 150B 120F                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8B01 : 0C00 0D0D                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8B05 : 07FA 2FFA                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8B09 : 0000 2900                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8B0D :                     
(1)   34/   E8B0D :                     
  571/   E8B0D :                        Sound58:	include "sfx-improved/D8 - Bonus Bumper.asm"
(1)    1/   E8B0D :                     Sound58_BonusBumper_Header:
(1)    2/   E8B0D : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8B0D :                     
(1)    2/   E8B0D : =$3                 SourceDriver set 3
(1)    2/   E8B0D :                     
(1)    2/   E8B0D : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8B0D :                     
(1)    2/   E8B0D : =$E8B0D             songStart set *
(1)    2/   E8B0D :                     
(1)    2/   E8B0D :                     
(1)    3/   E8B0D : (MACRO)             	smpsHeaderVoice     Sound58_BonusBumper_Voices
(1)    3/   E8B0D : 1E8B                                dc.w    z80_ptr(SOUND58_BONUSBUMPER_VOICES)
(1)    4/   E8B0F : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8B0F : 01                          dc.b    $01
(1)    5/   E8B10 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8B10 : 01                          dc.b    $01
(1)    6/   E8B11 :                     
(1)    7/   E8B11 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound58_BonusBumper_FM5,	$00, $07
(1)    7/   E8B11 : 8005                        dc.b    $80,CFM5
(1)    7/   E8B13 :  (MACRO-2)                  CheckedChannelPointer SOUND58_BONUSBUMPER_FM5
(1)    7/   E8B13 : 178B                                dc.w    z80_ptr(SOUND58_BONUSBUMPER_FM5)
(1)    7/   E8B15 : 00                                  dc.b    $00
(1)    7/   E8B16 : 07                          dc.b    $07
(1)    8/   E8B17 :                     
(1)    9/   E8B17 :                     ; FM5 Data
(1)   10/   E8B17 :                     Sound58_BonusBumper_FM5:
(1)   11/   E8B17 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8B17 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8B17 : EF00                                dc.b    $EF,$00
(1)   12/   E8B19 : B306 B315           	dc.b	nD4, $06, nD4, $15
(1)   13/   E8B1D : (MACRO)             	smpsStop
(1)   13/   E8B1D : F2                          dc.b    $F2
(1)   14/   E8B1E :                     
(1)   15/   E8B1E :                     Sound58_BonusBumper_Voices:
(1)   16/   E8B1E :                     ;	Voice $00
(1)   17/   E8B1E :                     ;	$3C
(1)   18/   E8B1E :                     ;	$05, $01, $0A, $01, 	$56, $5C, $5C, $5C, 	$0E, $11, $11, $11
(1)   19/   E8B1E :                     ;	$09, $0A, $06, $0A, 	$4F, $3F, $3F, $3F, 	$17, $80, $20, $80
(1)   20/   E8B1E : (MACRO)             	smpsVcAlgorithm     $04
(1)   20/   E8B1E : =$4                 vcAlgorithm set $04
(1)   21/   E8B1E : (MACRO)             	smpsVcFeedback      $07
(1)   21/   E8B1E : =$7                 vcFeedback set $07
(1)   22/   E8B1E : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E8B1E : =$0                 vcUnusedBits set $00
(1)   22/   E8B1E : =$0                 vcD1R1Unk set 0
(1)   22/   E8B1E : =$0                 vcD1R2Unk set 0
(1)   22/   E8B1E : =$0                 vcD1R3Unk set 0
(1)   22/   E8B1E : =$0                 vcD1R4Unk set 0
(1)   23/   E8B1E : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   23/   E8B1E : =$0                 vcDT1 set $00
(1)   23/   E8B1E : =$0                 vcDT2 set $00
(1)   23/   E8B1E : =$0                 vcDT3 set $00
(1)   23/   E8B1E : =$0                 vcDT4 set $00
(1)   24/   E8B1E : (MACRO)             	smpsVcCoarseFreq    $01, $0A, $01, $05
(1)   24/   E8B1E : =$1                 vcCF1 set $01
(1)   24/   E8B1E : =$A                 vcCF2 set $0A
(1)   24/   E8B1E : =$1                 vcCF3 set $01
(1)   24/   E8B1E : =$5                 vcCF4 set $05
(1)   25/   E8B1E : (MACRO)             	smpsVcRateScale     $01, $01, $01, $01
(1)   25/   E8B1E : =$1                 vcRS1 set $01
(1)   25/   E8B1E : =$1                 vcRS2 set $01
(1)   25/   E8B1E : =$1                 vcRS3 set $01
(1)   25/   E8B1E : =$1                 vcRS4 set $01
(1)   26/   E8B1E : (MACRO)             	smpsVcAttackRate    $1C, $1C, $1C, $16
(1)   26/   E8B1E : =$1C                vcAR1 set $1C
(1)   26/   E8B1E : =$1C                vcAR2 set $1C
(1)   26/   E8B1E : =$1C                vcAR3 set $1C
(1)   26/   E8B1E : =$16                vcAR4 set $16
(1)   27/   E8B1E : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8B1E : =$0                 vcAM1 set $00<<5
(1)   27/   E8B1E : =$0                 vcAM2 set $00<<5
(1)   27/   E8B1E : =$0                 vcAM3 set $00<<5
(1)   27/   E8B1E : =$0                 vcAM4 set $00<<5
(1)   28/   E8B1E : (MACRO)             	smpsVcDecayRate1    $11, $11, $11, $0E
(1)   28/   E8B1E : =$11                vcD1R1 set $11
(1)   28/   E8B1E : =$11                vcD1R2 set $11
(1)   28/   E8B1E : =$11                vcD1R3 set $11
(1)   28/   E8B1E : =$E                 vcD1R4 set $0E
(1)   29/   E8B1E : (MACRO)             	smpsVcDecayRate2    $0A, $06, $0A, $09
(1)   29/   E8B1E : =$A                 vcD2R1 set $0A
(1)   29/   E8B1E : =$6                 vcD2R2 set $06
(1)   29/   E8B1E : =$A                 vcD2R3 set $0A
(1)   29/   E8B1E : =$9                 vcD2R4 set $09
(1)   30/   E8B1E : (MACRO)             	smpsVcDecayLevel    $03, $03, $03, $04
(1)   30/   E8B1E : =$3                 vcDL1 set $03
(1)   30/   E8B1E : =$3                 vcDL2 set $03
(1)   30/   E8B1E : =$3                 vcDL3 set $03
(1)   30/   E8B1E : =$4                 vcDL4 set $04
(1)   31/   E8B1E : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E8B1E : =$F                 vcRR1 set $0F
(1)   31/   E8B1E : =$F                 vcRR2 set $0F
(1)   31/   E8B1E : =$F                 vcRR3 set $0F
(1)   31/   E8B1E : =$F                 vcRR4 set $0F
(1)   32/   E8B1E : (MACRO)             	smpsVcTotalLevel    $00, $20, $00, $17
(1)   32/   E8B1E : =$0                 vcTL1 set $00
(1)   32/   E8B1E : =$20                vcTL2 set $20
(1)   32/   E8B1E : =$0                 vcTL3 set $00
(1)   32/   E8B1E : =$17                vcTL4 set $17
(1)   32/   E8B1E : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8B1F :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8B1F :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8B1F : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E8B1F : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E8B1F : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E8B1F : =$80                vcTLMask1 set $80
(1)   32/   E8B1F :                     
(1)   32/   E8B1F :                     
(1)   32/   E8B1F : 0501 0A01                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8B23 : 565C 5C5C                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8B27 : 0E11 1111                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8B2B : 090A 060A                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8B2F : 4F3F 3F3F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8B33 : 1780 2080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8B37 :                     
(1)   34/   E8B37 :                     
  572/   E8B37 :                        Sound59:	include "sfx-improved/D9 - Large Bumper.asm"
(1)    1/   E8B37 :                     Sound59_LargeBumper_Header:
(1)    2/   E8B37 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8B37 :                     
(1)    2/   E8B37 : =$3                 SourceDriver set 3
(1)    2/   E8B37 :                     
(1)    2/   E8B37 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8B37 :                     
(1)    2/   E8B37 : =$E8B37             songStart set *
(1)    2/   E8B37 :                     
(1)    2/   E8B37 :                     
(1)    3/   E8B37 : (MACRO)             	smpsHeaderVoice     Sound59_LargeBumper_Voices
(1)    3/   E8B37 : 5E8B                                dc.w    z80_ptr(SOUND59_LARGEBUMPER_VOICES)
(1)    4/   E8B39 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8B39 : 01                          dc.b    $01
(1)    5/   E8B3A : (MACRO)             	smpsHeaderChanSFX   $03
(1)    5/   E8B3A : 03                          dc.b    $03
(1)    6/   E8B3B :                     
(1)    7/   E8B3B : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound59_LargeBumper_FM4,	$00, $00
(1)    7/   E8B3B : 8004                        dc.b    $80,CFM4
(1)    7/   E8B3D :  (MACRO-2)                  CheckedChannelPointer SOUND59_LARGEBUMPER_FM4
(1)    7/   E8B3D : 4D8B                                dc.w    z80_ptr(SOUND59_LARGEBUMPER_FM4)
(1)    7/   E8B3F : 00                                  dc.b    $00
(1)    7/   E8B40 : 00                          dc.b    $00
(1)    8/   E8B41 : (MACRO)             	smpsHeaderSFXChannel cFM3, Sound59_LargeBumper_FM3,	$00, $02
(1)    8/   E8B41 : 8002                        dc.b    $80,CFM3
(1)    8/   E8B43 :  (MACRO-2)                  CheckedChannelPointer SOUND59_LARGEBUMPER_FM3
(1)    8/   E8B43 : 548B                                dc.w    z80_ptr(SOUND59_LARGEBUMPER_FM3)
(1)    8/   E8B45 : 00                                  dc.b    $00
(1)    8/   E8B46 : 02                          dc.b    $02
(1)    9/   E8B47 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound59_LargeBumper_FM5,	$00, $00
(1)    9/   E8B47 : 8005                        dc.b    $80,CFM5
(1)    9/   E8B49 :  (MACRO-2)                  CheckedChannelPointer SOUND59_LARGEBUMPER_FM5
(1)    9/   E8B49 : 598B                                dc.w    z80_ptr(SOUND59_LARGEBUMPER_FM5)
(1)    9/   E8B4B : 00                                  dc.b    $00
(1)    9/   E8B4C : 00                          dc.b    $00
(1)   10/   E8B4D :                     
(1)   11/   E8B4D :                     ; FM4 Data
(1)   12/   E8B4D :                     Sound59_LargeBumper_FM4:
(1)   13/   E8B4D : (MACRO)             	smpsSetvoice        $00
(1)   13/   E8B4D :  (MACRO-2)                  smpsFMvoice $00
(1)   13/   E8B4D : EF00                                dc.b    $EF,$00
(1)   14/   E8B4F : (MACRO)             	smpsAlterNote       $0C
(1)   14/   E8B4F :  (MACRO-2)                  smpsDetune      $0C
(1)   14/   E8B4F : E10C                        dc.b    $E1,$0C
(1)   15/   E8B51 : B514                	dc.b	nE4, $14
(1)   16/   E8B53 : (MACRO)             	smpsStop
(1)   16/   E8B53 : F2                          dc.b    $F2
(1)   17/   E8B54 :                     
(1)   18/   E8B54 :                     ; FM3 Data
(1)   19/   E8B54 :                     Sound59_LargeBumper_FM3:
(1)   20/   E8B54 : (MACRO)             	smpsSetvoice        $01
(1)   20/   E8B54 :  (MACRO-2)                  smpsFMvoice $01
(1)   20/   E8B54 : EF01                                dc.b    $EF,$01
(1)   21/   E8B56 : 9A03                	dc.b	nCs2, $03
(1)   22/   E8B58 : (MACRO)             	smpsStop
(1)   22/   E8B58 : F2                          dc.b    $F2
(1)   23/   E8B59 :                     
(1)   24/   E8B59 :                     ; FM5 Data
(1)   25/   E8B59 :                     Sound59_LargeBumper_FM5:
(1)   26/   E8B59 : (MACRO)             	smpsSetvoice        $00
(1)   26/   E8B59 :  (MACRO-2)                  smpsFMvoice $00
(1)   26/   E8B59 : EF00                                dc.b    $EF,$00
(1)   27/   E8B5B : B614                	dc.b	nF4, $14
(1)   28/   E8B5D : (MACRO)             	smpsStop
(1)   28/   E8B5D : F2                          dc.b    $F2
(1)   29/   E8B5E :                     
(1)   30/   E8B5E :                     Sound59_LargeBumper_Voices:
(1)   31/   E8B5E :                     ;	Voice $00
(1)   32/   E8B5E :                     ;	$32
(1)   33/   E8B5E :                     ;	$30, $40, $30, $70, 	$1F, $1F, $1F, $1F, 	$12, $01, $0A, $0D
(1)   34/   E8B5E :                     ;	$00, $01, $01, $0C, 	$00, $C3, $23, $F6, 	$08, $1C, $07, $03
(1)   35/   E8B5E : (MACRO)             	smpsVcAlgorithm     $02
(1)   35/   E8B5E : =$2                 vcAlgorithm set $02
(1)   36/   E8B5E : (MACRO)             	smpsVcFeedback      $06
(1)   36/   E8B5E : =$6                 vcFeedback set $06
(1)   37/   E8B5E : (MACRO)             	smpsVcUnusedBits    $00
(1)   37/   E8B5E : =$0                 vcUnusedBits set $00
(1)   37/   E8B5E : =$0                 vcD1R1Unk set 0
(1)   37/   E8B5E : =$0                 vcD1R2Unk set 0
(1)   37/   E8B5E : =$0                 vcD1R3Unk set 0
(1)   37/   E8B5E : =$0                 vcD1R4Unk set 0
(1)   38/   E8B5E : (MACRO)             	smpsVcDetune        $07, $03, $04, $03
(1)   38/   E8B5E : =$7                 vcDT1 set $07
(1)   38/   E8B5E : =$3                 vcDT2 set $03
(1)   38/   E8B5E : =$4                 vcDT3 set $04
(1)   38/   E8B5E : =$3                 vcDT4 set $03
(1)   39/   E8B5E : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   39/   E8B5E : =$0                 vcCF1 set $00
(1)   39/   E8B5E : =$0                 vcCF2 set $00
(1)   39/   E8B5E : =$0                 vcCF3 set $00
(1)   39/   E8B5E : =$0                 vcCF4 set $00
(1)   40/   E8B5E : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   40/   E8B5E : =$0                 vcRS1 set $00
(1)   40/   E8B5E : =$0                 vcRS2 set $00
(1)   40/   E8B5E : =$0                 vcRS3 set $00
(1)   40/   E8B5E : =$0                 vcRS4 set $00
(1)   41/   E8B5E : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   41/   E8B5E : =$1F                vcAR1 set $1F
(1)   41/   E8B5E : =$1F                vcAR2 set $1F
(1)   41/   E8B5E : =$1F                vcAR3 set $1F
(1)   41/   E8B5E : =$1F                vcAR4 set $1F
(1)   42/   E8B5E : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   42/   E8B5E : =$0                 vcAM1 set $00<<7
(1)   42/   E8B5E : =$0                 vcAM2 set $00<<7
(1)   42/   E8B5E : =$0                 vcAM3 set $00<<7
(1)   42/   E8B5E : =$0                 vcAM4 set $00<<7
(1)   43/   E8B5E : (MACRO)             	smpsVcDecayRate1    $0D, $0A, $01, $12
(1)   43/   E8B5E : =$D                 vcD1R1 set $0D
(1)   43/   E8B5E : =$A                 vcD1R2 set $0A
(1)   43/   E8B5E : =$1                 vcD1R3 set $01
(1)   43/   E8B5E : =$12                vcD1R4 set $12
(1)   44/   E8B5E : (MACRO)             	smpsVcDecayRate2    $0C, $01, $01, $00
(1)   44/   E8B5E : =$C                 vcD2R1 set $0C
(1)   44/   E8B5E : =$1                 vcD2R2 set $01
(1)   44/   E8B5E : =$1                 vcD2R3 set $01
(1)   44/   E8B5E : =$0                 vcD2R4 set $00
(1)   45/   E8B5E : (MACRO)             	smpsVcDecayLevel    $0F, $02, $0C, $00
(1)   45/   E8B5E : =$F                 vcDL1 set $0F
(1)   45/   E8B5E : =$2                 vcDL2 set $02
(1)   45/   E8B5E : =$C                 vcDL3 set $0C
(1)   45/   E8B5E : =$0                 vcDL4 set $00
(1)   46/   E8B5E : (MACRO)             	smpsVcReleaseRate   $06, $03, $03, $00
(1)   46/   E8B5E : =$6                 vcRR1 set $06
(1)   46/   E8B5E : =$3                 vcRR2 set $03
(1)   46/   E8B5E : =$3                 vcRR3 set $03
(1)   46/   E8B5E : =$0                 vcRR4 set $00
(1)   47/   E8B5E : (MACRO)             	smpsVcTotalLevel    $03, $07, $1C, $08
(1)   47/   E8B5E : =$3                 vcTL1 set $03
(1)   47/   E8B5E : =$7                 vcTL2 set $07
(1)   47/   E8B5E : =$1C                vcTL3 set $1C
(1)   47/   E8B5E : =$8                 vcTL4 set $08
(1)   47/   E8B5E : 32                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   47/   E8B5F :                     ;   0     1     2     3     4     5     6     7
(1)   47/   E8B5F :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   47/   E8B5F : =$0                 vcTLMask4 set 0
(1)   47/   E8B5F : =$0                 vcTLMask3 set 0
(1)   47/   E8B5F : =$0                 vcTLMask2 set 0
(1)   47/   E8B5F : =$0                 vcTLMask1 set 0
(1)   47/   E8B5F :                     
(1)   47/   E8B5F :                     
(1)   47/   E8B5F : 3040 3070                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   47/   E8B63 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   47/   E8B67 : 1201 0A0D                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   47/   E8B6B : 0001 010C                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   47/   E8B6F : 00C3 23F6                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   47/   E8B73 : 081C 0703                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   48/   E8B77 :                     
(1)   49/   E8B77 :                     ;	Voice $01
(1)   50/   E8B77 :                     ;	$05
(1)   51/   E8B77 :                     ;	$00, $00, $00, $00, 	$1F, $1F, $1F, $1F, 	$12, $0C, $0C, $0C
(1)   52/   E8B77 :                     ;	$12, $08, $08, $08, 	$1F, $5F, $5F, $5F, 	$07, $80, $80, $80
(1)   53/   E8B77 : (MACRO)             	smpsVcAlgorithm     $05
(1)   53/   E8B77 : =$5                 vcAlgorithm set $05
(1)   54/   E8B77 : (MACRO)             	smpsVcFeedback      $00
(1)   54/   E8B77 : =$0                 vcFeedback set $00
(1)   55/   E8B77 : (MACRO)             	smpsVcUnusedBits    $00
(1)   55/   E8B77 : =$0                 vcUnusedBits set $00
(1)   55/   E8B77 : =$0                 vcD1R1Unk set 0
(1)   55/   E8B77 : =$0                 vcD1R2Unk set 0
(1)   55/   E8B77 : =$0                 vcD1R3Unk set 0
(1)   55/   E8B77 : =$0                 vcD1R4Unk set 0
(1)   56/   E8B77 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   56/   E8B77 : =$0                 vcDT1 set $00
(1)   56/   E8B77 : =$0                 vcDT2 set $00
(1)   56/   E8B77 : =$0                 vcDT3 set $00
(1)   56/   E8B77 : =$0                 vcDT4 set $00
(1)   57/   E8B77 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   57/   E8B77 : =$0                 vcCF1 set $00
(1)   57/   E8B77 : =$0                 vcCF2 set $00
(1)   57/   E8B77 : =$0                 vcCF3 set $00
(1)   57/   E8B77 : =$0                 vcCF4 set $00
(1)   58/   E8B77 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   58/   E8B77 : =$0                 vcRS1 set $00
(1)   58/   E8B77 : =$0                 vcRS2 set $00
(1)   58/   E8B77 : =$0                 vcRS3 set $00
(1)   58/   E8B77 : =$0                 vcRS4 set $00
(1)   59/   E8B77 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   59/   E8B77 : =$1F                vcAR1 set $1F
(1)   59/   E8B77 : =$1F                vcAR2 set $1F
(1)   59/   E8B77 : =$1F                vcAR3 set $1F
(1)   59/   E8B77 : =$1F                vcAR4 set $1F
(1)   60/   E8B77 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   60/   E8B77 : =$0                 vcAM1 set $00<<7
(1)   60/   E8B77 : =$0                 vcAM2 set $00<<7
(1)   60/   E8B77 : =$0                 vcAM3 set $00<<7
(1)   60/   E8B77 : =$0                 vcAM4 set $00<<7
(1)   61/   E8B77 : (MACRO)             	smpsVcDecayRate1    $0C, $0C, $0C, $12
(1)   61/   E8B77 : =$C                 vcD1R1 set $0C
(1)   61/   E8B77 : =$C                 vcD1R2 set $0C
(1)   61/   E8B77 : =$C                 vcD1R3 set $0C
(1)   61/   E8B77 : =$12                vcD1R4 set $12
(1)   62/   E8B77 : (MACRO)             	smpsVcDecayRate2    $08, $08, $08, $12
(1)   62/   E8B77 : =$8                 vcD2R1 set $08
(1)   62/   E8B77 : =$8                 vcD2R2 set $08
(1)   62/   E8B77 : =$8                 vcD2R3 set $08
(1)   62/   E8B77 : =$12                vcD2R4 set $12
(1)   63/   E8B77 : (MACRO)             	smpsVcDecayLevel    $05, $05, $05, $01
(1)   63/   E8B77 : =$5                 vcDL1 set $05
(1)   63/   E8B77 : =$5                 vcDL2 set $05
(1)   63/   E8B77 : =$5                 vcDL3 set $05
(1)   63/   E8B77 : =$1                 vcDL4 set $01
(1)   64/   E8B77 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   64/   E8B77 : =$F                 vcRR1 set $0F
(1)   64/   E8B77 : =$F                 vcRR2 set $0F
(1)   64/   E8B77 : =$F                 vcRR3 set $0F
(1)   64/   E8B77 : =$F                 vcRR4 set $0F
(1)   65/   E8B77 : (MACRO)             	smpsVcTotalLevel    $80, $80, $80, $07
(1)   65/   E8B77 : =$80                vcTL1 set $80
(1)   65/   E8B77 : =$80                vcTL2 set $80
(1)   65/   E8B77 : =$80                vcTL3 set $80
(1)   65/   E8B77 : =$7                 vcTL4 set $07
(1)   65/   E8B77 : 05                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   65/   E8B78 :                     ;   0     1     2     3     4     5     6     7
(1)   65/   E8B78 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   65/   E8B78 : =$0                 vcTLMask4 set 0
(1)   65/   E8B78 : =$0                 vcTLMask3 set 0
(1)   65/   E8B78 : =$0                 vcTLMask2 set 0
(1)   65/   E8B78 : =$0                 vcTLMask1 set 0
(1)   65/   E8B78 :                     
(1)   65/   E8B78 :                     
(1)   65/   E8B78 : 0000 0000                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   65/   E8B7C : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   65/   E8B80 : 120C 0C0C                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   65/   E8B84 : 1208 0808                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   65/   E8B88 : 1F5F 5F5F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   65/   E8B8C : 0780 8080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   66/   E8B90 :                     
(1)   67/   E8B90 :                     
  573/   E8B90 :                        Sound5A:	include "sfx-improved/DA - Gloop.asm"
(1)    1/   E8B90 :                     Sound5A_Gloop_Header:
(1)    2/   E8B90 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8B90 :                     
(1)    2/   E8B90 : =$3                 SourceDriver set 3
(1)    2/   E8B90 :                     
(1)    2/   E8B90 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8B90 :                     
(1)    2/   E8B90 : =$E8B90             songStart set *
(1)    2/   E8B90 :                     
(1)    2/   E8B90 :                     
(1)    3/   E8B90 : (MACRO)             	smpsHeaderVoice     Sound5A_Gloop_Voices
(1)    3/   E8B90 : A48B                                dc.w    z80_ptr(SOUND5A_GLOOP_VOICES)
(1)    4/   E8B92 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8B92 : 01                          dc.b    $01
(1)    5/   E8B93 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8B93 : 01                          dc.b    $01
(1)    6/   E8B94 :                     
(1)    7/   E8B94 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound5A_Gloop_FM5,	$00, $00
(1)    7/   E8B94 : 8005                        dc.b    $80,CFM5
(1)    7/   E8B96 :  (MACRO-2)                  CheckedChannelPointer SOUND5A_GLOOP_FM5
(1)    7/   E8B96 : 9A8B                                dc.w    z80_ptr(SOUND5A_GLOOP_FM5)
(1)    7/   E8B98 : 00                                  dc.b    $00
(1)    7/   E8B99 : 00                          dc.b    $00
(1)    8/   E8B9A :                     
(1)    9/   E8B9A :                     ; FM5 Data
(1)   10/   E8B9A :                     Sound5A_Gloop_FM5:
(1)   11/   E8B9A : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8B9A :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8B9A : EF00                                dc.b    $EF,$00
(1)   12/   E8B9C : (MACRO)             	smpsModSet          $01, $01, $7F, $F1
(1)   12/   E8B9C : F0                          dc.b    $F0
(1)   12/   E8B9D : 0101 7FF1                           dc.b    $01,$01,$7F,$F1
(1)   12/   E8BA1 :                             ;dc.b   $01,$7F,$F1
(1)   13/   E8BA1 : AA0A                	dc.b	nF3, $0A
(1)   14/   E8BA3 : (MACRO)             	smpsStop
(1)   14/   E8BA3 : F2                          dc.b    $F2
(1)   15/   E8BA4 :                     
(1)   16/   E8BA4 :                     Sound5A_Gloop_Voices:
(1)   17/   E8BA4 :                     ;	Voice $00
(1)   18/   E8BA4 :                     ;	$47
(1)   19/   E8BA4 :                     ;	$03, $02, $02, $04, 	$5F, $5F, $5F, $5F, 	$0E, $11, $1A, $0A
(1)   20/   E8BA4 :                     ;	$09, $0A, $0A, $0A, 	$4F, $3F, $3F, $3F, 	$7F, $80, $80, $A3
(1)   21/   E8BA4 : (MACRO)             	smpsVcAlgorithm     $07
(1)   21/   E8BA4 : =$7                 vcAlgorithm set $07
(1)   22/   E8BA4 : (MACRO)             	smpsVcFeedback      $00
(1)   22/   E8BA4 : =$0                 vcFeedback set $00
(1)   23/   E8BA4 : (MACRO)             	smpsVcUnusedBits    $01
(1)   23/   E8BA4 : =$1                 vcUnusedBits set $01
(1)   23/   E8BA4 : =$0                 vcD1R1Unk set 0
(1)   23/   E8BA4 : =$0                 vcD1R2Unk set 0
(1)   23/   E8BA4 : =$0                 vcD1R3Unk set 0
(1)   23/   E8BA4 : =$0                 vcD1R4Unk set 0
(1)   24/   E8BA4 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   24/   E8BA4 : =$0                 vcDT1 set $00
(1)   24/   E8BA4 : =$0                 vcDT2 set $00
(1)   24/   E8BA4 : =$0                 vcDT3 set $00
(1)   24/   E8BA4 : =$0                 vcDT4 set $00
(1)   25/   E8BA4 : (MACRO)             	smpsVcCoarseFreq    $04, $02, $02, $03
(1)   25/   E8BA4 : =$4                 vcCF1 set $04
(1)   25/   E8BA4 : =$2                 vcCF2 set $02
(1)   25/   E8BA4 : =$2                 vcCF3 set $02
(1)   25/   E8BA4 : =$3                 vcCF4 set $03
(1)   26/   E8BA4 : (MACRO)             	smpsVcRateScale     $01, $01, $01, $01
(1)   26/   E8BA4 : =$1                 vcRS1 set $01
(1)   26/   E8BA4 : =$1                 vcRS2 set $01
(1)   26/   E8BA4 : =$1                 vcRS3 set $01
(1)   26/   E8BA4 : =$1                 vcRS4 set $01
(1)   27/   E8BA4 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   27/   E8BA4 : =$1F                vcAR1 set $1F
(1)   27/   E8BA4 : =$1F                vcAR2 set $1F
(1)   27/   E8BA4 : =$1F                vcAR3 set $1F
(1)   27/   E8BA4 : =$1F                vcAR4 set $1F
(1)   28/   E8BA4 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   28/   E8BA4 : =$0                 vcAM1 set $00<<7
(1)   28/   E8BA4 : =$0                 vcAM2 set $00<<7
(1)   28/   E8BA4 : =$0                 vcAM3 set $00<<7
(1)   28/   E8BA4 : =$0                 vcAM4 set $00<<7
(1)   29/   E8BA4 : (MACRO)             	smpsVcDecayRate1    $0A, $1A, $11, $0E
(1)   29/   E8BA4 : =$A                 vcD1R1 set $0A
(1)   29/   E8BA4 : =$1A                vcD1R2 set $1A
(1)   29/   E8BA4 : =$11                vcD1R3 set $11
(1)   29/   E8BA4 : =$E                 vcD1R4 set $0E
(1)   30/   E8BA4 : (MACRO)             	smpsVcDecayRate2    $0A, $0A, $0A, $09
(1)   30/   E8BA4 : =$A                 vcD2R1 set $0A
(1)   30/   E8BA4 : =$A                 vcD2R2 set $0A
(1)   30/   E8BA4 : =$A                 vcD2R3 set $0A
(1)   30/   E8BA4 : =$9                 vcD2R4 set $09
(1)   31/   E8BA4 : (MACRO)             	smpsVcDecayLevel    $03, $03, $03, $04
(1)   31/   E8BA4 : =$3                 vcDL1 set $03
(1)   31/   E8BA4 : =$3                 vcDL2 set $03
(1)   31/   E8BA4 : =$3                 vcDL3 set $03
(1)   31/   E8BA4 : =$4                 vcDL4 set $04
(1)   32/   E8BA4 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   32/   E8BA4 : =$F                 vcRR1 set $0F
(1)   32/   E8BA4 : =$F                 vcRR2 set $0F
(1)   32/   E8BA4 : =$F                 vcRR3 set $0F
(1)   32/   E8BA4 : =$F                 vcRR4 set $0F
(1)   33/   E8BA4 : (MACRO)             	smpsVcTotalLevel    $A3, $80, $80, $7F
(1)   33/   E8BA4 : =$A3                vcTL1 set $A3
(1)   33/   E8BA4 : =$80                vcTL2 set $80
(1)   33/   E8BA4 : =$80                vcTL3 set $80
(1)   33/   E8BA4 : =$7F                vcTL4 set $7F
(1)   33/   E8BA4 : 47                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   33/   E8BA5 :                     ;   0     1     2     3     4     5     6     7
(1)   33/   E8BA5 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   33/   E8BA5 : =$0                 vcTLMask4 set 0
(1)   33/   E8BA5 : =$0                 vcTLMask3 set 0
(1)   33/   E8BA5 : =$0                 vcTLMask2 set 0
(1)   33/   E8BA5 : =$0                 vcTLMask1 set 0
(1)   33/   E8BA5 :                     
(1)   33/   E8BA5 :                     
(1)   33/   E8BA5 : 0302 0204                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   33/   E8BA9 : 5F5F 5F5F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   33/   E8BAD : 0E11 1A0A                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   33/   E8BB1 : 090A 0A0A                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   33/   E8BB5 : 4F3F 3F3F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   33/   E8BB9 : 7F80 80A3                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   34/   E8BBD :                     
(1)   35/   E8BBD :                     
  574/   E8BBD :                        Sound5B:	include "sfx-improved/DB - Pre-Arrow Firing.asm"
(1)    1/   E8BBD :                     Sound5B_PreArrowFiring_Header:
(1)    2/   E8BBD : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8BBD :                     
(1)    2/   E8BBD : =$3                 SourceDriver set 3
(1)    2/   E8BBD :                     
(1)    2/   E8BBD : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8BBD :                     
(1)    2/   E8BBD : =$E8BBD             songStart set *
(1)    2/   E8BBD :                     
(1)    2/   E8BBD :                     
(1)    3/   E8BBD : (MACRO)             	smpsHeaderVoice     Sound5B_PreArrowFiring_Voices
(1)    3/   E8BBD : D88B                                dc.w    z80_ptr(SOUND5B_PREARROWFIRING_VOICES)
(1)    4/   E8BBF : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8BBF : 01                          dc.b    $01
(1)    5/   E8BC0 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8BC0 : 01                          dc.b    $01
(1)    6/   E8BC1 :                     
(1)    7/   E8BC1 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound5B_PreArrowFiring_FM5,	$00, $00
(1)    7/   E8BC1 : 8005                        dc.b    $80,CFM5
(1)    7/   E8BC3 :  (MACRO-2)                  CheckedChannelPointer SOUND5B_PREARROWFIRING_FM5
(1)    7/   E8BC3 : C78B                                dc.w    z80_ptr(SOUND5B_PREARROWFIRING_FM5)
(1)    7/   E8BC5 : 00                                  dc.b    $00
(1)    7/   E8BC6 : 00                          dc.b    $00
(1)    8/   E8BC7 :                     
(1)    9/   E8BC7 :                     ; FM5 Data
(1)   10/   E8BC7 :                     Sound5B_PreArrowFiring_FM5:
(1)   11/   E8BC7 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8BC7 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8BC7 : EF00                                dc.b    $EF,$00
(1)   12/   E8BC9 : 8002 A501 E7        	dc.b	nRst, $02, nC3, $01, smpsNoAttack
(1)   13/   E8BCE :                     
(1)   14/   E8BCE :                     Sound5B_PreArrowFiring_Loop00:
(1)   15/   E8BCE : 01E7                	dc.b	$01, smpsNoAttack
(1)   16/   E8BD0 : (MACRO)             	smpsAlterVol        $02
(1)   16/   E8BD0 : E602                        dc.b    $E6,$02
(1)   17/   E8BD2 : (MACRO)             	smpsLoop            $00, $05, Sound5B_PreArrowFiring_Loop00
(1)   17/   E8BD2 : F7                          dc.b    $F7
(1)   17/   E8BD3 : 0005                        dc.b    $00,$05
(1)   17/   E8BD5 : CE8B                                dc.w    z80_ptr(SOUND5B_PREARROWFIRING_LOOP00)
(1)   18/   E8BD7 : (MACRO)             	smpsStop
(1)   18/   E8BD7 : F2                          dc.b    $F2
(1)   19/   E8BD8 :                     
(1)   20/   E8BD8 :                     Sound5B_PreArrowFiring_Voices:
(1)   21/   E8BD8 :                     ;	Voice $00
(1)   22/   E8BD8 :                     ;	$38
(1)   23/   E8BD8 :                     ;	$0F, $0F, $0F, $0F, 	$1F, $1F, $1F, $0E, 	$00, $00, $00, $00
(1)   24/   E8BD8 :                     ;	$00, $00, $00, $00, 	$0F, $0F, $0F, $1F, 	$00, $00, $00, $80
(1)   25/   E8BD8 : (MACRO)             	smpsVcAlgorithm     $00
(1)   25/   E8BD8 : =$0                 vcAlgorithm set $00
(1)   26/   E8BD8 : (MACRO)             	smpsVcFeedback      $07
(1)   26/   E8BD8 : =$7                 vcFeedback set $07
(1)   27/   E8BD8 : (MACRO)             	smpsVcUnusedBits    $00
(1)   27/   E8BD8 : =$0                 vcUnusedBits set $00
(1)   27/   E8BD8 : =$0                 vcD1R1Unk set 0
(1)   27/   E8BD8 : =$0                 vcD1R2Unk set 0
(1)   27/   E8BD8 : =$0                 vcD1R3Unk set 0
(1)   27/   E8BD8 : =$0                 vcD1R4Unk set 0
(1)   28/   E8BD8 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   28/   E8BD8 : =$0                 vcDT1 set $00
(1)   28/   E8BD8 : =$0                 vcDT2 set $00
(1)   28/   E8BD8 : =$0                 vcDT3 set $00
(1)   28/   E8BD8 : =$0                 vcDT4 set $00
(1)   29/   E8BD8 : (MACRO)             	smpsVcCoarseFreq    $0F, $0F, $0F, $0F
(1)   29/   E8BD8 : =$F                 vcCF1 set $0F
(1)   29/   E8BD8 : =$F                 vcCF2 set $0F
(1)   29/   E8BD8 : =$F                 vcCF3 set $0F
(1)   29/   E8BD8 : =$F                 vcCF4 set $0F
(1)   30/   E8BD8 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   30/   E8BD8 : =$0                 vcRS1 set $00
(1)   30/   E8BD8 : =$0                 vcRS2 set $00
(1)   30/   E8BD8 : =$0                 vcRS3 set $00
(1)   30/   E8BD8 : =$0                 vcRS4 set $00
(1)   31/   E8BD8 : (MACRO)             	smpsVcAttackRate    $0E, $1F, $1F, $1F
(1)   31/   E8BD8 : =$E                 vcAR1 set $0E
(1)   31/   E8BD8 : =$1F                vcAR2 set $1F
(1)   31/   E8BD8 : =$1F                vcAR3 set $1F
(1)   31/   E8BD8 : =$1F                vcAR4 set $1F
(1)   32/   E8BD8 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   32/   E8BD8 : =$0                 vcAM1 set $00<<5
(1)   32/   E8BD8 : =$0                 vcAM2 set $00<<5
(1)   32/   E8BD8 : =$0                 vcAM3 set $00<<5
(1)   32/   E8BD8 : =$0                 vcAM4 set $00<<5
(1)   33/   E8BD8 : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   33/   E8BD8 : =$0                 vcD1R1 set $00
(1)   33/   E8BD8 : =$0                 vcD1R2 set $00
(1)   33/   E8BD8 : =$0                 vcD1R3 set $00
(1)   33/   E8BD8 : =$0                 vcD1R4 set $00
(1)   34/   E8BD8 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   34/   E8BD8 : =$0                 vcD2R1 set $00
(1)   34/   E8BD8 : =$0                 vcD2R2 set $00
(1)   34/   E8BD8 : =$0                 vcD2R3 set $00
(1)   34/   E8BD8 : =$0                 vcD2R4 set $00
(1)   35/   E8BD8 : (MACRO)             	smpsVcDecayLevel    $01, $00, $00, $00
(1)   35/   E8BD8 : =$1                 vcDL1 set $01
(1)   35/   E8BD8 : =$0                 vcDL2 set $00
(1)   35/   E8BD8 : =$0                 vcDL3 set $00
(1)   35/   E8BD8 : =$0                 vcDL4 set $00
(1)   36/   E8BD8 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   36/   E8BD8 : =$F                 vcRR1 set $0F
(1)   36/   E8BD8 : =$F                 vcRR2 set $0F
(1)   36/   E8BD8 : =$F                 vcRR3 set $0F
(1)   36/   E8BD8 : =$F                 vcRR4 set $0F
(1)   37/   E8BD8 : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $00
(1)   37/   E8BD8 : =$0                 vcTL1 set $00
(1)   37/   E8BD8 : =$0                 vcTL2 set $00
(1)   37/   E8BD8 : =$0                 vcTL3 set $00
(1)   37/   E8BD8 : =$0                 vcTL4 set $00
(1)   37/   E8BD8 : 38                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   37/   E8BD9 :                     ;   0     1     2     3     4     5     6     7
(1)   37/   E8BD9 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   37/   E8BD9 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   37/   E8BD9 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   37/   E8BD9 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   37/   E8BD9 : =$80                vcTLMask1 set $80
(1)   37/   E8BD9 :                     
(1)   37/   E8BD9 :                     
(1)   37/   E8BD9 : 0F0F 0F0F                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   37/   E8BDD : 1F1F 1F0E                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   37/   E8BE1 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   37/   E8BE5 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   37/   E8BE9 : 0F0F 0F1F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   37/   E8BED : 0000 0080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   38/   E8BF1 :                     
(1)   39/   E8BF1 :                     
  575/   E8BF1 :                        Sound5C:	include "sfx-improved/DC - Fire.asm"
(1)    1/   E8BF1 :                     Sound5C_Fire_Header:
(1)    2/   E8BF1 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8BF1 :                     
(1)    2/   E8BF1 : =$3                 SourceDriver set 3
(1)    2/   E8BF1 :                     
(1)    2/   E8BF1 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8BF1 :                     
(1)    2/   E8BF1 : =$E8BF1             songStart set *
(1)    2/   E8BF1 :                     
(1)    2/   E8BF1 :                     
(1)    3/   E8BF1 : (MACRO)             	smpsHeaderVoice     Sound5C_Fire_Voices
(1)    3/   E8BF1 : 1F8C                                dc.w    z80_ptr(SOUND5C_FIRE_VOICES)
(1)    4/   E8BF3 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8BF3 : 01                          dc.b    $01
(1)    5/   E8BF4 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8BF4 : 02                          dc.b    $02
(1)    6/   E8BF5 :                     
(1)    7/   E8BF5 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound5C_Fire_FM4,	$00, $0E
(1)    7/   E8BF5 : 8004                        dc.b    $80,CFM4
(1)    7/   E8BF7 :  (MACRO-2)                  CheckedChannelPointer SOUND5C_FIRE_FM4
(1)    7/   E8BF7 : 018C                                dc.w    z80_ptr(SOUND5C_FIRE_FM4)
(1)    7/   E8BF9 : 00                                  dc.b    $00
(1)    7/   E8BFA : 0E                          dc.b    $0E
(1)    8/   E8BFB : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound5C_Fire_PSG3,	$00, $00
(1)    8/   E8BFB : 80C0                        dc.b    $80,CPSG3
(1)    8/   E8BFD :  (MACRO-2)                  CheckedChannelPointer SOUND5C_FIRE_PSG3
(1)    8/   E8BFD : 0F8C                                dc.w    z80_ptr(SOUND5C_FIRE_PSG3)
(1)    8/   E8BFF :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8BFF : 00                                  dc.b    $00
(1)    8/   E8C00 : 00                          dc.b    $00
(1)    9/   E8C01 :                     
(1)   10/   E8C01 :                     ; FM4 Data
(1)   11/   E8C01 :                     Sound5C_Fire_FM4:
(1)   12/   E8C01 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8C01 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8C01 : EF00                                dc.b    $EF,$00
(1)   13/   E8C03 : 8540                	dc.b	nE0, $40
(1)   14/   E8C05 :                     
(1)   15/   E8C05 :                     Sound5C_Fire_Loop00:
(1)   16/   E8C05 : E704                	dc.b	smpsNoAttack, $04
(1)   17/   E8C07 : (MACRO)             	smpsAlterVol        $04
(1)   17/   E8C07 : E604                        dc.b    $E6,$04
(1)   18/   E8C09 : (MACRO)             	smpsLoop            $00, $0A, Sound5C_Fire_Loop00
(1)   18/   E8C09 : F7                          dc.b    $F7
(1)   18/   E8C0A : 000A                        dc.b    $00,$0A
(1)   18/   E8C0C : 058C                                dc.w    z80_ptr(SOUND5C_FIRE_LOOP00)
(1)   19/   E8C0E : (MACRO)             	smpsStop
(1)   19/   E8C0E : F2                          dc.b    $F2
(1)   20/   E8C0F :                     
(1)   21/   E8C0F :                     ; PSG3 Data
(1)   22/   E8C0F :                     Sound5C_Fire_PSG3:
(1)   23/   E8C0F : (MACRO)             	smpsPSGvoice        $00
(1)   23/   E8C0F : F500                        dc.b    $F5,$00
(1)   24/   E8C11 : (MACRO)             	smpsPSGform         $E7
(1)   24/   E8C11 : F3E7                        dc.b    $F3,$E7
(1)   25/   E8C13 : A740                	dc.b	nD3, $40
(1)   26/   E8C15 :                     
(1)   27/   E8C15 :                     Sound5C_Fire_Loop01:
(1)   28/   E8C15 : E708                	dc.b	smpsNoAttack, $08
(1)   29/   E8C17 : (MACRO)             	smpsPSGAlterVol     $01
(1)   29/   E8C17 : EC01                        dc.b    $EC,$01
(1)   30/   E8C19 : (MACRO)             	smpsLoop            $00, $05, Sound5C_Fire_Loop01
(1)   30/   E8C19 : F7                          dc.b    $F7
(1)   30/   E8C1A : 0005                        dc.b    $00,$05
(1)   30/   E8C1C : 158C                                dc.w    z80_ptr(SOUND5C_FIRE_LOOP01)
(1)   31/   E8C1E : (MACRO)             	smpsStop
(1)   31/   E8C1E : F2                          dc.b    $F2
(1)   32/   E8C1F :                     
(1)   33/   E8C1F :                     Sound5C_Fire_Voices:
(1)   34/   E8C1F :                     ;	Voice $00
(1)   35/   E8C1F :                     ;	$FA
(1)   36/   E8C1F :                     ;	$12, $01, $01, $01, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   37/   E8C1F :                     ;	$00, $00, $00, $00, 	$0F, $0F, $0F, $0F, 	$81, $14, $8E, $80
(1)   38/   E8C1F : (MACRO)             	smpsVcAlgorithm     $02
(1)   38/   E8C1F : =$2                 vcAlgorithm set $02
(1)   39/   E8C1F : (MACRO)             	smpsVcFeedback      $07
(1)   39/   E8C1F : =$7                 vcFeedback set $07
(1)   40/   E8C1F : (MACRO)             	smpsVcUnusedBits    $03
(1)   40/   E8C1F : =$3                 vcUnusedBits set $03
(1)   40/   E8C1F : =$0                 vcD1R1Unk set 0
(1)   40/   E8C1F : =$0                 vcD1R2Unk set 0
(1)   40/   E8C1F : =$0                 vcD1R3Unk set 0
(1)   40/   E8C1F : =$0                 vcD1R4Unk set 0
(1)   41/   E8C1F : (MACRO)             	smpsVcDetune        $00, $00, $00, $01
(1)   41/   E8C1F : =$0                 vcDT1 set $00
(1)   41/   E8C1F : =$0                 vcDT2 set $00
(1)   41/   E8C1F : =$0                 vcDT3 set $00
(1)   41/   E8C1F : =$1                 vcDT4 set $01
(1)   42/   E8C1F : (MACRO)             	smpsVcCoarseFreq    $01, $01, $01, $02
(1)   42/   E8C1F : =$1                 vcCF1 set $01
(1)   42/   E8C1F : =$1                 vcCF2 set $01
(1)   42/   E8C1F : =$1                 vcCF3 set $01
(1)   42/   E8C1F : =$2                 vcCF4 set $02
(1)   43/   E8C1F : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   43/   E8C1F : =$0                 vcRS1 set $00
(1)   43/   E8C1F : =$0                 vcRS2 set $00
(1)   43/   E8C1F : =$0                 vcRS3 set $00
(1)   43/   E8C1F : =$0                 vcRS4 set $00
(1)   44/   E8C1F : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   44/   E8C1F : =$1F                vcAR1 set $1F
(1)   44/   E8C1F : =$1F                vcAR2 set $1F
(1)   44/   E8C1F : =$1F                vcAR3 set $1F
(1)   44/   E8C1F : =$1F                vcAR4 set $1F
(1)   45/   E8C1F : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   45/   E8C1F : =$0                 vcAM1 set $00<<5
(1)   45/   E8C1F : =$0                 vcAM2 set $00<<5
(1)   45/   E8C1F : =$0                 vcAM3 set $00<<5
(1)   45/   E8C1F : =$0                 vcAM4 set $00<<5
(1)   46/   E8C1F : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   46/   E8C1F : =$0                 vcD1R1 set $00
(1)   46/   E8C1F : =$0                 vcD1R2 set $00
(1)   46/   E8C1F : =$0                 vcD1R3 set $00
(1)   46/   E8C1F : =$0                 vcD1R4 set $00
(1)   47/   E8C1F : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   47/   E8C1F : =$0                 vcD2R1 set $00
(1)   47/   E8C1F : =$0                 vcD2R2 set $00
(1)   47/   E8C1F : =$0                 vcD2R3 set $00
(1)   47/   E8C1F : =$0                 vcD2R4 set $00
(1)   48/   E8C1F : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   48/   E8C1F : =$0                 vcDL1 set $00
(1)   48/   E8C1F : =$0                 vcDL2 set $00
(1)   48/   E8C1F : =$0                 vcDL3 set $00
(1)   48/   E8C1F : =$0                 vcDL4 set $00
(1)   49/   E8C1F : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   49/   E8C1F : =$F                 vcRR1 set $0F
(1)   49/   E8C1F : =$F                 vcRR2 set $0F
(1)   49/   E8C1F : =$F                 vcRR3 set $0F
(1)   49/   E8C1F : =$F                 vcRR4 set $0F
(1)   50/   E8C1F : (MACRO)             	smpsVcTotalLevel    $00, $8E, $14, $81
(1)   50/   E8C1F : =$0                 vcTL1 set $00
(1)   50/   E8C1F : =$8E                vcTL2 set $8E
(1)   50/   E8C1F : =$14                vcTL3 set $14
(1)   50/   E8C1F : =$81                vcTL4 set $81
(1)   50/   E8C1F : FA                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   50/   E8C20 :                     ;   0     1     2     3     4     5     6     7
(1)   50/   E8C20 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   50/   E8C20 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   50/   E8C20 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   50/   E8C20 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   50/   E8C20 : =$80                vcTLMask1 set $80
(1)   50/   E8C20 :                     
(1)   50/   E8C20 :                     
(1)   50/   E8C20 : 1201 0101                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   50/   E8C24 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   50/   E8C28 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   50/   E8C2C : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   50/   E8C30 : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   50/   E8C34 : 8114 8E80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   51/   E8C38 :                     
(1)   52/   E8C38 :                     
  576/   E8C38 :                        Sound5D:	include "sfx-improved/DD - Arrow Stick.asm"
(1)    1/   E8C38 :                     Sound5D_ArrowStick_Header:
(1)    2/   E8C38 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8C38 :                     
(1)    2/   E8C38 : =$3                 SourceDriver set 3
(1)    2/   E8C38 :                     
(1)    2/   E8C38 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8C38 :                     
(1)    2/   E8C38 : =$E8C38             songStart set *
(1)    2/   E8C38 :                     
(1)    2/   E8C38 :                     
(1)    3/   E8C38 : (MACRO)             	smpsHeaderVoice     Sound5D_ArrowStick_Voices
(1)    3/   E8C38 : 478C                                dc.w    z80_ptr(SOUND5D_ARROWSTICK_VOICES)
(1)    4/   E8C3A : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8C3A : 01                          dc.b    $01
(1)    5/   E8C3B : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8C3B : 01                          dc.b    $01
(1)    6/   E8C3C :                     
(1)    7/   E8C3C : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound5D_ArrowStick_FM5,	$00, $00
(1)    7/   E8C3C : 8005                        dc.b    $80,CFM5
(1)    7/   E8C3E :  (MACRO-2)                  CheckedChannelPointer SOUND5D_ARROWSTICK_FM5
(1)    7/   E8C3E : 428C                                dc.w    z80_ptr(SOUND5D_ARROWSTICK_FM5)
(1)    7/   E8C40 : 00                                  dc.b    $00
(1)    7/   E8C41 : 00                          dc.b    $00
(1)    8/   E8C42 :                     
(1)    9/   E8C42 :                     ; FM5 Data
(1)   10/   E8C42 :                     Sound5D_ArrowStick_FM5:
(1)   11/   E8C42 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8C42 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8C42 : EF00                                dc.b    $EF,$00
(1)   12/   E8C44 : C004                	dc.b	nEb5, $04
(1)   13/   E8C46 : (MACRO)             	smpsStop
(1)   13/   E8C46 : F2                          dc.b    $F2
(1)   14/   E8C47 :                     
(1)   15/   E8C47 :                     Sound5D_ArrowStick_Voices:
(1)   16/   E8C47 :                     ;	Voice $00
(1)   17/   E8C47 :                     ;	$28
(1)   18/   E8C47 :                     ;	$2F, $5F, $37, $2B, 	$1F, $1F, $1F, $1F, 	$15, $15, $15, $13
(1)   19/   E8C47 :                     ;	$13, $0C, $0D, $10, 	$2F, $2F, $3F, $2F, 	$00, $10, $1F, $80
(1)   20/   E8C47 : (MACRO)             	smpsVcAlgorithm     $00
(1)   20/   E8C47 : =$0                 vcAlgorithm set $00
(1)   21/   E8C47 : (MACRO)             	smpsVcFeedback      $05
(1)   21/   E8C47 : =$5                 vcFeedback set $05
(1)   22/   E8C47 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E8C47 : =$0                 vcUnusedBits set $00
(1)   22/   E8C47 : =$0                 vcD1R1Unk set 0
(1)   22/   E8C47 : =$0                 vcD1R2Unk set 0
(1)   22/   E8C47 : =$0                 vcD1R3Unk set 0
(1)   22/   E8C47 : =$0                 vcD1R4Unk set 0
(1)   23/   E8C47 : (MACRO)             	smpsVcDetune        $02, $03, $05, $02
(1)   23/   E8C47 : =$2                 vcDT1 set $02
(1)   23/   E8C47 : =$3                 vcDT2 set $03
(1)   23/   E8C47 : =$5                 vcDT3 set $05
(1)   23/   E8C47 : =$2                 vcDT4 set $02
(1)   24/   E8C47 : (MACRO)             	smpsVcCoarseFreq    $0B, $07, $0F, $0F
(1)   24/   E8C47 : =$B                 vcCF1 set $0B
(1)   24/   E8C47 : =$7                 vcCF2 set $07
(1)   24/   E8C47 : =$F                 vcCF3 set $0F
(1)   24/   E8C47 : =$F                 vcCF4 set $0F
(1)   25/   E8C47 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E8C47 : =$0                 vcRS1 set $00
(1)   25/   E8C47 : =$0                 vcRS2 set $00
(1)   25/   E8C47 : =$0                 vcRS3 set $00
(1)   25/   E8C47 : =$0                 vcRS4 set $00
(1)   26/   E8C47 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E8C47 : =$1F                vcAR1 set $1F
(1)   26/   E8C47 : =$1F                vcAR2 set $1F
(1)   26/   E8C47 : =$1F                vcAR3 set $1F
(1)   26/   E8C47 : =$1F                vcAR4 set $1F
(1)   27/   E8C47 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8C47 : =$0                 vcAM1 set $00<<5
(1)   27/   E8C47 : =$0                 vcAM2 set $00<<5
(1)   27/   E8C47 : =$0                 vcAM3 set $00<<5
(1)   27/   E8C47 : =$0                 vcAM4 set $00<<5
(1)   28/   E8C47 : (MACRO)             	smpsVcDecayRate1    $13, $15, $15, $15
(1)   28/   E8C47 : =$13                vcD1R1 set $13
(1)   28/   E8C47 : =$15                vcD1R2 set $15
(1)   28/   E8C47 : =$15                vcD1R3 set $15
(1)   28/   E8C47 : =$15                vcD1R4 set $15
(1)   29/   E8C47 : (MACRO)             	smpsVcDecayRate2    $10, $0D, $0C, $13
(1)   29/   E8C47 : =$10                vcD2R1 set $10
(1)   29/   E8C47 : =$D                 vcD2R2 set $0D
(1)   29/   E8C47 : =$C                 vcD2R3 set $0C
(1)   29/   E8C47 : =$13                vcD2R4 set $13
(1)   30/   E8C47 : (MACRO)             	smpsVcDecayLevel    $02, $03, $02, $02
(1)   30/   E8C47 : =$2                 vcDL1 set $02
(1)   30/   E8C47 : =$3                 vcDL2 set $03
(1)   30/   E8C47 : =$2                 vcDL3 set $02
(1)   30/   E8C47 : =$2                 vcDL4 set $02
(1)   31/   E8C47 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E8C47 : =$F                 vcRR1 set $0F
(1)   31/   E8C47 : =$F                 vcRR2 set $0F
(1)   31/   E8C47 : =$F                 vcRR3 set $0F
(1)   31/   E8C47 : =$F                 vcRR4 set $0F
(1)   32/   E8C47 : (MACRO)             	smpsVcTotalLevel    $00, $1F, $10, $00
(1)   32/   E8C47 : =$0                 vcTL1 set $00
(1)   32/   E8C47 : =$1F                vcTL2 set $1F
(1)   32/   E8C47 : =$10                vcTL3 set $10
(1)   32/   E8C47 : =$0                 vcTL4 set $00
(1)   32/   E8C47 : 28                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8C48 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8C48 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8C48 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E8C48 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E8C48 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E8C48 : =$80                vcTLMask1 set $80
(1)   32/   E8C48 :                     
(1)   32/   E8C48 :                     
(1)   32/   E8C48 : 2F5F 372B                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8C4C : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8C50 : 1515 1513                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8C54 : 130C 0D10                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8C58 : 2F2F 3F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8C5C : 0010 1F80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8C60 :                     
(1)   34/   E8C60 :                     
  577/   E8C60 :                        Sound5E:	include "sfx-improved/DE - Helicopter.asm"
(1)    1/   E8C60 :                     Sound5E_WingFortress_Header:
(1)    2/   E8C60 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8C60 :                     
(1)    2/   E8C60 : =$3                 SourceDriver set 3
(1)    2/   E8C60 :                     
(1)    2/   E8C60 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8C60 :                     
(1)    2/   E8C60 : =$E8C60             songStart set *
(1)    2/   E8C60 :                     
(1)    2/   E8C60 :                     
(1)    3/   E8C60 : (MACRO)             	smpsHeaderVoice     Sound5E_WingFortress_Voices
(1)    3/   E8C60 : 818C                                dc.w    z80_ptr(SOUND5E_WINGFORTRESS_VOICES)
(1)    4/   E8C62 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8C62 : 01                          dc.b    $01
(1)    5/   E8C63 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8C63 : 01                          dc.b    $01
(1)    6/   E8C64 :                     
(1)    7/   E8C64 : (MACRO)             	smpsHeaderSFXChannel cFM3, Sound5E_WingFortress_FM3,	$14, $05
(1)    7/   E8C64 : 8002                        dc.b    $80,CFM3
(1)    7/   E8C66 :  (MACRO-2)                  CheckedChannelPointer SOUND5E_WINGFORTRESS_FM3
(1)    7/   E8C66 : 6A8C                                dc.w    z80_ptr(SOUND5E_WINGFORTRESS_FM3)
(1)    7/   E8C68 : 14                                  dc.b    $14
(1)    7/   E8C69 : 05                          dc.b    $05
(1)    8/   E8C6A :                     
(1)    9/   E8C6A :                     ; FM3 Data
(1)   10/   E8C6A :                     Sound5E_WingFortress_FM3:
(1)   11/   E8C6A : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8C6A :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8C6A : EF00                                dc.b    $EF,$00
(1)   12/   E8C6C :                     
(1)   13/   E8C6C :                     Sound5E_WingFortress_Loop00:
(1)   14/   E8C6C : 9502 9501           	dc.b	nAb1, $02, nAb1, $01
(1)   15/   E8C70 : (MACRO)             	smpsLoop            $00, $13, Sound5E_WingFortress_Loop00
(1)   15/   E8C70 : F7                          dc.b    $F7
(1)   15/   E8C71 : 0013                        dc.b    $00,$13
(1)   15/   E8C73 : 6C8C                                dc.w    z80_ptr(SOUND5E_WINGFORTRESS_LOOP00)
(1)   16/   E8C75 :                     
(1)   17/   E8C75 :                     Sound5E_WingFortress_Loop01:
(1)   18/   E8C75 : 9502 9501           	dc.b	nAb1, $02, nAb1, $01
(1)   19/   E8C79 : (MACRO)             	smpsAlterVol        $01
(1)   19/   E8C79 : E601                        dc.b    $E6,$01
(1)   20/   E8C7B : (MACRO)             	smpsLoop            $00, $1B, Sound5E_WingFortress_Loop01
(1)   20/   E8C7B : F7                          dc.b    $F7
(1)   20/   E8C7C : 001B                        dc.b    $00,$1B
(1)   20/   E8C7E : 758C                                dc.w    z80_ptr(SOUND5E_WINGFORTRESS_LOOP01)
(1)   21/   E8C80 : (MACRO)             	smpsStop
(1)   21/   E8C80 : F2                          dc.b    $F2
(1)   22/   E8C81 :                     
(1)   23/   E8C81 :                     Sound5E_WingFortress_Voices:
(1)   24/   E8C81 :                     ;	Voice $00
(1)   25/   E8C81 :                     ;	$35
(1)   26/   E8C81 :                     ;	$30, $40, $44, $51, 	$1F, $1F, $1F, $1F, 	$10, $13, $00, $15
(1)   27/   E8C81 :                     ;	$1F, $1F, $00, $1A, 	$7F, $7F, $0F, $5F, 	$02, $80, $A8, $80
(1)   28/   E8C81 : (MACRO)             	smpsVcAlgorithm     $05
(1)   28/   E8C81 : =$5                 vcAlgorithm set $05
(1)   29/   E8C81 : (MACRO)             	smpsVcFeedback      $06
(1)   29/   E8C81 : =$6                 vcFeedback set $06
(1)   30/   E8C81 : (MACRO)             	smpsVcUnusedBits    $00
(1)   30/   E8C81 : =$0                 vcUnusedBits set $00
(1)   30/   E8C81 : =$0                 vcD1R1Unk set 0
(1)   30/   E8C81 : =$0                 vcD1R2Unk set 0
(1)   30/   E8C81 : =$0                 vcD1R3Unk set 0
(1)   30/   E8C81 : =$0                 vcD1R4Unk set 0
(1)   31/   E8C81 : (MACRO)             	smpsVcDetune        $05, $04, $04, $03
(1)   31/   E8C81 : =$5                 vcDT1 set $05
(1)   31/   E8C81 : =$4                 vcDT2 set $04
(1)   31/   E8C81 : =$4                 vcDT3 set $04
(1)   31/   E8C81 : =$3                 vcDT4 set $03
(1)   32/   E8C81 : (MACRO)             	smpsVcCoarseFreq    $01, $04, $00, $00
(1)   32/   E8C81 : =$1                 vcCF1 set $01
(1)   32/   E8C81 : =$4                 vcCF2 set $04
(1)   32/   E8C81 : =$0                 vcCF3 set $00
(1)   32/   E8C81 : =$0                 vcCF4 set $00
(1)   33/   E8C81 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   33/   E8C81 : =$0                 vcRS1 set $00
(1)   33/   E8C81 : =$0                 vcRS2 set $00
(1)   33/   E8C81 : =$0                 vcRS3 set $00
(1)   33/   E8C81 : =$0                 vcRS4 set $00
(1)   34/   E8C81 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   34/   E8C81 : =$1F                vcAR1 set $1F
(1)   34/   E8C81 : =$1F                vcAR2 set $1F
(1)   34/   E8C81 : =$1F                vcAR3 set $1F
(1)   34/   E8C81 : =$1F                vcAR4 set $1F
(1)   35/   E8C81 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   35/   E8C81 : =$0                 vcAM1 set $00<<5
(1)   35/   E8C81 : =$0                 vcAM2 set $00<<5
(1)   35/   E8C81 : =$0                 vcAM3 set $00<<5
(1)   35/   E8C81 : =$0                 vcAM4 set $00<<5
(1)   36/   E8C81 : (MACRO)             	smpsVcDecayRate1    $15, $00, $13, $10
(1)   36/   E8C81 : =$15                vcD1R1 set $15
(1)   36/   E8C81 : =$0                 vcD1R2 set $00
(1)   36/   E8C81 : =$13                vcD1R3 set $13
(1)   36/   E8C81 : =$10                vcD1R4 set $10
(1)   37/   E8C81 : (MACRO)             	smpsVcDecayRate2    $1A, $00, $1F, $1F
(1)   37/   E8C81 : =$1A                vcD2R1 set $1A
(1)   37/   E8C81 : =$0                 vcD2R2 set $00
(1)   37/   E8C81 : =$1F                vcD2R3 set $1F
(1)   37/   E8C81 : =$1F                vcD2R4 set $1F
(1)   38/   E8C81 : (MACRO)             	smpsVcDecayLevel    $05, $00, $07, $07
(1)   38/   E8C81 : =$5                 vcDL1 set $05
(1)   38/   E8C81 : =$0                 vcDL2 set $00
(1)   38/   E8C81 : =$7                 vcDL3 set $07
(1)   38/   E8C81 : =$7                 vcDL4 set $07
(1)   39/   E8C81 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   39/   E8C81 : =$F                 vcRR1 set $0F
(1)   39/   E8C81 : =$F                 vcRR2 set $0F
(1)   39/   E8C81 : =$F                 vcRR3 set $0F
(1)   39/   E8C81 : =$F                 vcRR4 set $0F
(1)   40/   E8C81 : (MACRO)             	smpsVcTotalLevel    $00, $28, $00, $02
(1)   40/   E8C81 : =$0                 vcTL1 set $00
(1)   40/   E8C81 : =$28                vcTL2 set $28
(1)   40/   E8C81 : =$0                 vcTL3 set $00
(1)   40/   E8C81 : =$2                 vcTL4 set $02
(1)   40/   E8C81 : 35                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   40/   E8C82 :                     ;   0     1     2     3     4     5     6     7
(1)   40/   E8C82 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   40/   E8C82 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   40/   E8C82 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   40/   E8C82 : =$80                vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   40/   E8C82 : =$80                vcTLMask1 set $80
(1)   40/   E8C82 :                     
(1)   40/   E8C82 :                     
(1)   40/   E8C82 : 3040 4451                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   40/   E8C86 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   40/   E8C8A : 1013 0015                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   40/   E8C8E : 1F1F 001A                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   40/   E8C92 : 7F7F 0F5F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   40/   E8C96 : 0280 A880                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   41/   E8C9A :                     
(1)   42/   E8C9A :                     
  578/   E8C9A :                        Sound5F:	include "sfx-improved/DF - Super Transform.asm"
(1)    1/   E8C9A :                     Sound5F_SuperTransform_Header:
(1)    2/   E8C9A : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8C9A :                     
(1)    2/   E8C9A : =$3                 SourceDriver set 3
(1)    2/   E8C9A :                     
(1)    2/   E8C9A : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8C9A :                     
(1)    2/   E8C9A : =$E8C9A             songStart set *
(1)    2/   E8C9A :                     
(1)    2/   E8C9A :                     
(1)    3/   E8C9A : (MACRO)             	smpsHeaderVoice     Sound5F_SuperTransform_Voices
(1)    3/   E8C9A : 048D                                dc.w    z80_ptr(SOUND5F_SUPERTRANSFORM_VOICES)
(1)    4/   E8C9C : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8C9C : 01                          dc.b    $01
(1)    5/   E8C9D : (MACRO)             	smpsHeaderChanSFX   $03
(1)    5/   E8C9D : 03                          dc.b    $03
(1)    6/   E8C9E :                     
(1)    7/   E8C9E : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound5F_SuperTransform_FM5,	$00, $00
(1)    7/   E8C9E : 8005                        dc.b    $80,CFM5
(1)    7/   E8CA0 :  (MACRO-2)                  CheckedChannelPointer SOUND5F_SUPERTRANSFORM_FM5
(1)    7/   E8CA0 : B08C                                dc.w    z80_ptr(SOUND5F_SUPERTRANSFORM_FM5)
(1)    7/   E8CA2 : 00                                  dc.b    $00
(1)    7/   E8CA3 : 00                          dc.b    $00
(1)    8/   E8CA4 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound5F_6C_PSG3,	$00, $00
(1)    8/   E8CA4 : 80C0                        dc.b    $80,CPSG3
(1)    8/   E8CA6 :  (MACRO-2)                  CheckedChannelPointer SOUND5F_6C_PSG3
(1)    8/   E8CA6 : D08C                                dc.w    z80_ptr(SOUND5F_6C_PSG3)
(1)    8/   E8CA8 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8CA8 : 00                                  dc.b    $00
(1)    8/   E8CA9 : 00                          dc.b    $00
(1)    9/   E8CAA : (MACRO)             	smpsHeaderSFXChannel cPSG2, Sound5F_6C_PSG2,	$00, $00
(1)    9/   E8CAA : 80A0                        dc.b    $80,CPSG2
(1)    9/   E8CAC :  (MACRO-2)                  CheckedChannelPointer SOUND5F_6C_PSG2
(1)    9/   E8CAC : E58C                                dc.w    z80_ptr(SOUND5F_6C_PSG2)
(1)    9/   E8CAE :  (MACRO-2)                          PSGPitchConvert $00
(1)    9/   E8CAE : 00                                  dc.b    $00
(1)    9/   E8CAF : 00                          dc.b    $00
(1)   10/   E8CB0 :                     
(1)   11/   E8CB0 :                     ; FM5 Data
(1)   12/   E8CB0 :                     Sound5F_SuperTransform_FM5:
(1)   13/   E8CB0 : (MACRO)             	smpsSetvoice        $00
(1)   13/   E8CB0 :  (MACRO-2)                  smpsFMvoice $00
(1)   13/   E8CB0 : EF00                                dc.b    $EF,$00
(1)   14/   E8CB2 : (MACRO)             	smpsModSet          $01, $01, $C5, $1A
(1)   14/   E8CB2 : F0                          dc.b    $F0
(1)   14/   E8CB3 : 0101 C51A                           dc.b    $01,$01,$C5,$1A
(1)   14/   E8CB7 :                             ;dc.b   $01,$C5,$1A
(1)   15/   E8CB7 : CD07                	dc.b	nE6, $07
(1)   16/   E8CB9 : (MACRO)             	smpsAlterVol        $0A
(1)   16/   E8CB9 : E60A                        dc.b    $E6,$0A
(1)   17/   E8CBB : 8006                	dc.b	nRst, $06
(1)   18/   E8CBD : (MACRO)             	smpsSetvoice        $01
(1)   18/   E8CBD :  (MACRO-2)                  smpsFMvoice $01
(1)   18/   E8CBD : EF01                                dc.b    $EF,$01
(1)   19/   E8CBF : (MACRO)             	smpsModSet          $01, $01, $11, $FF
(1)   19/   E8CBF : F0                          dc.b    $F0
(1)   19/   E8CC0 : 0101 11FF                           dc.b    $01,$01,$11,$FF
(1)   19/   E8CC4 :                             ;dc.b   $01,$11,$FF
(1)   20/   E8CC4 : A228                	dc.b	nA2, $28
(1)   21/   E8CC6 :                     
(1)   22/   E8CC6 :                     Sound5F_SuperTransform_Loop00:
(1)   23/   E8CC6 : E703                	dc.b	smpsNoAttack, $03
(1)   24/   E8CC8 : (MACRO)             	smpsAlterVol        $03
(1)   24/   E8CC8 : E603                        dc.b    $E6,$03
(1)   25/   E8CCA : (MACRO)             	smpsLoop            $00, $05, Sound5F_SuperTransform_Loop00
(1)   25/   E8CCA : F7                          dc.b    $F7
(1)   25/   E8CCB : 0005                        dc.b    $00,$05
(1)   25/   E8CCD : C68C                                dc.w    z80_ptr(SOUND5F_SUPERTRANSFORM_LOOP00)
(1)   26/   E8CCF : (MACRO)             	smpsStop
(1)   26/   E8CCF : F2                          dc.b    $F2
(1)   27/   E8CD0 :                     
(1)   28/   E8CD0 :                     ; PSG3 Data
(1)   29/   E8CD0 :                     Sound5F_6C_PSG3:
(1)   30/   E8CD0 : 8007                	dc.b	nRst, $07
(1)   31/   E8CD2 : (MACRO)             	smpsModSet          $01, $02, $05, $FF
(1)   31/   E8CD2 : F0                          dc.b    $F0
(1)   31/   E8CD3 : 0102 05FF                           dc.b    $01,$02,$05,$FF
(1)   31/   E8CD7 :                             ;dc.b   $02,$05,$FF
(1)   32/   E8CD7 : (MACRO)             	smpsPSGform         $E7
(1)   32/   E8CD7 : F3E7                        dc.b    $F3,$E7
(1)   33/   E8CD9 : BB1D                	dc.b	nBb4, $1D
(1)   34/   E8CDB :                     
(1)   35/   E8CDB :                     Sound5F_SuperTransform_Loop03:
(1)   36/   E8CDB : E707                	dc.b	smpsNoAttack, $07
(1)   37/   E8CDD : (MACRO)             	smpsPSGAlterVol     $01
(1)   37/   E8CDD : EC01                        dc.b    $EC,$01
(1)   38/   E8CDF : (MACRO)             	smpsLoop            $00, $10, Sound5F_SuperTransform_Loop03
(1)   38/   E8CDF : F7                          dc.b    $F7
(1)   38/   E8CE0 : 0010                        dc.b    $00,$10
(1)   38/   E8CE2 : DB8C                                dc.w    z80_ptr(SOUND5F_SUPERTRANSFORM_LOOP03)
(1)   39/   E8CE4 : (MACRO)             	smpsStop
(1)   39/   E8CE4 : F2                          dc.b    $F2
(1)   40/   E8CE5 :                     
(1)   41/   E8CE5 :                     ; PSG2 Data
(1)   42/   E8CE5 :                     Sound5F_6C_PSG2:
(1)   43/   E8CE5 : 8016                	dc.b	nRst, $16
(1)   44/   E8CE7 : (MACRO)             	smpsPSGvoice        fTone_03
(1)   44/   E8CE7 : F503                        dc.b    $F5,FTONE_03
(1)   45/   E8CE9 :                     
(1)   46/   E8CE9 :                     Sound5F_SuperTransform_Loop01:
(1)   47/   E8CE9 : BF04 C1C3           	dc.b	nD5, $04, nE5, nFs5
(1)   48/   E8CED : (MACRO)             	smpsPSGAlterVol     $01
(1)   48/   E8CED : EC01                        dc.b    $EC,$01
(1)   49/   E8CEF : (MACRO)             	smpsAlterPitch      $FF
(1)   49/   E8CEF :  (MACRO-2)                  smpsChangeTransposition $FF
(1)   49/   E8CEF : FBFF                                dc.b    $FB,$FF
(1)   50/   E8CF1 : (MACRO)             	smpsLoop            $00, $05, Sound5F_SuperTransform_Loop01
(1)   50/   E8CF1 : F7                          dc.b    $F7
(1)   50/   E8CF2 : 0005                        dc.b    $00,$05
(1)   50/   E8CF4 : E98C                                dc.w    z80_ptr(SOUND5F_SUPERTRANSFORM_LOOP01)
(1)   51/   E8CF6 :                     
(1)   52/   E8CF6 :                     Sound5F_SuperTransform_Loop02:
(1)   53/   E8CF6 : BF04 C1C3           	dc.b	nD5, $04, nE5, nFs5
(1)   54/   E8CFA : (MACRO)             	smpsPSGAlterVol     $01
(1)   54/   E8CFA : EC01                        dc.b    $EC,$01
(1)   55/   E8CFC : (MACRO)             	smpsAlterPitch      $01
(1)   55/   E8CFC :  (MACRO-2)                  smpsChangeTransposition $01
(1)   55/   E8CFC : FB01                                dc.b    $FB,$01
(1)   56/   E8CFE : (MACRO)             	smpsLoop            $00, $07, Sound5F_SuperTransform_Loop02
(1)   56/   E8CFE : F7                          dc.b    $F7
(1)   56/   E8CFF : 0007                        dc.b    $00,$07
(1)   56/   E8D01 : F68C                                dc.w    z80_ptr(SOUND5F_SUPERTRANSFORM_LOOP02)
(1)   57/   E8D03 : (MACRO)             	smpsStop
(1)   57/   E8D03 : F2                          dc.b    $F2
(1)   58/   E8D04 :                     
(1)   59/   E8D04 :                     Sound5F_SuperTransform_Voices:
(1)   60/   E8D04 :                     ;	Voice $00
(1)   61/   E8D04 :                     ;	$FD
(1)   62/   E8D04 :                     ;	$09, $03, $00, $00, 	$1F, $1F, $1F, $1F, 	$10, $0C, $0C, $0C
(1)   63/   E8D04 :                     ;	$0B, $1F, $10, $05, 	$1F, $2F, $4F, $2F, 	$09, $84, $92, $8E
(1)   64/   E8D04 : (MACRO)             	smpsVcAlgorithm     $05
(1)   64/   E8D04 : =$5                 vcAlgorithm set $05
(1)   65/   E8D04 : (MACRO)             	smpsVcFeedback      $07
(1)   65/   E8D04 : =$7                 vcFeedback set $07
(1)   66/   E8D04 : (MACRO)             	smpsVcUnusedBits    $03
(1)   66/   E8D04 : =$3                 vcUnusedBits set $03
(1)   66/   E8D04 : =$0                 vcD1R1Unk set 0
(1)   66/   E8D04 : =$0                 vcD1R2Unk set 0
(1)   66/   E8D04 : =$0                 vcD1R3Unk set 0
(1)   66/   E8D04 : =$0                 vcD1R4Unk set 0
(1)   67/   E8D04 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   67/   E8D04 : =$0                 vcDT1 set $00
(1)   67/   E8D04 : =$0                 vcDT2 set $00
(1)   67/   E8D04 : =$0                 vcDT3 set $00
(1)   67/   E8D04 : =$0                 vcDT4 set $00
(1)   68/   E8D04 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $03, $09
(1)   68/   E8D04 : =$0                 vcCF1 set $00
(1)   68/   E8D04 : =$0                 vcCF2 set $00
(1)   68/   E8D04 : =$3                 vcCF3 set $03
(1)   68/   E8D04 : =$9                 vcCF4 set $09
(1)   69/   E8D04 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   69/   E8D04 : =$0                 vcRS1 set $00
(1)   69/   E8D04 : =$0                 vcRS2 set $00
(1)   69/   E8D04 : =$0                 vcRS3 set $00
(1)   69/   E8D04 : =$0                 vcRS4 set $00
(1)   70/   E8D04 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   70/   E8D04 : =$1F                vcAR1 set $1F
(1)   70/   E8D04 : =$1F                vcAR2 set $1F
(1)   70/   E8D04 : =$1F                vcAR3 set $1F
(1)   70/   E8D04 : =$1F                vcAR4 set $1F
(1)   71/   E8D04 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   71/   E8D04 : =$0                 vcAM1 set $00<<5
(1)   71/   E8D04 : =$0                 vcAM2 set $00<<5
(1)   71/   E8D04 : =$0                 vcAM3 set $00<<5
(1)   71/   E8D04 : =$0                 vcAM4 set $00<<5
(1)   72/   E8D04 : (MACRO)             	smpsVcDecayRate1    $0C, $0C, $0C, $10
(1)   72/   E8D04 : =$C                 vcD1R1 set $0C
(1)   72/   E8D04 : =$C                 vcD1R2 set $0C
(1)   72/   E8D04 : =$C                 vcD1R3 set $0C
(1)   72/   E8D04 : =$10                vcD1R4 set $10
(1)   73/   E8D04 : (MACRO)             	smpsVcDecayRate2    $05, $10, $1F, $0B
(1)   73/   E8D04 : =$5                 vcD2R1 set $05
(1)   73/   E8D04 : =$10                vcD2R2 set $10
(1)   73/   E8D04 : =$1F                vcD2R3 set $1F
(1)   73/   E8D04 : =$B                 vcD2R4 set $0B
(1)   74/   E8D04 : (MACRO)             	smpsVcDecayLevel    $02, $04, $02, $01
(1)   74/   E8D04 : =$2                 vcDL1 set $02
(1)   74/   E8D04 : =$4                 vcDL2 set $04
(1)   74/   E8D04 : =$2                 vcDL3 set $02
(1)   74/   E8D04 : =$1                 vcDL4 set $01
(1)   75/   E8D04 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   75/   E8D04 : =$F                 vcRR1 set $0F
(1)   75/   E8D04 : =$F                 vcRR2 set $0F
(1)   75/   E8D04 : =$F                 vcRR3 set $0F
(1)   75/   E8D04 : =$F                 vcRR4 set $0F
(1)   76/   E8D04 : (MACRO)             	smpsVcTotalLevel    $0E, $12, $04, $09
(1)   76/   E8D04 : =$E                 vcTL1 set $0E
(1)   76/   E8D04 : =$12                vcTL2 set $12
(1)   76/   E8D04 : =$4                 vcTL3 set $04
(1)   76/   E8D04 : =$9                 vcTL4 set $09
(1)   76/   E8D04 : FD                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   76/   E8D05 :                     ;   0     1     2     3     4     5     6     7
(1)   76/   E8D05 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   76/   E8D05 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   76/   E8D05 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   76/   E8D05 : =$80                vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   76/   E8D05 : =$80                vcTLMask1 set $80
(1)   76/   E8D05 :                     
(1)   76/   E8D05 :                     
(1)   76/   E8D05 : 0903 0000                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   76/   E8D09 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   76/   E8D0D : 100C 0C0C                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   76/   E8D11 : 0B1F 1005                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   76/   E8D15 : 1F2F 4F2F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   76/   E8D19 : 0984 928E                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   77/   E8D1D :                     
(1)   78/   E8D1D :                     ;	Voice $01
(1)   79/   E8D1D :                     ;	$3A
(1)   80/   E8D1D :                     ;	$70, $04, $30, $01, 	$0F, $19, $14, $16, 	$08, $0B, $0A, $05
(1)   81/   E8D1D :                     ;	$03, $03, $03, $05, 	$1F, $8F, $6F, $5F, 	$1F, $1F, $22, $80
(1)   82/   E8D1D : (MACRO)             	smpsVcAlgorithm     $02
(1)   82/   E8D1D : =$2                 vcAlgorithm set $02
(1)   83/   E8D1D : (MACRO)             	smpsVcFeedback      $07
(1)   83/   E8D1D : =$7                 vcFeedback set $07
(1)   84/   E8D1D : (MACRO)             	smpsVcUnusedBits    $00
(1)   84/   E8D1D : =$0                 vcUnusedBits set $00
(1)   84/   E8D1D : =$0                 vcD1R1Unk set 0
(1)   84/   E8D1D : =$0                 vcD1R2Unk set 0
(1)   84/   E8D1D : =$0                 vcD1R3Unk set 0
(1)   84/   E8D1D : =$0                 vcD1R4Unk set 0
(1)   85/   E8D1D : (MACRO)             	smpsVcDetune        $00, $03, $00, $07
(1)   85/   E8D1D : =$0                 vcDT1 set $00
(1)   85/   E8D1D : =$3                 vcDT2 set $03
(1)   85/   E8D1D : =$0                 vcDT3 set $00
(1)   85/   E8D1D : =$7                 vcDT4 set $07
(1)   86/   E8D1D : (MACRO)             	smpsVcCoarseFreq    $01, $00, $04, $00
(1)   86/   E8D1D : =$1                 vcCF1 set $01
(1)   86/   E8D1D : =$0                 vcCF2 set $00
(1)   86/   E8D1D : =$4                 vcCF3 set $04
(1)   86/   E8D1D : =$0                 vcCF4 set $00
(1)   87/   E8D1D : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   87/   E8D1D : =$0                 vcRS1 set $00
(1)   87/   E8D1D : =$0                 vcRS2 set $00
(1)   87/   E8D1D : =$0                 vcRS3 set $00
(1)   87/   E8D1D : =$0                 vcRS4 set $00
(1)   88/   E8D1D : (MACRO)             	smpsVcAttackRate    $16, $14, $19, $0F
(1)   88/   E8D1D : =$16                vcAR1 set $16
(1)   88/   E8D1D : =$14                vcAR2 set $14
(1)   88/   E8D1D : =$19                vcAR3 set $19
(1)   88/   E8D1D : =$F                 vcAR4 set $0F
(1)   89/   E8D1D : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   89/   E8D1D : =$0                 vcAM1 set $00<<5
(1)   89/   E8D1D : =$0                 vcAM2 set $00<<5
(1)   89/   E8D1D : =$0                 vcAM3 set $00<<5
(1)   89/   E8D1D : =$0                 vcAM4 set $00<<5
(1)   90/   E8D1D : (MACRO)             	smpsVcDecayRate1    $05, $0A, $0B, $08
(1)   90/   E8D1D : =$5                 vcD1R1 set $05
(1)   90/   E8D1D : =$A                 vcD1R2 set $0A
(1)   90/   E8D1D : =$B                 vcD1R3 set $0B
(1)   90/   E8D1D : =$8                 vcD1R4 set $08
(1)   91/   E8D1D : (MACRO)             	smpsVcDecayRate2    $05, $03, $03, $03
(1)   91/   E8D1D : =$5                 vcD2R1 set $05
(1)   91/   E8D1D : =$3                 vcD2R2 set $03
(1)   91/   E8D1D : =$3                 vcD2R3 set $03
(1)   91/   E8D1D : =$3                 vcD2R4 set $03
(1)   92/   E8D1D : (MACRO)             	smpsVcDecayLevel    $05, $06, $08, $01
(1)   92/   E8D1D : =$5                 vcDL1 set $05
(1)   92/   E8D1D : =$6                 vcDL2 set $06
(1)   92/   E8D1D : =$8                 vcDL3 set $08
(1)   92/   E8D1D : =$1                 vcDL4 set $01
(1)   93/   E8D1D : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   93/   E8D1D : =$F                 vcRR1 set $0F
(1)   93/   E8D1D : =$F                 vcRR2 set $0F
(1)   93/   E8D1D : =$F                 vcRR3 set $0F
(1)   93/   E8D1D : =$F                 vcRR4 set $0F
(1)   94/   E8D1D : (MACRO)             	smpsVcTotalLevel    $00, $22, $1F, $1F
(1)   94/   E8D1D : =$0                 vcTL1 set $00
(1)   94/   E8D1D : =$22                vcTL2 set $22
(1)   94/   E8D1D : =$1F                vcTL3 set $1F
(1)   94/   E8D1D : =$1F                vcTL4 set $1F
(1)   94/   E8D1D : 3A                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   94/   E8D1E :                     ;   0     1     2     3     4     5     6     7
(1)   94/   E8D1E :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   94/   E8D1E : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   94/   E8D1E : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   94/   E8D1E : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   94/   E8D1E : =$80                vcTLMask1 set $80
(1)   94/   E8D1E :                     
(1)   94/   E8D1E :                     
(1)   94/   E8D1E : 7004 3001                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   94/   E8D22 : 0F19 1416                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   94/   E8D26 : 080B 0A05                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   94/   E8D2A : 0303 0305                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   94/   E8D2E : 1F8F 6F5F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   94/   E8D32 : 1F1F 2280                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   95/   E8D36 :                     
(1)   96/   E8D36 :                     
  579/   E8D36 :                        Sound60:	include "sfx-improved/E0 - Spin Dash Rev.asm"
(1)    1/   E8D36 :                     Sound60_SpindashRev_Header:
(1)    2/   E8D36 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8D36 :                     
(1)    2/   E8D36 : =$3                 SourceDriver set 3
(1)    2/   E8D36 :                     
(1)    2/   E8D36 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8D36 :                     
(1)    2/   E8D36 : =$E8D36             songStart set *
(1)    2/   E8D36 :                     
(1)    2/   E8D36 :                     
(1)    3/   E8D36 : (MACRO)             	smpsHeaderVoice     Sound60_SpindashRev_Voices
(1)    3/   E8D36 : 588D                                dc.w    z80_ptr(SOUND60_SPINDASHREV_VOICES)
(1)    4/   E8D38 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8D38 : 01                          dc.b    $01
(1)    5/   E8D39 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8D39 : 01                          dc.b    $01
(1)    6/   E8D3A :                     
(1)    7/   E8D3A : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound60_SpindashRev_FM5,	$FE, $00
(1)    7/   E8D3A : 8005                        dc.b    $80,CFM5
(1)    7/   E8D3C :  (MACRO-2)                  CheckedChannelPointer SOUND60_SPINDASHREV_FM5
(1)    7/   E8D3C : 408D                                dc.w    z80_ptr(SOUND60_SPINDASHREV_FM5)
(1)    7/   E8D3E : FE                                  dc.b    $FE
(1)    7/   E8D3F : 00                          dc.b    $00
(1)    8/   E8D40 :                     
(1)    9/   E8D40 :                     ; FM5 Data
(1)   10/   E8D40 :                     Sound60_SpindashRev_FM5:
(1)   11/   E8D40 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8D40 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8D40 : EF00                                dc.b    $EF,$00
(1)   12/   E8D42 : (MACRO)             	smpsModSet          $00, $01, $20, $F6
(1)   12/   E8D42 : F0                          dc.b    $F0
(1)   12/   E8D43 : 0001 20F6                           dc.b    $00,$01,$20,$F6
(1)   12/   E8D47 :                             ;dc.b   $01,$20,$F6
(1)   13/   E8D47 : C416 E7             	dc.b	nG5, $16, smpsNoAttack
(1)   14/   E8D4A : (MACRO)             	smpsModOff
(1)   14/   E8D4A : FA                                  dc.b    $FA
(1)   15/   E8D4B : D018 E7             	dc.b	nG6, $18, smpsNoAttack
(1)   16/   E8D4E :                     
(1)   17/   E8D4E :                     Sound60_SpindashRev_Loop00:
(1)   18/   E8D4E : 04E7                	dc.b	$04, smpsNoAttack
(1)   19/   E8D50 : (MACRO)             	smpsAlterVol        $03
(1)   19/   E8D50 : E603                        dc.b    $E6,$03
(1)   20/   E8D52 : (MACRO)             	smpsLoop            $00, $10, Sound60_SpindashRev_Loop00
(1)   20/   E8D52 : F7                          dc.b    $F7
(1)   20/   E8D53 : 0010                        dc.b    $00,$10
(1)   20/   E8D55 : 4E8D                                dc.w    z80_ptr(SOUND60_SPINDASHREV_LOOP00)
(1)   21/   E8D57 : (MACRO)             	smpsStop
(1)   21/   E8D57 : F2                          dc.b    $F2
(1)   22/   E8D58 :                     
(1)   23/   E8D58 :                     Sound60_SpindashRev_Voices:
(1)   24/   E8D58 :                     ;	Voice $00
(1)   25/   E8D58 :                     ;	$34
(1)   26/   E8D58 :                     ;	$00, $0C, $03, $09, 	$9F, $8F, $8C, $95, 	$00, $00, $00, $00
(1)   27/   E8D58 :                     ;	$00, $00, $00, $00, 	$0F, $0F, $0F, $0F, 	$00, $00, $1D, $00
(1)   28/   E8D58 : (MACRO)             	smpsVcAlgorithm     $04
(1)   28/   E8D58 : =$4                 vcAlgorithm set $04
(1)   29/   E8D58 : (MACRO)             	smpsVcFeedback      $06
(1)   29/   E8D58 : =$6                 vcFeedback set $06
(1)   30/   E8D58 : (MACRO)             	smpsVcUnusedBits    $00
(1)   30/   E8D58 : =$0                 vcUnusedBits set $00
(1)   30/   E8D58 : =$0                 vcD1R1Unk set 0
(1)   30/   E8D58 : =$0                 vcD1R2Unk set 0
(1)   30/   E8D58 : =$0                 vcD1R3Unk set 0
(1)   30/   E8D58 : =$0                 vcD1R4Unk set 0
(1)   31/   E8D58 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   31/   E8D58 : =$0                 vcDT1 set $00
(1)   31/   E8D58 : =$0                 vcDT2 set $00
(1)   31/   E8D58 : =$0                 vcDT3 set $00
(1)   31/   E8D58 : =$0                 vcDT4 set $00
(1)   32/   E8D58 : (MACRO)             	smpsVcCoarseFreq    $09, $03, $0C, $00
(1)   32/   E8D58 : =$9                 vcCF1 set $09
(1)   32/   E8D58 : =$3                 vcCF2 set $03
(1)   32/   E8D58 : =$C                 vcCF3 set $0C
(1)   32/   E8D58 : =$0                 vcCF4 set $00
(1)   33/   E8D58 : (MACRO)             	smpsVcRateScale     $02, $02, $02, $02
(1)   33/   E8D58 : =$2                 vcRS1 set $02
(1)   33/   E8D58 : =$2                 vcRS2 set $02
(1)   33/   E8D58 : =$2                 vcRS3 set $02
(1)   33/   E8D58 : =$2                 vcRS4 set $02
(1)   34/   E8D58 : (MACRO)             	smpsVcAttackRate    $15, $0C, $0F, $1F
(1)   34/   E8D58 : =$15                vcAR1 set $15
(1)   34/   E8D58 : =$C                 vcAR2 set $0C
(1)   34/   E8D58 : =$F                 vcAR3 set $0F
(1)   34/   E8D58 : =$1F                vcAR4 set $1F
(1)   35/   E8D58 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   35/   E8D58 : =$0                 vcAM1 set $00<<7
(1)   35/   E8D58 : =$0                 vcAM2 set $00<<7
(1)   35/   E8D58 : =$0                 vcAM3 set $00<<7
(1)   35/   E8D58 : =$0                 vcAM4 set $00<<7
(1)   36/   E8D58 : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   36/   E8D58 : =$0                 vcD1R1 set $00
(1)   36/   E8D58 : =$0                 vcD1R2 set $00
(1)   36/   E8D58 : =$0                 vcD1R3 set $00
(1)   36/   E8D58 : =$0                 vcD1R4 set $00
(1)   37/   E8D58 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   37/   E8D58 : =$0                 vcD2R1 set $00
(1)   37/   E8D58 : =$0                 vcD2R2 set $00
(1)   37/   E8D58 : =$0                 vcD2R3 set $00
(1)   37/   E8D58 : =$0                 vcD2R4 set $00
(1)   38/   E8D58 : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   38/   E8D58 : =$0                 vcDL1 set $00
(1)   38/   E8D58 : =$0                 vcDL2 set $00
(1)   38/   E8D58 : =$0                 vcDL3 set $00
(1)   38/   E8D58 : =$0                 vcDL4 set $00
(1)   39/   E8D58 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   39/   E8D58 : =$F                 vcRR1 set $0F
(1)   39/   E8D58 : =$F                 vcRR2 set $0F
(1)   39/   E8D58 : =$F                 vcRR3 set $0F
(1)   39/   E8D58 : =$F                 vcRR4 set $0F
(1)   40/   E8D58 : (MACRO)             	smpsVcTotalLevel    $00, $1D, $00, $00
(1)   40/   E8D58 : =$0                 vcTL1 set $00
(1)   40/   E8D58 : =$1D                vcTL2 set $1D
(1)   40/   E8D58 : =$0                 vcTL3 set $00
(1)   40/   E8D58 : =$0                 vcTL4 set $00
(1)   40/   E8D58 : 34                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   40/   E8D59 :                     ;   0     1     2     3     4     5     6     7
(1)   40/   E8D59 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   40/   E8D59 : =$0                 vcTLMask4 set 0
(1)   40/   E8D59 : =$0                 vcTLMask3 set 0
(1)   40/   E8D59 : =$0                 vcTLMask2 set 0
(1)   40/   E8D59 : =$0                 vcTLMask1 set 0
(1)   40/   E8D59 :                     
(1)   40/   E8D59 :                     
(1)   40/   E8D59 : 000C 0309                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   40/   E8D5D : 9F8F 8C95                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   40/   E8D61 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   40/   E8D65 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   40/   E8D69 : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   40/   E8D6D : 0000 1D00                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   41/   E8D71 :                     
(1)   42/   E8D71 :                     
  580/   E8D71 :                        Sound61:	include "sfx-improved/E1 - Rumbling 2.asm"
(1)    1/   E8D71 :                     Sound61_Rumbling2_Header:
(1)    2/   E8D71 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8D71 :                     
(1)    2/   E8D71 : =$3                 SourceDriver set 3
(1)    2/   E8D71 :                     
(1)    2/   E8D71 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8D71 :                     
(1)    2/   E8D71 : =$E8D71             songStart set *
(1)    2/   E8D71 :                     
(1)    2/   E8D71 :                     
(1)    3/   E8D71 : (MACRO)             	smpsHeaderVoice     Sound61_Rumbling2_Voices
(1)    3/   E8D71 : B58D                                dc.w    z80_ptr(SOUND61_RUMBLING2_VOICES)
(1)    4/   E8D73 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8D73 : 01                          dc.b    $01
(1)    5/   E8D74 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8D74 : 01                          dc.b    $01
(1)    6/   E8D75 :                     
(1)    7/   E8D75 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound61_Rumbling2_FM4,	$00, $04
(1)    7/   E8D75 : 8004                        dc.b    $80,CFM4
(1)    7/   E8D77 :  (MACRO-2)                  CheckedChannelPointer SOUND61_RUMBLING2_FM4
(1)    7/   E8D77 : 7B8D                                dc.w    z80_ptr(SOUND61_RUMBLING2_FM4)
(1)    7/   E8D79 : 00                                  dc.b    $00
(1)    7/   E8D7A : 04                          dc.b    $04
(1)    8/   E8D7B :                     
(1)    9/   E8D7B :                     ; FM4 Data
(1)   10/   E8D7B :                     Sound61_Rumbling2_FM4:
(1)   11/   E8D7B : 8001                	dc.b	nRst, $01
(1)   12/   E8D7D : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8D7D :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8D7D : EF00                                dc.b    $EF,$00
(1)   13/   E8D7F : (MACRO)             	smpsModSet          $00, $01, $70, $06
(1)   13/   E8D7F : F0                          dc.b    $F0
(1)   13/   E8D80 : 0001 7006                           dc.b    $00,$01,$70,$06
(1)   13/   E8D84 :                             ;dc.b   $01,$70,$06
(1)   14/   E8D84 : 8206 8508 8301 8205 	dc.b	nCs0, $06, nE0, $08, nD0, $01, nCs0, $05, nF0, $06, nAb0, $03
            E8D8C : 8606 8903         
(1)   15/   E8D90 : 8208 8804 8206      	dc.b	nCs0, $08, nG0, $04, nCs0, $06
(1)   16/   E8D96 : (MACRO)             	smpsAlterVol        $02
(1)   16/   E8D96 : E602                        dc.b    $E6,$02
(1)   17/   E8D98 : 8508                	dc.b	nE0, $08
(1)   18/   E8D9A : (MACRO)             	smpsAlterVol        $02
(1)   18/   E8D9A : E602                        dc.b    $E6,$02
(1)   19/   E8D9C : 8301                	dc.b	nD0, $01
(1)   20/   E8D9E : (MACRO)             	smpsAlterVol        $02
(1)   20/   E8D9E : E602                        dc.b    $E6,$02
(1)   21/   E8DA0 : 8205                	dc.b	nCs0, $05
(1)   22/   E8DA2 : (MACRO)             	smpsAlterVol        $02
(1)   22/   E8DA2 : E602                        dc.b    $E6,$02
(1)   23/   E8DA4 : 8606                	dc.b	nF0, $06
(1)   24/   E8DA6 : (MACRO)             	smpsAlterVol        $02
(1)   24/   E8DA6 : E602                        dc.b    $E6,$02
(1)   25/   E8DA8 : 8903                	dc.b	nAb0, $03
(1)   26/   E8DAA : (MACRO)             	smpsAlterVol        $02
(1)   26/   E8DAA : E602                        dc.b    $E6,$02
(1)   27/   E8DAC : 8208                	dc.b	nCs0, $08
(1)   28/   E8DAE : (MACRO)             	smpsAlterVol        $02
(1)   28/   E8DAE : E602                        dc.b    $E6,$02
(1)   29/   E8DB0 : 8804                	dc.b	nG0, $04
(1)   30/   E8DB2 : (MACRO)             	smpsAlterVol        $02
(1)   30/   E8DB2 : E602                        dc.b    $E6,$02
(1)   31/   E8DB4 : (MACRO)             	smpsStop
(1)   31/   E8DB4 : F2                          dc.b    $F2
(1)   32/   E8DB5 :                     
(1)   33/   E8DB5 :                     Sound61_Rumbling2_Voices:
(1)   34/   E8DB5 :                     ;	Voice $00
(1)   35/   E8DB5 :                     ;	$32
(1)   36/   E8DB5 :                     ;	$30, $50, $30, $30, 	$1F, $19, $0E, $0E, 	$07, $15, $12, $09
(1)   37/   E8DB5 :                     ;	$0A, $1D, $09, $06, 	$E8, $0A, $03, $17, 	$07, $00, $00, $00
(1)   38/   E8DB5 : (MACRO)             	smpsVcAlgorithm     $02
(1)   38/   E8DB5 : =$2                 vcAlgorithm set $02
(1)   39/   E8DB5 : (MACRO)             	smpsVcFeedback      $06
(1)   39/   E8DB5 : =$6                 vcFeedback set $06
(1)   40/   E8DB5 : (MACRO)             	smpsVcUnusedBits    $00
(1)   40/   E8DB5 : =$0                 vcUnusedBits set $00
(1)   40/   E8DB5 : =$0                 vcD1R1Unk set 0
(1)   40/   E8DB5 : =$0                 vcD1R2Unk set 0
(1)   40/   E8DB5 : =$0                 vcD1R3Unk set 0
(1)   40/   E8DB5 : =$0                 vcD1R4Unk set 0
(1)   41/   E8DB5 : (MACRO)             	smpsVcDetune        $03, $03, $05, $03
(1)   41/   E8DB5 : =$3                 vcDT1 set $03
(1)   41/   E8DB5 : =$3                 vcDT2 set $03
(1)   41/   E8DB5 : =$5                 vcDT3 set $05
(1)   41/   E8DB5 : =$3                 vcDT4 set $03
(1)   42/   E8DB5 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   42/   E8DB5 : =$0                 vcCF1 set $00
(1)   42/   E8DB5 : =$0                 vcCF2 set $00
(1)   42/   E8DB5 : =$0                 vcCF3 set $00
(1)   42/   E8DB5 : =$0                 vcCF4 set $00
(1)   43/   E8DB5 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   43/   E8DB5 : =$0                 vcRS1 set $00
(1)   43/   E8DB5 : =$0                 vcRS2 set $00
(1)   43/   E8DB5 : =$0                 vcRS3 set $00
(1)   43/   E8DB5 : =$0                 vcRS4 set $00
(1)   44/   E8DB5 : (MACRO)             	smpsVcAttackRate    $0E, $0E, $19, $1F
(1)   44/   E8DB5 : =$E                 vcAR1 set $0E
(1)   44/   E8DB5 : =$E                 vcAR2 set $0E
(1)   44/   E8DB5 : =$19                vcAR3 set $19
(1)   44/   E8DB5 : =$1F                vcAR4 set $1F
(1)   45/   E8DB5 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   45/   E8DB5 : =$0                 vcAM1 set $00<<7
(1)   45/   E8DB5 : =$0                 vcAM2 set $00<<7
(1)   45/   E8DB5 : =$0                 vcAM3 set $00<<7
(1)   45/   E8DB5 : =$0                 vcAM4 set $00<<7
(1)   46/   E8DB5 : (MACRO)             	smpsVcDecayRate1    $09, $12, $15, $07
(1)   46/   E8DB5 : =$9                 vcD1R1 set $09
(1)   46/   E8DB5 : =$12                vcD1R2 set $12
(1)   46/   E8DB5 : =$15                vcD1R3 set $15
(1)   46/   E8DB5 : =$7                 vcD1R4 set $07
(1)   47/   E8DB5 : (MACRO)             	smpsVcDecayRate2    $06, $09, $1D, $0A
(1)   47/   E8DB5 : =$6                 vcD2R1 set $06
(1)   47/   E8DB5 : =$9                 vcD2R2 set $09
(1)   47/   E8DB5 : =$1D                vcD2R3 set $1D
(1)   47/   E8DB5 : =$A                 vcD2R4 set $0A
(1)   48/   E8DB5 : (MACRO)             	smpsVcDecayLevel    $01, $00, $00, $0E
(1)   48/   E8DB5 : =$1                 vcDL1 set $01
(1)   48/   E8DB5 : =$0                 vcDL2 set $00
(1)   48/   E8DB5 : =$0                 vcDL3 set $00
(1)   48/   E8DB5 : =$E                 vcDL4 set $0E
(1)   49/   E8DB5 : (MACRO)             	smpsVcReleaseRate   $07, $03, $0A, $08
(1)   49/   E8DB5 : =$7                 vcRR1 set $07
(1)   49/   E8DB5 : =$3                 vcRR2 set $03
(1)   49/   E8DB5 : =$A                 vcRR3 set $0A
(1)   49/   E8DB5 : =$8                 vcRR4 set $08
(1)   50/   E8DB5 : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $07
(1)   50/   E8DB5 : =$0                 vcTL1 set $00
(1)   50/   E8DB5 : =$0                 vcTL2 set $00
(1)   50/   E8DB5 : =$0                 vcTL3 set $00
(1)   50/   E8DB5 : =$7                 vcTL4 set $07
(1)   50/   E8DB5 : 32                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   50/   E8DB6 :                     ;   0     1     2     3     4     5     6     7
(1)   50/   E8DB6 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   50/   E8DB6 : =$0                 vcTLMask4 set 0
(1)   50/   E8DB6 : =$0                 vcTLMask3 set 0
(1)   50/   E8DB6 : =$0                 vcTLMask2 set 0
(1)   50/   E8DB6 : =$0                 vcTLMask1 set 0
(1)   50/   E8DB6 :                     
(1)   50/   E8DB6 :                     
(1)   50/   E8DB6 : 3050 3030                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   50/   E8DBA : 1F19 0E0E                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   50/   E8DBE : 0715 1209                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   50/   E8DC2 : 0A1D 0906                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   50/   E8DC6 : E80A 0317                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   50/   E8DCA : 0700 0000                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   51/   E8DCE :                     
(1)   52/   E8DCE :                     
  581/   E8DCE :                        Sound62:	include "sfx-improved/E2 - CNZ Launch.asm"
(1)    1/   E8DCE :                     Sound62_CNZLaunch_Header:
(1)    2/   E8DCE : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8DCE :                     
(1)    2/   E8DCE : =$3                 SourceDriver set 3
(1)    2/   E8DCE :                     
(1)    2/   E8DCE : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8DCE :                     
(1)    2/   E8DCE : =$E8DCE             songStart set *
(1)    2/   E8DCE :                     
(1)    2/   E8DCE :                     
(1)    3/   E8DCE : (MACRO)             	smpsHeaderVoice     Sound62_CNZLaunch_Voices
(1)    3/   E8DCE : EC8D                                dc.w    z80_ptr(SOUND62_CNZLAUNCH_VOICES)
(1)    4/   E8DD0 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8DD0 : 01                          dc.b    $01
(1)    5/   E8DD1 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8DD1 : 01                          dc.b    $01
(1)    6/   E8DD2 :                     
(1)    7/   E8DD2 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound62_CNZLaunch_FM5,	$FF, $00
(1)    7/   E8DD2 : 8005                        dc.b    $80,CFM5
(1)    7/   E8DD4 :  (MACRO-2)                  CheckedChannelPointer SOUND62_CNZLAUNCH_FM5
(1)    7/   E8DD4 : D88D                                dc.w    z80_ptr(SOUND62_CNZLAUNCH_FM5)
(1)    7/   E8DD6 : FF                                  dc.b    $FF
(1)    7/   E8DD7 : 00                          dc.b    $00
(1)    8/   E8DD8 :                     
(1)    9/   E8DD8 :                     ; FM5 Data
(1)   10/   E8DD8 :                     Sound62_CNZLaunch_FM5:
(1)   11/   E8DD8 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8DD8 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8DD8 : EF00                                dc.b    $EF,$00
(1)   12/   E8DDA : A605                	dc.b	nCs3, $05
(1)   13/   E8DDC : (MACRO)             	smpsModSet          $01, $01, $E7, $40
(1)   13/   E8DDC : F0                          dc.b    $F0
(1)   13/   E8DDD : 0101 E740                           dc.b    $01,$01,$E7,$40
(1)   13/   E8DE1 :                             ;dc.b   $01,$E7,$40
(1)   14/   E8DE1 :                     
(1)   15/   E8DE1 :                     Sound62_CNZLaunch_Loop00:
(1)   16/   E8DE1 : C402 E7             	dc.b	nG5, $02, smpsNoAttack
(1)   17/   E8DE4 : (MACRO)             	smpsAlterVol        $01
(1)   17/   E8DE4 : E601                        dc.b    $E6,$01
(1)   18/   E8DE6 : (MACRO)             	smpsLoop            $00, $12, Sound62_CNZLaunch_Loop00
(1)   18/   E8DE6 : F7                          dc.b    $F7
(1)   18/   E8DE7 : 0012                        dc.b    $00,$12
(1)   18/   E8DE9 : E18D                                dc.w    z80_ptr(SOUND62_CNZLAUNCH_LOOP00)
(1)   19/   E8DEB : (MACRO)             	smpsStop
(1)   19/   E8DEB : F2                          dc.b    $F2
(1)   20/   E8DEC :                     
(1)   21/   E8DEC :                     Sound62_CNZLaunch_Voices:
(1)   22/   E8DEC :                     ;	Voice $00
(1)   23/   E8DEC :                     ;	$34
(1)   24/   E8DEC :                     ;	$0C, $73, $10, $0C, 	$AF, $FF, $AC, $D5, 	$06, $02, $00, $01
(1)   25/   E8DEC :                     ;	$02, $04, $0A, $08, 	$BF, $BF, $BF, $BF, 	$00, $80, $08, $80
(1)   26/   E8DEC : (MACRO)             	smpsVcAlgorithm     $04
(1)   26/   E8DEC : =$4                 vcAlgorithm set $04
(1)   27/   E8DEC : (MACRO)             	smpsVcFeedback      $06
(1)   27/   E8DEC : =$6                 vcFeedback set $06
(1)   28/   E8DEC : (MACRO)             	smpsVcUnusedBits    $00
(1)   28/   E8DEC : =$0                 vcUnusedBits set $00
(1)   28/   E8DEC : =$0                 vcD1R1Unk set 0
(1)   28/   E8DEC : =$0                 vcD1R2Unk set 0
(1)   28/   E8DEC : =$0                 vcD1R3Unk set 0
(1)   28/   E8DEC : =$0                 vcD1R4Unk set 0
(1)   29/   E8DEC : (MACRO)             	smpsVcDetune        $00, $01, $07, $00
(1)   29/   E8DEC : =$0                 vcDT1 set $00
(1)   29/   E8DEC : =$1                 vcDT2 set $01
(1)   29/   E8DEC : =$7                 vcDT3 set $07
(1)   29/   E8DEC : =$0                 vcDT4 set $00
(1)   30/   E8DEC : (MACRO)             	smpsVcCoarseFreq    $0C, $00, $03, $0C
(1)   30/   E8DEC : =$C                 vcCF1 set $0C
(1)   30/   E8DEC : =$0                 vcCF2 set $00
(1)   30/   E8DEC : =$3                 vcCF3 set $03
(1)   30/   E8DEC : =$C                 vcCF4 set $0C
(1)   31/   E8DEC : (MACRO)             	smpsVcRateScale     $03, $02, $03, $02
(1)   31/   E8DEC : =$3                 vcRS1 set $03
(1)   31/   E8DEC : =$2                 vcRS2 set $02
(1)   31/   E8DEC : =$3                 vcRS3 set $03
(1)   31/   E8DEC : =$2                 vcRS4 set $02
(1)   32/   E8DEC : (MACRO)             	smpsVcAttackRate    $15, $2C, $3F, $2F
(1)   32/   E8DEC : =$15                vcAR1 set $15
(1)   32/   E8DEC : =$2C                vcAR2 set $2C
(1)   32/   E8DEC : =$3F                vcAR3 set $3F
(1)   32/   E8DEC : =$2F                vcAR4 set $2F
(1)   33/   E8DEC : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   33/   E8DEC : =$0                 vcAM1 set $00<<5
(1)   33/   E8DEC : =$0                 vcAM2 set $00<<5
(1)   33/   E8DEC : =$0                 vcAM3 set $00<<5
(1)   33/   E8DEC : =$0                 vcAM4 set $00<<5
(1)   34/   E8DEC : (MACRO)             	smpsVcDecayRate1    $01, $00, $02, $06
(1)   34/   E8DEC : =$1                 vcD1R1 set $01
(1)   34/   E8DEC : =$0                 vcD1R2 set $00
(1)   34/   E8DEC : =$2                 vcD1R3 set $02
(1)   34/   E8DEC : =$6                 vcD1R4 set $06
(1)   35/   E8DEC : (MACRO)             	smpsVcDecayRate2    $08, $0A, $04, $02
(1)   35/   E8DEC : =$8                 vcD2R1 set $08
(1)   35/   E8DEC : =$A                 vcD2R2 set $0A
(1)   35/   E8DEC : =$4                 vcD2R3 set $04
(1)   35/   E8DEC : =$2                 vcD2R4 set $02
(1)   36/   E8DEC : (MACRO)             	smpsVcDecayLevel    $0B, $0B, $0B, $0B
(1)   36/   E8DEC : =$B                 vcDL1 set $0B
(1)   36/   E8DEC : =$B                 vcDL2 set $0B
(1)   36/   E8DEC : =$B                 vcDL3 set $0B
(1)   36/   E8DEC : =$B                 vcDL4 set $0B
(1)   37/   E8DEC : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   37/   E8DEC : =$F                 vcRR1 set $0F
(1)   37/   E8DEC : =$F                 vcRR2 set $0F
(1)   37/   E8DEC : =$F                 vcRR3 set $0F
(1)   37/   E8DEC : =$F                 vcRR4 set $0F
(1)   38/   E8DEC : (MACRO)             	smpsVcTotalLevel    $00, $08, $00, $00
(1)   38/   E8DEC : =$0                 vcTL1 set $00
(1)   38/   E8DEC : =$8                 vcTL2 set $08
(1)   38/   E8DEC : =$0                 vcTL3 set $00
(1)   38/   E8DEC : =$0                 vcTL4 set $00
(1)   38/   E8DEC : 34                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   38/   E8DED :                     ;   0     1     2     3     4     5     6     7
(1)   38/   E8DED :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   38/   E8DED : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   38/   E8DED : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   38/   E8DED : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   38/   E8DED : =$80                vcTLMask1 set $80
(1)   38/   E8DED :                     
(1)   38/   E8DED :                     
(1)   38/   E8DED : 0C73 100C                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   38/   E8DF1 : AFFF ACD5                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   38/   E8DF5 : 0602 0001                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   38/   E8DF9 : 0204 0A08                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   38/   E8DFD : BFBF BFBF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   38/   E8E01 : 0080 0880                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   39/   E8E05 :                     
(1)   40/   E8E05 :                     
  582/   E8E05 :                        Sound63:	include "sfx-improved/E3 - Flipper.asm"
(1)    1/   E8E05 :                     Sound63_Flipper_Header:
(1)    2/   E8E05 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8E05 :                     
(1)    2/   E8E05 : =$3                 SourceDriver set 3
(1)    2/   E8E05 :                     
(1)    2/   E8E05 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8E05 :                     
(1)    2/   E8E05 : =$E8E05             songStart set *
(1)    2/   E8E05 :                     
(1)    2/   E8E05 :                     
(1)    3/   E8E05 : (MACRO)             	smpsHeaderVoice     Sound63_Flipper_Voices
(1)    3/   E8E05 : 1B8E                                dc.w    z80_ptr(SOUND63_FLIPPER_VOICES)
(1)    4/   E8E07 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8E07 : 01                          dc.b    $01
(1)    5/   E8E08 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8E08 : 01                          dc.b    $01
(1)    6/   E8E09 :                     
(1)    7/   E8E09 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound63_Flipper_FM5,	$09, $07
(1)    7/   E8E09 : 8005                        dc.b    $80,CFM5
(1)    7/   E8E0B :  (MACRO-2)                  CheckedChannelPointer SOUND63_FLIPPER_FM5
(1)    7/   E8E0B : 0F8E                                dc.w    z80_ptr(SOUND63_FLIPPER_FM5)
(1)    7/   E8E0D : 09                                  dc.b    $09
(1)    7/   E8E0E : 07                          dc.b    $07
(1)    8/   E8E0F :                     
(1)    9/   E8E0F :                     ; FM5 Data
(1)   10/   E8E0F :                     Sound63_Flipper_FM5:
(1)   11/   E8E0F : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8E0F :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8E0F : EF00                                dc.b    $EF,$00
(1)   12/   E8E11 : (MACRO)             	smpsModSet          $01, $01, $04, $56
(1)   12/   E8E11 : F0                          dc.b    $F0
(1)   12/   E8E12 : 0101 0456                           dc.b    $01,$01,$04,$56
(1)   12/   E8E16 :                             ;dc.b   $01,$04,$56
(1)   13/   E8E16 : 9203 9A25           	dc.b	nF1, $03, nCs2, $25
(1)   14/   E8E1A : (MACRO)             	smpsStop
(1)   14/   E8E1A : F2                          dc.b    $F2
(1)   15/   E8E1B :                     
(1)   16/   E8E1B :                     Sound63_Flipper_Voices:
(1)   17/   E8E1B :                     ;	Voice $00
(1)   18/   E8E1B :                     ;	$3D
(1)   19/   E8E1B :                     ;	$12, $77, $10, $30, 	$5F, $5F, $5F, $5F, 	$0F, $00, $0A, $01
(1)   20/   E8E1B :                     ;	$0A, $0D, $0A, $0D, 	$4F, $0F, $0F, $0F, 	$13, $80, $80, $80
(1)   21/   E8E1B : (MACRO)             	smpsVcAlgorithm     $05
(1)   21/   E8E1B : =$5                 vcAlgorithm set $05
(1)   22/   E8E1B : (MACRO)             	smpsVcFeedback      $07
(1)   22/   E8E1B : =$7                 vcFeedback set $07
(1)   23/   E8E1B : (MACRO)             	smpsVcUnusedBits    $00
(1)   23/   E8E1B : =$0                 vcUnusedBits set $00
(1)   23/   E8E1B : =$0                 vcD1R1Unk set 0
(1)   23/   E8E1B : =$0                 vcD1R2Unk set 0
(1)   23/   E8E1B : =$0                 vcD1R3Unk set 0
(1)   23/   E8E1B : =$0                 vcD1R4Unk set 0
(1)   24/   E8E1B : (MACRO)             	smpsVcDetune        $03, $01, $07, $01
(1)   24/   E8E1B : =$3                 vcDT1 set $03
(1)   24/   E8E1B : =$1                 vcDT2 set $01
(1)   24/   E8E1B : =$7                 vcDT3 set $07
(1)   24/   E8E1B : =$1                 vcDT4 set $01
(1)   25/   E8E1B : (MACRO)             	smpsVcCoarseFreq    $00, $00, $07, $02
(1)   25/   E8E1B : =$0                 vcCF1 set $00
(1)   25/   E8E1B : =$0                 vcCF2 set $00
(1)   25/   E8E1B : =$7                 vcCF3 set $07
(1)   25/   E8E1B : =$2                 vcCF4 set $02
(1)   26/   E8E1B : (MACRO)             	smpsVcRateScale     $01, $01, $01, $01
(1)   26/   E8E1B : =$1                 vcRS1 set $01
(1)   26/   E8E1B : =$1                 vcRS2 set $01
(1)   26/   E8E1B : =$1                 vcRS3 set $01
(1)   26/   E8E1B : =$1                 vcRS4 set $01
(1)   27/   E8E1B : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   27/   E8E1B : =$1F                vcAR1 set $1F
(1)   27/   E8E1B : =$1F                vcAR2 set $1F
(1)   27/   E8E1B : =$1F                vcAR3 set $1F
(1)   27/   E8E1B : =$1F                vcAR4 set $1F
(1)   28/   E8E1B : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   28/   E8E1B : =$0                 vcAM1 set $00<<5
(1)   28/   E8E1B : =$0                 vcAM2 set $00<<5
(1)   28/   E8E1B : =$0                 vcAM3 set $00<<5
(1)   28/   E8E1B : =$0                 vcAM4 set $00<<5
(1)   29/   E8E1B : (MACRO)             	smpsVcDecayRate1    $01, $0A, $00, $0F
(1)   29/   E8E1B : =$1                 vcD1R1 set $01
(1)   29/   E8E1B : =$A                 vcD1R2 set $0A
(1)   29/   E8E1B : =$0                 vcD1R3 set $00
(1)   29/   E8E1B : =$F                 vcD1R4 set $0F
(1)   30/   E8E1B : (MACRO)             	smpsVcDecayRate2    $0D, $0A, $0D, $0A
(1)   30/   E8E1B : =$D                 vcD2R1 set $0D
(1)   30/   E8E1B : =$A                 vcD2R2 set $0A
(1)   30/   E8E1B : =$D                 vcD2R3 set $0D
(1)   30/   E8E1B : =$A                 vcD2R4 set $0A
(1)   31/   E8E1B : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $04
(1)   31/   E8E1B : =$0                 vcDL1 set $00
(1)   31/   E8E1B : =$0                 vcDL2 set $00
(1)   31/   E8E1B : =$0                 vcDL3 set $00
(1)   31/   E8E1B : =$4                 vcDL4 set $04
(1)   32/   E8E1B : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   32/   E8E1B : =$F                 vcRR1 set $0F
(1)   32/   E8E1B : =$F                 vcRR2 set $0F
(1)   32/   E8E1B : =$F                 vcRR3 set $0F
(1)   32/   E8E1B : =$F                 vcRR4 set $0F
(1)   33/   E8E1B : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $13
(1)   33/   E8E1B : =$0                 vcTL1 set $00
(1)   33/   E8E1B : =$0                 vcTL2 set $00
(1)   33/   E8E1B : =$0                 vcTL3 set $00
(1)   33/   E8E1B : =$13                vcTL4 set $13
(1)   33/   E8E1B : 3D                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   33/   E8E1C :                     ;   0     1     2     3     4     5     6     7
(1)   33/   E8E1C :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   33/   E8E1C : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   33/   E8E1C : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   33/   E8E1C : =$80                vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   33/   E8E1C : =$80                vcTLMask1 set $80
(1)   33/   E8E1C :                     
(1)   33/   E8E1C :                     
(1)   33/   E8E1C : 1277 1030                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   33/   E8E20 : 5F5F 5F5F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   33/   E8E24 : 0F00 0A01                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   33/   E8E28 : 0A0D 0A0D                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   33/   E8E2C : 4F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   33/   E8E30 : 1380 8080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   34/   E8E34 :                     
(1)   35/   E8E34 :                     
  583/   E8E34 :                        Sound64:	include "sfx-improved/E4 - HTZ Lift Click.asm"
(1)    1/   E8E34 :                     Sound64_HTZLiftClick_Header:
(1)    2/   E8E34 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8E34 :                     
(1)    2/   E8E34 : =$3                 SourceDriver set 3
(1)    2/   E8E34 :                     
(1)    2/   E8E34 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8E34 :                     
(1)    2/   E8E34 : =$E8E34             songStart set *
(1)    2/   E8E34 :                     
(1)    2/   E8E34 :                     
(1)    3/   E8E34 : (MACRO)             	smpsHeaderVoice     Sound64_HTZLiftClick_Voices
(1)    3/   E8E34 : 438E                                dc.w    z80_ptr(SOUND64_HTZLIFTCLICK_VOICES)
(1)    4/   E8E36 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8E36 : 01                          dc.b    $01
(1)    5/   E8E37 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8E37 : 01                          dc.b    $01
(1)    6/   E8E38 :                     
(1)    7/   E8E38 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound64_HTZLiftClick_FM5,	$11, $00
(1)    7/   E8E38 : 8005                        dc.b    $80,CFM5
(1)    7/   E8E3A :  (MACRO-2)                  CheckedChannelPointer SOUND64_HTZLIFTCLICK_FM5
(1)    7/   E8E3A : 3E8E                                dc.w    z80_ptr(SOUND64_HTZLIFTCLICK_FM5)
(1)    7/   E8E3C : 11                                  dc.b    $11
(1)    7/   E8E3D : 00                          dc.b    $00
(1)    8/   E8E3E :                     
(1)    9/   E8E3E :                     ; FM5 Data
(1)   10/   E8E3E :                     Sound64_HTZLiftClick_FM5:
(1)   11/   E8E3E : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8E3E :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8E3E : EF00                                dc.b    $EF,$00
(1)   12/   E8E40 : C702                	dc.b	nBb5, $02
(1)   13/   E8E42 : (MACRO)             	smpsStop
(1)   13/   E8E42 : F2                          dc.b    $F2
(1)   14/   E8E43 :                     
(1)   15/   E8E43 :                     Sound64_HTZLiftClick_Voices:
(1)   16/   E8E43 :                     ;	Voice $00
(1)   17/   E8E43 :                     ;	$24
(1)   18/   E8E43 :                     ;	$2A, $05, $02, $01, 	$1A, $10, $1F, $1F, 	$0F, $1F, $1F, $1F
(1)   19/   E8E43 :                     ;	$0C, $11, $0D, $11, 	$0C, $09, $09, $0F, 	$0E, $80, $04, $80
(1)   20/   E8E43 : (MACRO)             	smpsVcAlgorithm     $04
(1)   20/   E8E43 : =$4                 vcAlgorithm set $04
(1)   21/   E8E43 : (MACRO)             	smpsVcFeedback      $04
(1)   21/   E8E43 : =$4                 vcFeedback set $04
(1)   22/   E8E43 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E8E43 : =$0                 vcUnusedBits set $00
(1)   22/   E8E43 : =$0                 vcD1R1Unk set 0
(1)   22/   E8E43 : =$0                 vcD1R2Unk set 0
(1)   22/   E8E43 : =$0                 vcD1R3Unk set 0
(1)   22/   E8E43 : =$0                 vcD1R4Unk set 0
(1)   23/   E8E43 : (MACRO)             	smpsVcDetune        $00, $00, $00, $02
(1)   23/   E8E43 : =$0                 vcDT1 set $00
(1)   23/   E8E43 : =$0                 vcDT2 set $00
(1)   23/   E8E43 : =$0                 vcDT3 set $00
(1)   23/   E8E43 : =$2                 vcDT4 set $02
(1)   24/   E8E43 : (MACRO)             	smpsVcCoarseFreq    $01, $02, $05, $0A
(1)   24/   E8E43 : =$1                 vcCF1 set $01
(1)   24/   E8E43 : =$2                 vcCF2 set $02
(1)   24/   E8E43 : =$5                 vcCF3 set $05
(1)   24/   E8E43 : =$A                 vcCF4 set $0A
(1)   25/   E8E43 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E8E43 : =$0                 vcRS1 set $00
(1)   25/   E8E43 : =$0                 vcRS2 set $00
(1)   25/   E8E43 : =$0                 vcRS3 set $00
(1)   25/   E8E43 : =$0                 vcRS4 set $00
(1)   26/   E8E43 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $10, $1A
(1)   26/   E8E43 : =$1F                vcAR1 set $1F
(1)   26/   E8E43 : =$1F                vcAR2 set $1F
(1)   26/   E8E43 : =$10                vcAR3 set $10
(1)   26/   E8E43 : =$1A                vcAR4 set $1A
(1)   27/   E8E43 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8E43 : =$0                 vcAM1 set $00<<5
(1)   27/   E8E43 : =$0                 vcAM2 set $00<<5
(1)   27/   E8E43 : =$0                 vcAM3 set $00<<5
(1)   27/   E8E43 : =$0                 vcAM4 set $00<<5
(1)   28/   E8E43 : (MACRO)             	smpsVcDecayRate1    $1F, $1F, $1F, $0F
(1)   28/   E8E43 : =$1F                vcD1R1 set $1F
(1)   28/   E8E43 : =$1F                vcD1R2 set $1F
(1)   28/   E8E43 : =$1F                vcD1R3 set $1F
(1)   28/   E8E43 : =$F                 vcD1R4 set $0F
(1)   29/   E8E43 : (MACRO)             	smpsVcDecayRate2    $11, $0D, $11, $0C
(1)   29/   E8E43 : =$11                vcD2R1 set $11
(1)   29/   E8E43 : =$D                 vcD2R2 set $0D
(1)   29/   E8E43 : =$11                vcD2R3 set $11
(1)   29/   E8E43 : =$C                 vcD2R4 set $0C
(1)   30/   E8E43 : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   30/   E8E43 : =$0                 vcDL1 set $00
(1)   30/   E8E43 : =$0                 vcDL2 set $00
(1)   30/   E8E43 : =$0                 vcDL3 set $00
(1)   30/   E8E43 : =$0                 vcDL4 set $00
(1)   31/   E8E43 : (MACRO)             	smpsVcReleaseRate   $0F, $09, $09, $0C
(1)   31/   E8E43 : =$F                 vcRR1 set $0F
(1)   31/   E8E43 : =$9                 vcRR2 set $09
(1)   31/   E8E43 : =$9                 vcRR3 set $09
(1)   31/   E8E43 : =$C                 vcRR4 set $0C
(1)   32/   E8E43 : (MACRO)             	smpsVcTotalLevel    $00, $04, $00, $0E
(1)   32/   E8E43 : =$0                 vcTL1 set $00
(1)   32/   E8E43 : =$4                 vcTL2 set $04
(1)   32/   E8E43 : =$0                 vcTL3 set $00
(1)   32/   E8E43 : =$E                 vcTL4 set $0E
(1)   32/   E8E43 : 24                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8E44 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8E44 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8E44 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E8E44 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E8E44 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E8E44 : =$80                vcTLMask1 set $80
(1)   32/   E8E44 :                     
(1)   32/   E8E44 :                     
(1)   32/   E8E44 : 2A05 0201                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8E48 : 1A10 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8E4C : 0F1F 1F1F                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8E50 : 0C11 0D11                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8E54 : 0C09 090F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8E58 : 0E80 0480                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8E5C :                     
(1)   34/   E8E5C :                     
  584/   E8E5C :                        Sound65:	include "sfx-improved/E5 - Leaves.asm"
(1)    1/   E8E5C :                     Sound65_Leaves_Header:
(1)    2/   E8E5C : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8E5C :                     
(1)    2/   E8E5C : =$3                 SourceDriver set 3
(1)    2/   E8E5C :                     
(1)    2/   E8E5C : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8E5C :                     
(1)    2/   E8E5C : =$E8E5C             songStart set *
(1)    2/   E8E5C :                     
(1)    2/   E8E5C :                     
(1)    3/   E8E5C : (MACRO)             	smpsHeaderVoice     Sound65_Leaves_Voices
(1)    3/   E8E5C : 7D8E                                dc.w    z80_ptr(SOUND65_LEAVES_VOICES)
(1)    4/   E8E5E : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8E5E : 01                          dc.b    $01
(1)    5/   E8E5F : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8E5F : 01                          dc.b    $01
(1)    6/   E8E60 :                     
(1)    7/   E8E60 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound65_Leaves_PSG3,	$F8, $00
(1)    7/   E8E60 : 80C0                        dc.b    $80,CPSG3
(1)    7/   E8E62 :  (MACRO-2)                  CheckedChannelPointer SOUND65_LEAVES_PSG3
(1)    7/   E8E62 : 668E                                dc.w    z80_ptr(SOUND65_LEAVES_PSG3)
(1)    7/   E8E64 :  (MACRO-2)                          PSGPitchConvert $F8
(1)    7/   E8E64 : F8                                  dc.b    $F8
(1)    7/   E8E65 : 00                          dc.b    $00
(1)    8/   E8E66 :                     
(1)    9/   E8E66 :                     ; PSG3 Data
(1)   10/   E8E66 :                     Sound65_Leaves_PSG3:
(1)   11/   E8E66 : (MACRO)             	smpsPSGvoice        fTone_03
(1)   11/   E8E66 : F503                        dc.b    $F5,FTONE_03
(1)   12/   E8E68 : (MACRO)             	smpsPSGform         $E7
(1)   12/   E8E68 : F3E7                        dc.b    $F3,$E7
(1)   13/   E8E6A : CF03                	dc.b	(nMaxPSG-$F8)&$FF, $03
(1)   14/   E8E6C : (MACRO)             	smpsPSGvoice        fTone_06
(1)   14/   E8E6C : F506                        dc.b    $F5,FTONE_06
(1)   15/   E8E6E : CF04                	dc.b	(nMaxPSG-$F8)&$FF, $04
(1)   16/   E8E70 : (MACRO)             	smpsPSGAlterVol     $02
(1)   16/   E8E70 : EC02                        dc.b    $EC,$02
(1)   17/   E8E72 : CF02                	dc.b	(nMaxPSG-$F8)&$FF, $02
(1)   18/   E8E74 : (MACRO)             	smpsPSGvoice        fTone_03
(1)   18/   E8E74 : F503                        dc.b    $F5,FTONE_03
(1)   19/   E8E76 : (MACRO)             	smpsPSGAlterVol     $FE
(1)   19/   E8E76 : ECFE                        dc.b    $EC,$FE
(1)   20/   E8E78 : CF08 CF18           	dc.b	(nMaxPSG-$F8)&$FF, $08, (nMaxPSG-$F8)&$FF, $18
(1)   21/   E8E7C : (MACRO)             	smpsStop
(1)   21/   E8E7C : F2                          dc.b    $F2
(1)   22/   E8E7D :                     
(1)   23/   E8E7D :                     ; Song seems to not use any FM voices
(1)   24/   E8E7D :                     Sound65_Leaves_Voices:
(1)   25/   E8E7D :                     
  585/   E8E7D :                        Sound66:	include "sfx-improved/E6 - Mega Mack Drop.asm"
(1)    1/   E8E7D :                     Sound66_MegaMackDrop_Header:
(1)    2/   E8E7D : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8E7D :                     
(1)    2/   E8E7D : =$3                 SourceDriver set 3
(1)    2/   E8E7D :                     
(1)    2/   E8E7D : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8E7D :                     
(1)    2/   E8E7D : =$E8E7D             songStart set *
(1)    2/   E8E7D :                     
(1)    2/   E8E7D :                     
(1)    3/   E8E7D : (MACRO)             	smpsHeaderVoice     Sound66_MegaMackDrop_Voices
(1)    3/   E8E7D : 9E8E                                dc.w    z80_ptr(SOUND66_MEGAMACKDROP_VOICES)
(1)    4/   E8E7F : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8E7F : 01                          dc.b    $01
(1)    5/   E8E80 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8E80 : 02                          dc.b    $02
(1)    6/   E8E81 :                     
(1)    7/   E8E81 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound66_MegaMackDrop_FM5,	$EE, $08
(1)    7/   E8E81 : 8005                        dc.b    $80,CFM5
(1)    7/   E8E83 :  (MACRO-2)                  CheckedChannelPointer SOUND66_MEGAMACKDROP_FM5
(1)    7/   E8E83 : 948E                                dc.w    z80_ptr(SOUND66_MEGAMACKDROP_FM5)
(1)    7/   E8E85 : EE                                  dc.b    $EE
(1)    7/   E8E86 : 08                          dc.b    $08
(1)    8/   E8E87 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound66_MegaMackDrop_PSG3,	$00, $00
(1)    8/   E8E87 : 80C0                        dc.b    $80,CPSG3
(1)    8/   E8E89 :  (MACRO-2)                  CheckedChannelPointer SOUND66_MEGAMACKDROP_PSG3
(1)    8/   E8E89 : 8D8E                                dc.w    z80_ptr(SOUND66_MEGAMACKDROP_PSG3)
(1)    8/   E8E8B :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8E8B : 00                                  dc.b    $00
(1)    8/   E8E8C : 00                          dc.b    $00
(1)    9/   E8E8D :                     
(1)   10/   E8E8D :                     ; PSG3 Data
(1)   11/   E8E8D :                     Sound66_MegaMackDrop_PSG3:
(1)   12/   E8E8D : (MACRO)             	smpsPSGform         $E7
(1)   12/   E8E8D : F3E7                        dc.b    $F3,$E7
(1)   13/   E8E8F : (MACRO)             	smpsPSGvoice        fTone_09
(1)   13/   E8E8F : F509                        dc.b    $F5,FTONE_09
(1)   14/   E8E91 : C736                	dc.b	nMaxPSG, $36
(1)   15/   E8E93 : (MACRO)             	smpsStop
(1)   15/   E8E93 : F2                          dc.b    $F2
(1)   16/   E8E94 :                     
(1)   17/   E8E94 :                     ; FM5 Data
(1)   18/   E8E94 :                     Sound66_MegaMackDrop_FM5:
(1)   19/   E8E94 : (MACRO)             	smpsSetvoice        $00
(1)   19/   E8E94 :  (MACRO-2)                  smpsFMvoice $00
(1)   19/   E8E94 : EF00                                dc.b    $EF,$00
(1)   20/   E8E96 : 8001 9202 0202 30   	dc.b	nRst, $01, nF1, $02, $02, $02, $30
(1)   21/   E8E9D : (MACRO)             	smpsStop
(1)   21/   E8E9D : F2                          dc.b    $F2
(1)   22/   E8E9E :                     
(1)   23/   E8E9E :                     Sound66_MegaMackDrop_Voices:
(1)   24/   E8E9E :                     ;	Voice $00
(1)   25/   E8E9E :                     ;	$32
(1)   26/   E8E9E :                     ;	$33, $34, $17, $13, 	$0F, $1B, $0D, $17, 	$00, $02, $04, $0B
(1)   27/   E8E9E :                     ;	$08, $08, $00, $09, 	$6F, $4F, $5F, $6F, 	$05, $00, $00, $80
(1)   28/   E8E9E : (MACRO)             	smpsVcAlgorithm     $02
(1)   28/   E8E9E : =$2                 vcAlgorithm set $02
(1)   29/   E8E9E : (MACRO)             	smpsVcFeedback      $06
(1)   29/   E8E9E : =$6                 vcFeedback set $06
(1)   30/   E8E9E : (MACRO)             	smpsVcUnusedBits    $00
(1)   30/   E8E9E : =$0                 vcUnusedBits set $00
(1)   30/   E8E9E : =$0                 vcD1R1Unk set 0
(1)   30/   E8E9E : =$0                 vcD1R2Unk set 0
(1)   30/   E8E9E : =$0                 vcD1R3Unk set 0
(1)   30/   E8E9E : =$0                 vcD1R4Unk set 0
(1)   31/   E8E9E : (MACRO)             	smpsVcDetune        $01, $01, $03, $03
(1)   31/   E8E9E : =$1                 vcDT1 set $01
(1)   31/   E8E9E : =$1                 vcDT2 set $01
(1)   31/   E8E9E : =$3                 vcDT3 set $03
(1)   31/   E8E9E : =$3                 vcDT4 set $03
(1)   32/   E8E9E : (MACRO)             	smpsVcCoarseFreq    $03, $07, $04, $03
(1)   32/   E8E9E : =$3                 vcCF1 set $03
(1)   32/   E8E9E : =$7                 vcCF2 set $07
(1)   32/   E8E9E : =$4                 vcCF3 set $04
(1)   32/   E8E9E : =$3                 vcCF4 set $03
(1)   33/   E8E9E : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   33/   E8E9E : =$0                 vcRS1 set $00
(1)   33/   E8E9E : =$0                 vcRS2 set $00
(1)   33/   E8E9E : =$0                 vcRS3 set $00
(1)   33/   E8E9E : =$0                 vcRS4 set $00
(1)   34/   E8E9E : (MACRO)             	smpsVcAttackRate    $17, $0D, $1B, $0F
(1)   34/   E8E9E : =$17                vcAR1 set $17
(1)   34/   E8E9E : =$D                 vcAR2 set $0D
(1)   34/   E8E9E : =$1B                vcAR3 set $1B
(1)   34/   E8E9E : =$F                 vcAR4 set $0F
(1)   35/   E8E9E : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   35/   E8E9E : =$0                 vcAM1 set $00<<5
(1)   35/   E8E9E : =$0                 vcAM2 set $00<<5
(1)   35/   E8E9E : =$0                 vcAM3 set $00<<5
(1)   35/   E8E9E : =$0                 vcAM4 set $00<<5
(1)   36/   E8E9E : (MACRO)             	smpsVcDecayRate1    $0B, $04, $02, $00
(1)   36/   E8E9E : =$B                 vcD1R1 set $0B
(1)   36/   E8E9E : =$4                 vcD1R2 set $04
(1)   36/   E8E9E : =$2                 vcD1R3 set $02
(1)   36/   E8E9E : =$0                 vcD1R4 set $00
(1)   37/   E8E9E : (MACRO)             	smpsVcDecayRate2    $09, $00, $08, $08
(1)   37/   E8E9E : =$9                 vcD2R1 set $09
(1)   37/   E8E9E : =$0                 vcD2R2 set $00
(1)   37/   E8E9E : =$8                 vcD2R3 set $08
(1)   37/   E8E9E : =$8                 vcD2R4 set $08
(1)   38/   E8E9E : (MACRO)             	smpsVcDecayLevel    $06, $05, $04, $06
(1)   38/   E8E9E : =$6                 vcDL1 set $06
(1)   38/   E8E9E : =$5                 vcDL2 set $05
(1)   38/   E8E9E : =$4                 vcDL3 set $04
(1)   38/   E8E9E : =$6                 vcDL4 set $06
(1)   39/   E8E9E : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   39/   E8E9E : =$F                 vcRR1 set $0F
(1)   39/   E8E9E : =$F                 vcRR2 set $0F
(1)   39/   E8E9E : =$F                 vcRR3 set $0F
(1)   39/   E8E9E : =$F                 vcRR4 set $0F
(1)   40/   E8E9E : (MACRO)             	smpsVcTotalLevel    $00, $00, $00, $05
(1)   40/   E8E9E : =$0                 vcTL1 set $00
(1)   40/   E8E9E : =$0                 vcTL2 set $00
(1)   40/   E8E9E : =$0                 vcTL3 set $00
(1)   40/   E8E9E : =$5                 vcTL4 set $05
(1)   40/   E8E9E : 32                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   40/   E8E9F :                     ;   0     1     2     3     4     5     6     7
(1)   40/   E8E9F :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   40/   E8E9F : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   40/   E8E9F : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   40/   E8E9F : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   40/   E8E9F : =$80                vcTLMask1 set $80
(1)   40/   E8E9F :                     
(1)   40/   E8E9F :                     
(1)   40/   E8E9F : 3334 1713                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   40/   E8EA3 : 0F1B 0D17                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   40/   E8EA7 : 0002 040B                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   40/   E8EAB : 0808 0009                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   40/   E8EAF : 6F4F 5F6F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   40/   E8EB3 : 0500 0080                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   41/   E8EB7 :                     
(1)   42/   E8EB7 :                     
  586/   E8EB7 :                        Sound67:	include "sfx-improved/E7 - Drawbridge Move.asm"
(1)    1/   E8EB7 :                     Sound67_DrawbridgeMove_Header:
(1)    2/   E8EB7 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8EB7 :                     
(1)    2/   E8EB7 : =$3                 SourceDriver set 3
(1)    2/   E8EB7 :                     
(1)    2/   E8EB7 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8EB7 :                     
(1)    2/   E8EB7 : =$E8EB7             songStart set *
(1)    2/   E8EB7 :                     
(1)    2/   E8EB7 :                     
(1)    3/   E8EB7 : (MACRO)             	smpsHeaderVoice     Sound67_DrawbridgeMove_Voices
(1)    3/   E8EB7 : D88E                                dc.w    z80_ptr(SOUND67_DRAWBRIDGEMOVE_VOICES)
(1)    4/   E8EB9 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8EB9 : 01                          dc.b    $01
(1)    5/   E8EBA : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8EBA : 01                          dc.b    $01
(1)    6/   E8EBB :                     
(1)    7/   E8EBB : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound67_DrawbridgeMove_PSG3,	$00, $00
(1)    7/   E8EBB : 80C0                        dc.b    $80,CPSG3
(1)    7/   E8EBD :  (MACRO-2)                  CheckedChannelPointer SOUND67_DRAWBRIDGEMOVE_PSG3
(1)    7/   E8EBD : C18E                                dc.w    z80_ptr(SOUND67_DRAWBRIDGEMOVE_PSG3)
(1)    7/   E8EBF :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E8EBF : 00                                  dc.b    $00
(1)    7/   E8EC0 : 00                          dc.b    $00
(1)    8/   E8EC1 :                     
(1)    9/   E8EC1 :                     ; PSG3 Data
(1)   10/   E8EC1 :                     Sound67_DrawbridgeMove_PSG3:
(1)   11/   E8EC1 : (MACRO)             	smpsPSGvoice        fTone_06
(1)   11/   E8EC1 : F506                        dc.b    $F5,FTONE_06
(1)   12/   E8EC3 : (MACRO)             	smpsPSGform         $E7
(1)   12/   E8EC3 : F3E7                        dc.b    $F3,$E7
(1)   13/   E8EC5 : 900A 940A 980A 9C0A 	dc.b	nEb1, $0A, nG1, $0A, nB1, $0A, nEb2, $0A, nG2, $0A, nB2, $08
            E8ECD : A00A A408         
(1)   14/   E8ED1 : A808 AC08 B008      	dc.b	nEb3, $08, nG3, $08, nB3, $08
(1)   15/   E8ED7 : (MACRO)             	smpsStop
(1)   15/   E8ED7 : F2                          dc.b    $F2
(1)   16/   E8ED8 :                     
(1)   17/   E8ED8 :                     ; Song seems to not use any FM voices
(1)   18/   E8ED8 :                     Sound67_DrawbridgeMove_Voices:
(1)   19/   E8ED8 :                     
  587/   E8ED8 :                        Sound68:	include "sfx-improved/E8 - Quick Door Slam.asm"
(1)    1/   E8ED8 :                     Sound68_QuickDoorSlam_Header:
(1)    2/   E8ED8 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8ED8 :                     
(1)    2/   E8ED8 : =$3                 SourceDriver set 3
(1)    2/   E8ED8 :                     
(1)    2/   E8ED8 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8ED8 :                     
(1)    2/   E8ED8 : =$E8ED8             songStart set *
(1)    2/   E8ED8 :                     
(1)    2/   E8ED8 :                     
(1)    3/   E8ED8 : (MACRO)             	smpsHeaderVoice     Sound68_QuickDoorSlam_Voices
(1)    3/   E8ED8 : E98E                                dc.w    z80_ptr(SOUND68_QUICKDOORSLAM_VOICES)
(1)    4/   E8EDA : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8EDA : 01                          dc.b    $01
(1)    5/   E8EDB : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8EDB : 01                          dc.b    $01
(1)    6/   E8EDC :                     
(1)    7/   E8EDC : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound68_QuickDoorSlam_FM5,	$F4, $00
(1)    7/   E8EDC : 8005                        dc.b    $80,CFM5
(1)    7/   E8EDE :  (MACRO-2)                  CheckedChannelPointer SOUND68_QUICKDOORSLAM_FM5
(1)    7/   E8EDE : E28E                                dc.w    z80_ptr(SOUND68_QUICKDOORSLAM_FM5)
(1)    7/   E8EE0 : F4                                  dc.b    $F4
(1)    7/   E8EE1 : 00                          dc.b    $00
(1)    8/   E8EE2 :                     
(1)    9/   E8EE2 :                     ; FM5 Data
(1)   10/   E8EE2 :                     Sound68_QuickDoorSlam_FM5:
(1)   11/   E8EE2 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8EE2 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8EE2 : EF00                                dc.b    $EF,$00
(1)   12/   E8EE4 : 9B04 A506           	dc.b	nD2, $04, nC3, $06
(1)   13/   E8EE8 : (MACRO)             	smpsStop
(1)   13/   E8EE8 : F2                          dc.b    $F2
(1)   14/   E8EE9 :                     
(1)   15/   E8EE9 :                     Sound68_QuickDoorSlam_Voices:
(1)   16/   E8EE9 :                     ;	Voice $00
(1)   17/   E8EE9 :                     ;	$3C
(1)   18/   E8EE9 :                     ;	$00, $00, $00, $00, 	$1F, $1F, $1F, $1F, 	$00, $16, $0F, $0F
(1)   19/   E8EE9 :                     ;	$00, $00, $00, $00, 	$0F, $AF, $FF, $FF, 	$00, $80, $0A, $80
(1)   20/   E8EE9 : (MACRO)             	smpsVcAlgorithm     $04
(1)   20/   E8EE9 : =$4                 vcAlgorithm set $04
(1)   21/   E8EE9 : (MACRO)             	smpsVcFeedback      $07
(1)   21/   E8EE9 : =$7                 vcFeedback set $07
(1)   22/   E8EE9 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E8EE9 : =$0                 vcUnusedBits set $00
(1)   22/   E8EE9 : =$0                 vcD1R1Unk set 0
(1)   22/   E8EE9 : =$0                 vcD1R2Unk set 0
(1)   22/   E8EE9 : =$0                 vcD1R3Unk set 0
(1)   22/   E8EE9 : =$0                 vcD1R4Unk set 0
(1)   23/   E8EE9 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   23/   E8EE9 : =$0                 vcDT1 set $00
(1)   23/   E8EE9 : =$0                 vcDT2 set $00
(1)   23/   E8EE9 : =$0                 vcDT3 set $00
(1)   23/   E8EE9 : =$0                 vcDT4 set $00
(1)   24/   E8EE9 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   24/   E8EE9 : =$0                 vcCF1 set $00
(1)   24/   E8EE9 : =$0                 vcCF2 set $00
(1)   24/   E8EE9 : =$0                 vcCF3 set $00
(1)   24/   E8EE9 : =$0                 vcCF4 set $00
(1)   25/   E8EE9 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E8EE9 : =$0                 vcRS1 set $00
(1)   25/   E8EE9 : =$0                 vcRS2 set $00
(1)   25/   E8EE9 : =$0                 vcRS3 set $00
(1)   25/   E8EE9 : =$0                 vcRS4 set $00
(1)   26/   E8EE9 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E8EE9 : =$1F                vcAR1 set $1F
(1)   26/   E8EE9 : =$1F                vcAR2 set $1F
(1)   26/   E8EE9 : =$1F                vcAR3 set $1F
(1)   26/   E8EE9 : =$1F                vcAR4 set $1F
(1)   27/   E8EE9 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8EE9 : =$0                 vcAM1 set $00<<5
(1)   27/   E8EE9 : =$0                 vcAM2 set $00<<5
(1)   27/   E8EE9 : =$0                 vcAM3 set $00<<5
(1)   27/   E8EE9 : =$0                 vcAM4 set $00<<5
(1)   28/   E8EE9 : (MACRO)             	smpsVcDecayRate1    $0F, $0F, $16, $00
(1)   28/   E8EE9 : =$F                 vcD1R1 set $0F
(1)   28/   E8EE9 : =$F                 vcD1R2 set $0F
(1)   28/   E8EE9 : =$16                vcD1R3 set $16
(1)   28/   E8EE9 : =$0                 vcD1R4 set $00
(1)   29/   E8EE9 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   29/   E8EE9 : =$0                 vcD2R1 set $00
(1)   29/   E8EE9 : =$0                 vcD2R2 set $00
(1)   29/   E8EE9 : =$0                 vcD2R3 set $00
(1)   29/   E8EE9 : =$0                 vcD2R4 set $00
(1)   30/   E8EE9 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0A, $00
(1)   30/   E8EE9 : =$F                 vcDL1 set $0F
(1)   30/   E8EE9 : =$F                 vcDL2 set $0F
(1)   30/   E8EE9 : =$A                 vcDL3 set $0A
(1)   30/   E8EE9 : =$0                 vcDL4 set $00
(1)   31/   E8EE9 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E8EE9 : =$F                 vcRR1 set $0F
(1)   31/   E8EE9 : =$F                 vcRR2 set $0F
(1)   31/   E8EE9 : =$F                 vcRR3 set $0F
(1)   31/   E8EE9 : =$F                 vcRR4 set $0F
(1)   32/   E8EE9 : (MACRO)             	smpsVcTotalLevel    $00, $0A, $00, $00
(1)   32/   E8EE9 : =$0                 vcTL1 set $00
(1)   32/   E8EE9 : =$A                 vcTL2 set $0A
(1)   32/   E8EE9 : =$0                 vcTL3 set $00
(1)   32/   E8EE9 : =$0                 vcTL4 set $00
(1)   32/   E8EE9 : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8EEA :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8EEA :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8EEA : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   32/   E8EEA : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   32/   E8EEA : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   32/   E8EEA : =$80                vcTLMask1 set $80
(1)   32/   E8EEA :                     
(1)   32/   E8EEA :                     
(1)   32/   E8EEA : 0000 0000                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8EEE : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8EF2 : 0016 0F0F                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8EF6 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8EFA : 0FAF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8EFE : 0080 0A80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8F02 :                     
(1)   34/   E8F02 :                     
  588/   E8F02 :                        Sound69:	include "sfx-improved/E9 - Drawbridge Down.asm"
(1)    1/   E8F02 :                     Sound69_DrawbridgeDown_Header:
(1)    2/   E8F02 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E8F02 :                     
(1)    2/   E8F02 : =$3                 SourceDriver set 3
(1)    2/   E8F02 :                     
(1)    2/   E8F02 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E8F02 :                     
(1)    2/   E8F02 : =$E8F02             songStart set *
(1)    2/   E8F02 :                     
(1)    2/   E8F02 :                     
(1)    3/   E8F02 : (MACRO)             	smpsHeaderVoice     Sound69_DrawbridgeDown_Voices
(1)    3/   E8F02 : 268F                                dc.w    z80_ptr(SOUND69_DRAWBRIDGEDOWN_VOICES)
(1)    4/   E8F04 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8F04 : 01                          dc.b    $01
(1)    5/   E8F05 : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E8F05 : 02                          dc.b    $02
(1)    6/   E8F06 :                     
(1)    7/   E8F06 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound69_DrawbridgeDown_FM5,	$F4, $00
(1)    7/   E8F06 : 8005                        dc.b    $80,CFM5
(1)    7/   E8F08 :  (MACRO-2)                  CheckedChannelPointer SOUND69_DRAWBRIDGEDOWN_FM5
(1)    7/   E8F08 : 128F                                dc.w    z80_ptr(SOUND69_DRAWBRIDGEDOWN_FM5)
(1)    7/   E8F0A : F4                                  dc.b    $F4
(1)    7/   E8F0B : 00                          dc.b    $00
(1)    8/   E8F0C : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound69_DrawbridgeDown_PSG3,	$00, $00
(1)    8/   E8F0C : 80C0                        dc.b    $80,CPSG3
(1)    8/   E8F0E :  (MACRO-2)                  CheckedChannelPointer SOUND69_DRAWBRIDGEDOWN_PSG3
(1)    8/   E8F0E : 1B8F                                dc.w    z80_ptr(SOUND69_DRAWBRIDGEDOWN_PSG3)
(1)    8/   E8F10 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E8F10 : 00                                  dc.b    $00
(1)    8/   E8F11 : 00                          dc.b    $00
(1)    9/   E8F12 :                     
(1)   10/   E8F12 :                     ; FM5 Data
(1)   11/   E8F12 :                     Sound69_DrawbridgeDown_FM5:
(1)   12/   E8F12 : (MACRO)             	smpsSetvoice        $00
(1)   12/   E8F12 :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E8F12 : EF00                                dc.b    $EF,$00
(1)   13/   E8F14 : 9B03 A806 9E08      	dc.b	nD2, $03, nEb3, $06, nF2, $08
(1)   14/   E8F1A : (MACRO)             	smpsStop
(1)   14/   E8F1A : F2                          dc.b    $F2
(1)   15/   E8F1B :                     
(1)   16/   E8F1B :                     ; PSG3 Data
(1)   17/   E8F1B :                     Sound69_DrawbridgeDown_PSG3:
(1)   18/   E8F1B : (MACRO)             	smpsPSGvoice        fTone_04
(1)   18/   E8F1B : F504                        dc.b    $F5,FTONE_04
(1)   19/   E8F1D : (MACRO)             	smpsPSGform         $E7
(1)   19/   E8F1D : F3E7                        dc.b    $F3,$E7
(1)   20/   E8F1F : C703 C706 C708      	dc.b	nMaxPSG, $03, nMaxPSG, $06, nMaxPSG, $08
(1)   21/   E8F25 : (MACRO)             	smpsStop
(1)   21/   E8F25 : F2                          dc.b    $F2
(1)   22/   E8F26 :                     
(1)   23/   E8F26 :                     Sound69_DrawbridgeDown_Voices:
(1)   24/   E8F26 :                     ;	Voice $00
(1)   25/   E8F26 :                     ;	$3C
(1)   26/   E8F26 :                     ;	$00, $00, $00, $00, 	$1F, $1F, $1F, $1F, 	$00, $16, $0F, $0F
(1)   27/   E8F26 :                     ;	$00, $00, $00, $00, 	$0F, $AF, $FF, $FF, 	$00, $80, $0A, $80
(1)   28/   E8F26 : (MACRO)             	smpsVcAlgorithm     $04
(1)   28/   E8F26 : =$4                 vcAlgorithm set $04
(1)   29/   E8F26 : (MACRO)             	smpsVcFeedback      $07
(1)   29/   E8F26 : =$7                 vcFeedback set $07
(1)   30/   E8F26 : (MACRO)             	smpsVcUnusedBits    $00
(1)   30/   E8F26 : =$0                 vcUnusedBits set $00
(1)   30/   E8F26 : =$0                 vcD1R1Unk set 0
(1)   30/   E8F26 : =$0                 vcD1R2Unk set 0
(1)   30/   E8F26 : =$0                 vcD1R3Unk set 0
(1)   30/   E8F26 : =$0                 vcD1R4Unk set 0
(1)   31/   E8F26 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   31/   E8F26 : =$0                 vcDT1 set $00
(1)   31/   E8F26 : =$0                 vcDT2 set $00
(1)   31/   E8F26 : =$0                 vcDT3 set $00
(1)   31/   E8F26 : =$0                 vcDT4 set $00
(1)   32/   E8F26 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   32/   E8F26 : =$0                 vcCF1 set $00
(1)   32/   E8F26 : =$0                 vcCF2 set $00
(1)   32/   E8F26 : =$0                 vcCF3 set $00
(1)   32/   E8F26 : =$0                 vcCF4 set $00
(1)   33/   E8F26 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   33/   E8F26 : =$0                 vcRS1 set $00
(1)   33/   E8F26 : =$0                 vcRS2 set $00
(1)   33/   E8F26 : =$0                 vcRS3 set $00
(1)   33/   E8F26 : =$0                 vcRS4 set $00
(1)   34/   E8F26 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   34/   E8F26 : =$1F                vcAR1 set $1F
(1)   34/   E8F26 : =$1F                vcAR2 set $1F
(1)   34/   E8F26 : =$1F                vcAR3 set $1F
(1)   34/   E8F26 : =$1F                vcAR4 set $1F
(1)   35/   E8F26 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   35/   E8F26 : =$0                 vcAM1 set $00<<5
(1)   35/   E8F26 : =$0                 vcAM2 set $00<<5
(1)   35/   E8F26 : =$0                 vcAM3 set $00<<5
(1)   35/   E8F26 : =$0                 vcAM4 set $00<<5
(1)   36/   E8F26 : (MACRO)             	smpsVcDecayRate1    $0F, $0F, $16, $00
(1)   36/   E8F26 : =$F                 vcD1R1 set $0F
(1)   36/   E8F26 : =$F                 vcD1R2 set $0F
(1)   36/   E8F26 : =$16                vcD1R3 set $16
(1)   36/   E8F26 : =$0                 vcD1R4 set $00
(1)   37/   E8F26 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   37/   E8F26 : =$0                 vcD2R1 set $00
(1)   37/   E8F26 : =$0                 vcD2R2 set $00
(1)   37/   E8F26 : =$0                 vcD2R3 set $00
(1)   37/   E8F26 : =$0                 vcD2R4 set $00
(1)   38/   E8F26 : (MACRO)             	smpsVcDecayLevel    $0F, $0F, $0A, $00
(1)   38/   E8F26 : =$F                 vcDL1 set $0F
(1)   38/   E8F26 : =$F                 vcDL2 set $0F
(1)   38/   E8F26 : =$A                 vcDL3 set $0A
(1)   38/   E8F26 : =$0                 vcDL4 set $00
(1)   39/   E8F26 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   39/   E8F26 : =$F                 vcRR1 set $0F
(1)   39/   E8F26 : =$F                 vcRR2 set $0F
(1)   39/   E8F26 : =$F                 vcRR3 set $0F
(1)   39/   E8F26 : =$F                 vcRR4 set $0F
(1)   40/   E8F26 : (MACRO)             	smpsVcTotalLevel    $00, $0A, $00, $00
(1)   40/   E8F26 : =$0                 vcTL1 set $00
(1)   40/   E8F26 : =$A                 vcTL2 set $0A
(1)   40/   E8F26 : =$0                 vcTL3 set $00
(1)   40/   E8F26 : =$0                 vcTL4 set $00
(1)   40/   E8F26 : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   40/   E8F27 :                     ;   0     1     2     3     4     5     6     7
(1)   40/   E8F27 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   40/   E8F27 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   40/   E8F27 : =$80                vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   40/   E8F27 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   40/   E8F27 : =$80                vcTLMask1 set $80
(1)   40/   E8F27 :                     
(1)   40/   E8F27 :                     
(1)   40/   E8F27 : 0000 0000                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   40/   E8F2B : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   40/   E8F2F : 0016 0F0F                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   40/   E8F33 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   40/   E8F37 : 0FAF FFFF                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   40/   E8F3B : 0080 0A80                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   41/   E8F3F :                     
(1)   42/   E8F3F :                     
  589/   E8F3F :                        Sound6A:	include "sfx-improved/EA - Laser Burst.asm"
(1)    1/   E8F3F :                     Sound6A_LaserBurst_Header:
(1)    2/   E8F3F : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8F3F :                     
(1)    2/   E8F3F : =$3                 SourceDriver set 3
(1)    2/   E8F3F :                     
(1)    2/   E8F3F : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8F3F :                     
(1)    2/   E8F3F : =$E8F3F             songStart set *
(1)    2/   E8F3F :                     
(1)    2/   E8F3F :                     
(1)    3/   E8F3F : (MACRO)             	smpsHeaderVoice     Sound6A_6F_Laser_Voices
(1)    3/   E8F3F : 518F                                dc.w    z80_ptr(SOUND6A_6F_LASER_VOICES)
(1)    4/   E8F41 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8F41 : 01                          dc.b    $01
(1)    5/   E8F42 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8F42 : 01                          dc.b    $01
(1)    6/   E8F43 :                     
(1)    7/   E8F43 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound6A_LaserBurst_FM5,	$00, $04
(1)    7/   E8F43 : 8005                        dc.b    $80,CFM5
(1)    7/   E8F45 :  (MACRO-2)                  CheckedChannelPointer SOUND6A_LASERBURST_FM5
(1)    7/   E8F45 : 498F                                dc.w    z80_ptr(SOUND6A_LASERBURST_FM5)
(1)    7/   E8F47 : 00                                  dc.b    $00
(1)    7/   E8F48 : 04                          dc.b    $04
(1)    8/   E8F49 :                     
(1)    9/   E8F49 :                     ; FM5 Data
(1)   10/   E8F49 :                     Sound6A_LaserBurst_FM5:
(1)   11/   E8F49 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8F49 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8F49 : EF00                                dc.b    $EF,$00
(1)   12/   E8F4B : DF14                	dc.b	nBb7, $14
(1)   13/   E8F4D : (MACRO)             	smpsAlterVol        $18
(1)   13/   E8F4D : E618                        dc.b    $E6,$18
(1)   14/   E8F4F : 06                  	dc.b	$06
(1)   15/   E8F50 : (MACRO)             	smpsStop
(1)   15/   E8F50 : F2                          dc.b    $F2
(1)   16/   E8F51 :                     
(1)   17/   E8F51 :                     Sound6A_6F_Laser_Voices:
(1)   18/   E8F51 :                     ;	Voice $00
(1)   19/   E8F51 :                     ;	$3D
(1)   20/   E8F51 :                     ;	$09, $34, $34, $28, 	$1F, $16, $16, $16, 	$00, $00, $00, $04
(1)   21/   E8F51 :                     ;	$00, $00, $00, $00, 	$0F, $0F, $0F, $0F, 	$15, $02, $02, $00
(1)   22/   E8F51 : (MACRO)             	smpsVcAlgorithm     $05
(1)   22/   E8F51 : =$5                 vcAlgorithm set $05
(1)   23/   E8F51 : (MACRO)             	smpsVcFeedback      $07
(1)   23/   E8F51 : =$7                 vcFeedback set $07
(1)   24/   E8F51 : (MACRO)             	smpsVcUnusedBits    $00
(1)   24/   E8F51 : =$0                 vcUnusedBits set $00
(1)   24/   E8F51 : =$0                 vcD1R1Unk set 0
(1)   24/   E8F51 : =$0                 vcD1R2Unk set 0
(1)   24/   E8F51 : =$0                 vcD1R3Unk set 0
(1)   24/   E8F51 : =$0                 vcD1R4Unk set 0
(1)   25/   E8F51 : (MACRO)             	smpsVcDetune        $02, $03, $03, $00
(1)   25/   E8F51 : =$2                 vcDT1 set $02
(1)   25/   E8F51 : =$3                 vcDT2 set $03
(1)   25/   E8F51 : =$3                 vcDT3 set $03
(1)   25/   E8F51 : =$0                 vcDT4 set $00
(1)   26/   E8F51 : (MACRO)             	smpsVcCoarseFreq    $08, $04, $04, $09
(1)   26/   E8F51 : =$8                 vcCF1 set $08
(1)   26/   E8F51 : =$4                 vcCF2 set $04
(1)   26/   E8F51 : =$4                 vcCF3 set $04
(1)   26/   E8F51 : =$9                 vcCF4 set $09
(1)   27/   E8F51 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   27/   E8F51 : =$0                 vcRS1 set $00
(1)   27/   E8F51 : =$0                 vcRS2 set $00
(1)   27/   E8F51 : =$0                 vcRS3 set $00
(1)   27/   E8F51 : =$0                 vcRS4 set $00
(1)   28/   E8F51 : (MACRO)             	smpsVcAttackRate    $16, $16, $16, $1F
(1)   28/   E8F51 : =$16                vcAR1 set $16
(1)   28/   E8F51 : =$16                vcAR2 set $16
(1)   28/   E8F51 : =$16                vcAR3 set $16
(1)   28/   E8F51 : =$1F                vcAR4 set $1F
(1)   29/   E8F51 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   29/   E8F51 : =$0                 vcAM1 set $00<<7
(1)   29/   E8F51 : =$0                 vcAM2 set $00<<7
(1)   29/   E8F51 : =$0                 vcAM3 set $00<<7
(1)   29/   E8F51 : =$0                 vcAM4 set $00<<7
(1)   30/   E8F51 : (MACRO)             	smpsVcDecayRate1    $04, $00, $00, $00
(1)   30/   E8F51 : =$4                 vcD1R1 set $04
(1)   30/   E8F51 : =$0                 vcD1R2 set $00
(1)   30/   E8F51 : =$0                 vcD1R3 set $00
(1)   30/   E8F51 : =$0                 vcD1R4 set $00
(1)   31/   E8F51 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   31/   E8F51 : =$0                 vcD2R1 set $00
(1)   31/   E8F51 : =$0                 vcD2R2 set $00
(1)   31/   E8F51 : =$0                 vcD2R3 set $00
(1)   31/   E8F51 : =$0                 vcD2R4 set $00
(1)   32/   E8F51 : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   32/   E8F51 : =$0                 vcDL1 set $00
(1)   32/   E8F51 : =$0                 vcDL2 set $00
(1)   32/   E8F51 : =$0                 vcDL3 set $00
(1)   32/   E8F51 : =$0                 vcDL4 set $00
(1)   33/   E8F51 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   33/   E8F51 : =$F                 vcRR1 set $0F
(1)   33/   E8F51 : =$F                 vcRR2 set $0F
(1)   33/   E8F51 : =$F                 vcRR3 set $0F
(1)   33/   E8F51 : =$F                 vcRR4 set $0F
(1)   34/   E8F51 : (MACRO)             	smpsVcTotalLevel    $00, $02, $02, $15
(1)   34/   E8F51 : =$0                 vcTL1 set $00
(1)   34/   E8F51 : =$2                 vcTL2 set $02
(1)   34/   E8F51 : =$2                 vcTL3 set $02
(1)   34/   E8F51 : =$15                vcTL4 set $15
(1)   34/   E8F51 : 3D                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   34/   E8F52 :                     ;   0     1     2     3     4     5     6     7
(1)   34/   E8F52 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   34/   E8F52 : =$0                 vcTLMask4 set 0
(1)   34/   E8F52 : =$0                 vcTLMask3 set 0
(1)   34/   E8F52 : =$0                 vcTLMask2 set 0
(1)   34/   E8F52 : =$0                 vcTLMask1 set 0
(1)   34/   E8F52 :                     
(1)   34/   E8F52 :                     
(1)   34/   E8F52 : 0934 3428                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   34/   E8F56 : 1F16 1616                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   34/   E8F5A : 0000 0004                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   34/   E8F5E : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   34/   E8F62 : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   34/   E8F66 : 1502 0200                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   35/   E8F6A :                     
(1)   36/   E8F6A :                     
  590/   E8F6A :                        Sound6B:	include "sfx-improved/EB - Scatter.asm"
(1)    1/   E8F6A :                     Sound6B_LaserFloor_Header:
(1)    2/   E8F6A : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8F6A :                     
(1)    2/   E8F6A : =$3                 SourceDriver set 3
(1)    2/   E8F6A :                     
(1)    2/   E8F6A : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8F6A :                     
(1)    2/   E8F6A : =$E8F6A             songStart set *
(1)    2/   E8F6A :                     
(1)    2/   E8F6A :                     
(1)    3/   E8F6A : (MACRO)             	smpsHeaderVoice     Sound6B_LaserFloor_Voices
(1)    3/   E8F6A : 7B8F                                dc.w    z80_ptr(SOUND6B_LASERFLOOR_VOICES)
(1)    4/   E8F6C : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8F6C : 01                          dc.b    $01
(1)    5/   E8F6D : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E8F6D : 01                          dc.b    $01
(1)    6/   E8F6E :                     
(1)    7/   E8F6E : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound6B_LaserFloor_FM4,	$00, $02
(1)    7/   E8F6E : 8004                        dc.b    $80,CFM4
(1)    7/   E8F70 :  (MACRO-2)                  CheckedChannelPointer SOUND6B_LASERFLOOR_FM4
(1)    7/   E8F70 : 748F                                dc.w    z80_ptr(SOUND6B_LASERFLOOR_FM4)
(1)    7/   E8F72 : 00                                  dc.b    $00
(1)    7/   E8F73 : 02                          dc.b    $02
(1)    8/   E8F74 :                     
(1)    9/   E8F74 :                     ; FM4 Data
(1)   10/   E8F74 :                     Sound6B_LaserFloor_FM4:
(1)   11/   E8F74 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E8F74 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E8F74 : EF00                                dc.b    $EF,$00
(1)   12/   E8F76 : 8104 800C           	dc.b	nC0, $04, nRst, $0C
(1)   13/   E8F7A : (MACRO)             	smpsStop
(1)   13/   E8F7A : F2                          dc.b    $F2
(1)   14/   E8F7B :                     
(1)   15/   E8F7B :                     Sound6B_LaserFloor_Voices:
(1)   16/   E8F7B :                     ;	Voice $00
(1)   17/   E8F7B :                     ;	$3A
(1)   18/   E8F7B :                     ;	$30, $40, $30, $70, 	$1F, $1F, $1F, $1F, 	$12, $01, $0A, $07
(1)   19/   E8F7B :                     ;	$00, $01, $01, $03, 	$00, $C3, $23, $46, 	$08, $1C, $07, $03
(1)   20/   E8F7B : (MACRO)             	smpsVcAlgorithm     $02
(1)   20/   E8F7B : =$2                 vcAlgorithm set $02
(1)   21/   E8F7B : (MACRO)             	smpsVcFeedback      $07
(1)   21/   E8F7B : =$7                 vcFeedback set $07
(1)   22/   E8F7B : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E8F7B : =$0                 vcUnusedBits set $00
(1)   22/   E8F7B : =$0                 vcD1R1Unk set 0
(1)   22/   E8F7B : =$0                 vcD1R2Unk set 0
(1)   22/   E8F7B : =$0                 vcD1R3Unk set 0
(1)   22/   E8F7B : =$0                 vcD1R4Unk set 0
(1)   23/   E8F7B : (MACRO)             	smpsVcDetune        $07, $03, $04, $03
(1)   23/   E8F7B : =$7                 vcDT1 set $07
(1)   23/   E8F7B : =$3                 vcDT2 set $03
(1)   23/   E8F7B : =$4                 vcDT3 set $04
(1)   23/   E8F7B : =$3                 vcDT4 set $03
(1)   24/   E8F7B : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   24/   E8F7B : =$0                 vcCF1 set $00
(1)   24/   E8F7B : =$0                 vcCF2 set $00
(1)   24/   E8F7B : =$0                 vcCF3 set $00
(1)   24/   E8F7B : =$0                 vcCF4 set $00
(1)   25/   E8F7B : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E8F7B : =$0                 vcRS1 set $00
(1)   25/   E8F7B : =$0                 vcRS2 set $00
(1)   25/   E8F7B : =$0                 vcRS3 set $00
(1)   25/   E8F7B : =$0                 vcRS4 set $00
(1)   26/   E8F7B : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E8F7B : =$1F                vcAR1 set $1F
(1)   26/   E8F7B : =$1F                vcAR2 set $1F
(1)   26/   E8F7B : =$1F                vcAR3 set $1F
(1)   26/   E8F7B : =$1F                vcAR4 set $1F
(1)   27/   E8F7B : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E8F7B : =$0                 vcAM1 set $00<<7
(1)   27/   E8F7B : =$0                 vcAM2 set $00<<7
(1)   27/   E8F7B : =$0                 vcAM3 set $00<<7
(1)   27/   E8F7B : =$0                 vcAM4 set $00<<7
(1)   28/   E8F7B : (MACRO)             	smpsVcDecayRate1    $07, $0A, $01, $12
(1)   28/   E8F7B : =$7                 vcD1R1 set $07
(1)   28/   E8F7B : =$A                 vcD1R2 set $0A
(1)   28/   E8F7B : =$1                 vcD1R3 set $01
(1)   28/   E8F7B : =$12                vcD1R4 set $12
(1)   29/   E8F7B : (MACRO)             	smpsVcDecayRate2    $03, $01, $01, $00
(1)   29/   E8F7B : =$3                 vcD2R1 set $03
(1)   29/   E8F7B : =$1                 vcD2R2 set $01
(1)   29/   E8F7B : =$1                 vcD2R3 set $01
(1)   29/   E8F7B : =$0                 vcD2R4 set $00
(1)   30/   E8F7B : (MACRO)             	smpsVcDecayLevel    $04, $02, $0C, $00
(1)   30/   E8F7B : =$4                 vcDL1 set $04
(1)   30/   E8F7B : =$2                 vcDL2 set $02
(1)   30/   E8F7B : =$C                 vcDL3 set $0C
(1)   30/   E8F7B : =$0                 vcDL4 set $00
(1)   31/   E8F7B : (MACRO)             	smpsVcReleaseRate   $06, $03, $03, $00
(1)   31/   E8F7B : =$6                 vcRR1 set $06
(1)   31/   E8F7B : =$3                 vcRR2 set $03
(1)   31/   E8F7B : =$3                 vcRR3 set $03
(1)   31/   E8F7B : =$0                 vcRR4 set $00
(1)   32/   E8F7B : (MACRO)             	smpsVcTotalLevel    $03, $07, $1C, $08
(1)   32/   E8F7B : =$3                 vcTL1 set $03
(1)   32/   E8F7B : =$7                 vcTL2 set $07
(1)   32/   E8F7B : =$1C                vcTL3 set $1C
(1)   32/   E8F7B : =$8                 vcTL4 set $08
(1)   32/   E8F7B : 3A                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E8F7C :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E8F7C :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E8F7C : =$0                 vcTLMask4 set 0
(1)   32/   E8F7C : =$0                 vcTLMask3 set 0
(1)   32/   E8F7C : =$0                 vcTLMask2 set 0
(1)   32/   E8F7C : =$0                 vcTLMask1 set 0
(1)   32/   E8F7C :                     
(1)   32/   E8F7C :                     
(1)   32/   E8F7C : 3040 3070                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E8F80 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E8F84 : 1201 0A07                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E8F88 : 0001 0103                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E8F8C : 00C3 2346                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E8F90 : 081C 0703                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E8F94 :                     
(1)   34/   E8F94 :                     
  591/   E8F94 :                        Sound6C:	include "sfx-improved/EC - Teleport.asm"
(1)    1/   E8F94 :                     Sound6C_Teleport_Header:
(1)    2/   E8F94 : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8F94 :                     
(1)    2/   E8F94 : =$3                 SourceDriver set 3
(1)    2/   E8F94 :                     
(1)    2/   E8F94 : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8F94 :                     
(1)    2/   E8F94 : =$E8F94             songStart set *
(1)    2/   E8F94 :                     
(1)    2/   E8F94 :                     
(1)    3/   E8F94 : (MACRO)             	smpsHeaderVoice     Sound6C_Teleport_Voices
(1)    3/   E8F94 : CD8F                                dc.w    z80_ptr(SOUND6C_TELEPORT_VOICES)
(1)    4/   E8F96 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E8F96 : 01                          dc.b    $01
(1)    5/   E8F97 : (MACRO)             	smpsHeaderChanSFX   $04
(1)    5/   E8F97 : 04                          dc.b    $04
(1)    6/   E8F98 :                     
(1)    7/   E8F98 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound6C_Teleport_FM5,	$00, $10
(1)    7/   E8F98 : 8005                        dc.b    $80,CFM5
(1)    7/   E8F9A :  (MACRO-2)                  CheckedChannelPointer SOUND6C_TELEPORT_FM5
(1)    7/   E8F9A : B28F                                dc.w    z80_ptr(SOUND6C_TELEPORT_FM5)
(1)    7/   E8F9C : 00                                  dc.b    $00
(1)    7/   E8F9D : 10                          dc.b    $10
(1)    8/   E8F9E : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound6C_Teleport_FM4,	$00, $10
(1)    8/   E8F9E : 8004                        dc.b    $80,CFM4
(1)    8/   E8FA0 :  (MACRO-2)                  CheckedChannelPointer SOUND6C_TELEPORT_FM4
(1)    8/   E8FA0 : B08F                                dc.w    z80_ptr(SOUND6C_TELEPORT_FM4)
(1)    8/   E8FA2 : 00                                  dc.b    $00
(1)    8/   E8FA3 : 10                          dc.b    $10
(1)    9/   E8FA4 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound5F_6C_PSG3,	$00, $00
(1)    9/   E8FA4 : 80C0                        dc.b    $80,CPSG3
(1)    9/   E8FA6 :  (MACRO-2)                  CheckedChannelPointer SOUND5F_6C_PSG3
(1)    9/   E8FA6 : D08C                                dc.w    z80_ptr(SOUND5F_6C_PSG3)
(1)    9/   E8FA8 :  (MACRO-2)                          PSGPitchConvert $00
(1)    9/   E8FA8 : 00                                  dc.b    $00
(1)    9/   E8FA9 : 00                          dc.b    $00
(1)   10/   E8FAA : (MACRO)             	smpsHeaderSFXChannel cPSG2, Sound5F_6C_PSG2,	$00, $00
(1)   10/   E8FAA : 80A0                        dc.b    $80,CPSG2
(1)   10/   E8FAC :  (MACRO-2)                  CheckedChannelPointer SOUND5F_6C_PSG2
(1)   10/   E8FAC : E58C                                dc.w    z80_ptr(SOUND5F_6C_PSG2)
(1)   10/   E8FAE :  (MACRO-2)                          PSGPitchConvert $00
(1)   10/   E8FAE : 00                                  dc.b    $00
(1)   10/   E8FAF : 00                          dc.b    $00
(1)   11/   E8FB0 :                     
(1)   12/   E8FB0 :                     ; FM4 Data
(1)   13/   E8FB0 :                     Sound6C_Teleport_FM4:
(1)   14/   E8FB0 : (MACRO)             	smpsAlterNote       $10
(1)   14/   E8FB0 :  (MACRO-2)                  smpsDetune      $10
(1)   14/   E8FB0 : E110                        dc.b    $E1,$10
(1)   15/   E8FB2 :                     
(1)   16/   E8FB2 :                     ; FM5 Data
(1)   17/   E8FB2 :                     Sound6C_Teleport_FM5:
(1)   18/   E8FB2 : (MACRO)             	smpsSetvoice        $01
(1)   18/   E8FB2 :  (MACRO-2)                  smpsFMvoice $01
(1)   18/   E8FB2 : EF01                                dc.b    $EF,$01
(1)   19/   E8FB4 : (MACRO)             	smpsModSet          $01, $01, $EC, $56
(1)   19/   E8FB4 : F0                          dc.b    $F0
(1)   19/   E8FB5 : 0101 EC56                           dc.b    $01,$01,$EC,$56
(1)   19/   E8FB9 :                             ;dc.b   $01,$EC,$56
(1)   20/   E8FB9 : C024                	dc.b	nEb5, $24
(1)   21/   E8FBB : (MACRO)             	smpsModOff
(1)   21/   E8FBB : FA                                  dc.b    $FA
(1)   22/   E8FBC : (MACRO)             	smpsSetvoice        $00
(1)   22/   E8FBC :  (MACRO-2)                  smpsFMvoice $00
(1)   22/   E8FBC : EF00                                dc.b    $EF,$00
(1)   23/   E8FBE : (MACRO)             	smpsAlterVol        $F0
(1)   23/   E8FBE : E6F0                        dc.b    $E6,$F0
(1)   24/   E8FC0 :                     
(1)   25/   E8FC0 :                     Sound6C_Teleport_Loop00:
(1)   26/   E8FC0 : BB02 E7             	dc.b	nBb4, $02, smpsNoAttack
(1)   27/   E8FC3 : (MACRO)             	smpsAlterVol        $02
(1)   27/   E8FC3 : E602                        dc.b    $E6,$02
(1)   28/   E8FC5 : (MACRO)             	smpsAlterPitch      $01
(1)   28/   E8FC5 :  (MACRO-2)                  smpsChangeTransposition $01
(1)   28/   E8FC5 : FB01                                dc.b    $FB,$01
(1)   29/   E8FC7 : (MACRO)             	smpsLoop            $00, $20, Sound6C_Teleport_Loop00
(1)   29/   E8FC7 : F7                          dc.b    $F7
(1)   29/   E8FC8 : 0020                        dc.b    $00,$20
(1)   29/   E8FCA : C08F                                dc.w    z80_ptr(SOUND6C_TELEPORT_LOOP00)
(1)   30/   E8FCC : (MACRO)             	smpsStop
(1)   30/   E8FCC : F2                          dc.b    $F2
(1)   31/   E8FCD :                     
(1)   32/   E8FCD :                     Sound6C_Teleport_Voices:
(1)   33/   E8FCD :                     ;	Voice $00
(1)   34/   E8FCD :                     ;	$00
(1)   35/   E8FCD :                     ;	$53, $03, $30, $30, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   36/   E8FCD :                     ;	$00, $00, $00, $00, 	$00, $00, $00, $0F, 	$0F, $23, $06, $80
(1)   37/   E8FCD : (MACRO)             	smpsVcAlgorithm     $00
(1)   37/   E8FCD : =$0                 vcAlgorithm set $00
(1)   38/   E8FCD : (MACRO)             	smpsVcFeedback      $00
(1)   38/   E8FCD : =$0                 vcFeedback set $00
(1)   39/   E8FCD : (MACRO)             	smpsVcUnusedBits    $00
(1)   39/   E8FCD : =$0                 vcUnusedBits set $00
(1)   39/   E8FCD : =$0                 vcD1R1Unk set 0
(1)   39/   E8FCD : =$0                 vcD1R2Unk set 0
(1)   39/   E8FCD : =$0                 vcD1R3Unk set 0
(1)   39/   E8FCD : =$0                 vcD1R4Unk set 0
(1)   40/   E8FCD : (MACRO)             	smpsVcDetune        $03, $03, $00, $05
(1)   40/   E8FCD : =$3                 vcDT1 set $03
(1)   40/   E8FCD : =$3                 vcDT2 set $03
(1)   40/   E8FCD : =$0                 vcDT3 set $00
(1)   40/   E8FCD : =$5                 vcDT4 set $05
(1)   41/   E8FCD : (MACRO)             	smpsVcCoarseFreq    $00, $00, $03, $03
(1)   41/   E8FCD : =$0                 vcCF1 set $00
(1)   41/   E8FCD : =$0                 vcCF2 set $00
(1)   41/   E8FCD : =$3                 vcCF3 set $03
(1)   41/   E8FCD : =$3                 vcCF4 set $03
(1)   42/   E8FCD : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   42/   E8FCD : =$0                 vcRS1 set $00
(1)   42/   E8FCD : =$0                 vcRS2 set $00
(1)   42/   E8FCD : =$0                 vcRS3 set $00
(1)   42/   E8FCD : =$0                 vcRS4 set $00
(1)   43/   E8FCD : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   43/   E8FCD : =$1F                vcAR1 set $1F
(1)   43/   E8FCD : =$1F                vcAR2 set $1F
(1)   43/   E8FCD : =$1F                vcAR3 set $1F
(1)   43/   E8FCD : =$1F                vcAR4 set $1F
(1)   44/   E8FCD : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   44/   E8FCD : =$0                 vcAM1 set $00<<7
(1)   44/   E8FCD : =$0                 vcAM2 set $00<<7
(1)   44/   E8FCD : =$0                 vcAM3 set $00<<7
(1)   44/   E8FCD : =$0                 vcAM4 set $00<<7
(1)   45/   E8FCD : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   45/   E8FCD : =$0                 vcD1R1 set $00
(1)   45/   E8FCD : =$0                 vcD1R2 set $00
(1)   45/   E8FCD : =$0                 vcD1R3 set $00
(1)   45/   E8FCD : =$0                 vcD1R4 set $00
(1)   46/   E8FCD : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   46/   E8FCD : =$0                 vcD2R1 set $00
(1)   46/   E8FCD : =$0                 vcD2R2 set $00
(1)   46/   E8FCD : =$0                 vcD2R3 set $00
(1)   46/   E8FCD : =$0                 vcD2R4 set $00
(1)   47/   E8FCD : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   47/   E8FCD : =$0                 vcDL1 set $00
(1)   47/   E8FCD : =$0                 vcDL2 set $00
(1)   47/   E8FCD : =$0                 vcDL3 set $00
(1)   47/   E8FCD : =$0                 vcDL4 set $00
(1)   48/   E8FCD : (MACRO)             	smpsVcReleaseRate   $0F, $00, $00, $00
(1)   48/   E8FCD : =$F                 vcRR1 set $0F
(1)   48/   E8FCD : =$0                 vcRR2 set $00
(1)   48/   E8FCD : =$0                 vcRR3 set $00
(1)   48/   E8FCD : =$0                 vcRR4 set $00
(1)   49/   E8FCD : (MACRO)             	smpsVcTotalLevel    $80, $06, $23, $0F
(1)   49/   E8FCD : =$80                vcTL1 set $80
(1)   49/   E8FCD : =$6                 vcTL2 set $06
(1)   49/   E8FCD : =$23                vcTL3 set $23
(1)   49/   E8FCD : =$F                 vcTL4 set $0F
(1)   49/   E8FCD : 00                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   49/   E8FCE :                     ;   0     1     2     3     4     5     6     7
(1)   49/   E8FCE :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   49/   E8FCE : =$0                 vcTLMask4 set 0
(1)   49/   E8FCE : =$0                 vcTLMask3 set 0
(1)   49/   E8FCE : =$0                 vcTLMask2 set 0
(1)   49/   E8FCE : =$0                 vcTLMask1 set 0
(1)   49/   E8FCE :                     
(1)   49/   E8FCE :                     
(1)   49/   E8FCE : 5303 3030                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   49/   E8FD2 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   49/   E8FD6 : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   49/   E8FDA : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   49/   E8FDE : 0000 000F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   49/   E8FE2 : 0F23 0680                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   50/   E8FE6 :                     
(1)   51/   E8FE6 :                     ;	Voice $01
(1)   52/   E8FE6 :                     ;	$3C
(1)   53/   E8FE6 :                     ;	$72, $32, $32, $72, 	$14, $0F, $14, $0F, 	$00, $00, $00, $00
(1)   54/   E8FE6 :                     ;	$00, $00, $00, $00, 	$02, $08, $02, $08, 	$35, $00, $14, $00
(1)   55/   E8FE6 : (MACRO)             	smpsVcAlgorithm     $04
(1)   55/   E8FE6 : =$4                 vcAlgorithm set $04
(1)   56/   E8FE6 : (MACRO)             	smpsVcFeedback      $07
(1)   56/   E8FE6 : =$7                 vcFeedback set $07
(1)   57/   E8FE6 : (MACRO)             	smpsVcUnusedBits    $00
(1)   57/   E8FE6 : =$0                 vcUnusedBits set $00
(1)   57/   E8FE6 : =$0                 vcD1R1Unk set 0
(1)   57/   E8FE6 : =$0                 vcD1R2Unk set 0
(1)   57/   E8FE6 : =$0                 vcD1R3Unk set 0
(1)   57/   E8FE6 : =$0                 vcD1R4Unk set 0
(1)   58/   E8FE6 : (MACRO)             	smpsVcDetune        $07, $03, $03, $07
(1)   58/   E8FE6 : =$7                 vcDT1 set $07
(1)   58/   E8FE6 : =$3                 vcDT2 set $03
(1)   58/   E8FE6 : =$3                 vcDT3 set $03
(1)   58/   E8FE6 : =$7                 vcDT4 set $07
(1)   59/   E8FE6 : (MACRO)             	smpsVcCoarseFreq    $02, $02, $02, $02
(1)   59/   E8FE6 : =$2                 vcCF1 set $02
(1)   59/   E8FE6 : =$2                 vcCF2 set $02
(1)   59/   E8FE6 : =$2                 vcCF3 set $02
(1)   59/   E8FE6 : =$2                 vcCF4 set $02
(1)   60/   E8FE6 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   60/   E8FE6 : =$0                 vcRS1 set $00
(1)   60/   E8FE6 : =$0                 vcRS2 set $00
(1)   60/   E8FE6 : =$0                 vcRS3 set $00
(1)   60/   E8FE6 : =$0                 vcRS4 set $00
(1)   61/   E8FE6 : (MACRO)             	smpsVcAttackRate    $0F, $14, $0F, $14
(1)   61/   E8FE6 : =$F                 vcAR1 set $0F
(1)   61/   E8FE6 : =$14                vcAR2 set $14
(1)   61/   E8FE6 : =$F                 vcAR3 set $0F
(1)   61/   E8FE6 : =$14                vcAR4 set $14
(1)   62/   E8FE6 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   62/   E8FE6 : =$0                 vcAM1 set $00<<7
(1)   62/   E8FE6 : =$0                 vcAM2 set $00<<7
(1)   62/   E8FE6 : =$0                 vcAM3 set $00<<7
(1)   62/   E8FE6 : =$0                 vcAM4 set $00<<7
(1)   63/   E8FE6 : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   63/   E8FE6 : =$0                 vcD1R1 set $00
(1)   63/   E8FE6 : =$0                 vcD1R2 set $00
(1)   63/   E8FE6 : =$0                 vcD1R3 set $00
(1)   63/   E8FE6 : =$0                 vcD1R4 set $00
(1)   64/   E8FE6 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   64/   E8FE6 : =$0                 vcD2R1 set $00
(1)   64/   E8FE6 : =$0                 vcD2R2 set $00
(1)   64/   E8FE6 : =$0                 vcD2R3 set $00
(1)   64/   E8FE6 : =$0                 vcD2R4 set $00
(1)   65/   E8FE6 : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   65/   E8FE6 : =$0                 vcDL1 set $00
(1)   65/   E8FE6 : =$0                 vcDL2 set $00
(1)   65/   E8FE6 : =$0                 vcDL3 set $00
(1)   65/   E8FE6 : =$0                 vcDL4 set $00
(1)   66/   E8FE6 : (MACRO)             	smpsVcReleaseRate   $08, $02, $08, $02
(1)   66/   E8FE6 : =$8                 vcRR1 set $08
(1)   66/   E8FE6 : =$2                 vcRR2 set $02
(1)   66/   E8FE6 : =$8                 vcRR3 set $08
(1)   66/   E8FE6 : =$2                 vcRR4 set $02
(1)   67/   E8FE6 : (MACRO)             	smpsVcTotalLevel    $00, $14, $00, $35
(1)   67/   E8FE6 : =$0                 vcTL1 set $00
(1)   67/   E8FE6 : =$14                vcTL2 set $14
(1)   67/   E8FE6 : =$0                 vcTL3 set $00
(1)   67/   E8FE6 : =$35                vcTL4 set $35
(1)   67/   E8FE6 : 3C                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   67/   E8FE7 :                     ;   0     1     2     3     4     5     6     7
(1)   67/   E8FE7 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   67/   E8FE7 : =$0                 vcTLMask4 set 0
(1)   67/   E8FE7 : =$0                 vcTLMask3 set 0
(1)   67/   E8FE7 : =$0                 vcTLMask2 set 0
(1)   67/   E8FE7 : =$0                 vcTLMask1 set 0
(1)   67/   E8FE7 :                     
(1)   67/   E8FE7 :                     
(1)   67/   E8FE7 : 7232 3272                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   67/   E8FEB : 140F 140F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   67/   E8FEF : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   67/   E8FF3 : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   67/   E8FF7 : 0208 0208                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   67/   E8FFB : 3500 1400                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   68/   E8FFF :                     
(1)   69/   E8FFF :                     
  592/   E8FFF :                        Sound6D:	include "sfx-improved/ED - Error.asm"
(1)    1/   E8FFF :                     Sound6D_Error_Header:
(1)    2/   E8FFF : (MACRO)             	smpsHeaderStartSong 3, 1
(1)    2/   E8FFF :                     
(1)    2/   E8FFF : =$3                 SourceDriver set 3
(1)    2/   E8FFF :                     
(1)    2/   E8FFF : =$1                 SourceSMPS2ASM set 1
(1)    2/   E8FFF :                     
(1)    2/   E8FFF : =$E8FFF             songStart set *
(1)    2/   E8FFF :                     
(1)    2/   E8FFF :                     
(1)    3/   E8FFF : (MACRO)             	smpsHeaderVoice     Sound6D_Error_Voices
(1)    3/   E8FFF : 1290                                dc.w    z80_ptr(SOUND6D_ERROR_VOICES)
(1)    4/   E9001 : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E9001 : 01                          dc.b    $01
(1)    5/   E9002 : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E9002 : 01                          dc.b    $01
(1)    6/   E9003 :                     
(1)    7/   E9003 : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound6D_Error_FM5,	$00, $04
(1)    7/   E9003 : 8005                        dc.b    $80,CFM5
(1)    7/   E9005 :  (MACRO-2)                  CheckedChannelPointer SOUND6D_ERROR_FM5
(1)    7/   E9005 : 0990                                dc.w    z80_ptr(SOUND6D_ERROR_FM5)
(1)    7/   E9007 : 00                                  dc.b    $00
(1)    7/   E9008 : 04                          dc.b    $04
(1)    8/   E9009 :                     
(1)    9/   E9009 :                     ; FM5 Data
(1)   10/   E9009 :                     Sound6D_Error_FM5:
(1)   11/   E9009 : (MACRO)             	smpsSetvoice        $00
(1)   11/   E9009 :  (MACRO-2)                  smpsFMvoice $00
(1)   11/   E9009 : EF00                                dc.b    $EF,$00
(1)   12/   E900B : B006 8006 B018      	dc.b	nB3, $06, nRst, $06, nB3, $18
(1)   13/   E9011 : (MACRO)             	smpsStop
(1)   13/   E9011 : F2                          dc.b    $F2
(1)   14/   E9012 :                     
(1)   15/   E9012 :                     Sound6D_Error_Voices:
(1)   16/   E9012 :                     ;	Voice $00
(1)   17/   E9012 :                     ;	$38
(1)   18/   E9012 :                     ;	$00, $00, $00, $00, 	$1F, $1F, $1F, $1F, 	$00, $00, $00, $00
(1)   19/   E9012 :                     ;	$00, $00, $00, $00, 	$0F, $0F, $0F, $0F, 	$1F, $17, $0C, $00
(1)   20/   E9012 : (MACRO)             	smpsVcAlgorithm     $00
(1)   20/   E9012 : =$0                 vcAlgorithm set $00
(1)   21/   E9012 : (MACRO)             	smpsVcFeedback      $07
(1)   21/   E9012 : =$7                 vcFeedback set $07
(1)   22/   E9012 : (MACRO)             	smpsVcUnusedBits    $00
(1)   22/   E9012 : =$0                 vcUnusedBits set $00
(1)   22/   E9012 : =$0                 vcD1R1Unk set 0
(1)   22/   E9012 : =$0                 vcD1R2Unk set 0
(1)   22/   E9012 : =$0                 vcD1R3Unk set 0
(1)   22/   E9012 : =$0                 vcD1R4Unk set 0
(1)   23/   E9012 : (MACRO)             	smpsVcDetune        $00, $00, $00, $00
(1)   23/   E9012 : =$0                 vcDT1 set $00
(1)   23/   E9012 : =$0                 vcDT2 set $00
(1)   23/   E9012 : =$0                 vcDT3 set $00
(1)   23/   E9012 : =$0                 vcDT4 set $00
(1)   24/   E9012 : (MACRO)             	smpsVcCoarseFreq    $00, $00, $00, $00
(1)   24/   E9012 : =$0                 vcCF1 set $00
(1)   24/   E9012 : =$0                 vcCF2 set $00
(1)   24/   E9012 : =$0                 vcCF3 set $00
(1)   24/   E9012 : =$0                 vcCF4 set $00
(1)   25/   E9012 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   25/   E9012 : =$0                 vcRS1 set $00
(1)   25/   E9012 : =$0                 vcRS2 set $00
(1)   25/   E9012 : =$0                 vcRS3 set $00
(1)   25/   E9012 : =$0                 vcRS4 set $00
(1)   26/   E9012 : (MACRO)             	smpsVcAttackRate    $1F, $1F, $1F, $1F
(1)   26/   E9012 : =$1F                vcAR1 set $1F
(1)   26/   E9012 : =$1F                vcAR2 set $1F
(1)   26/   E9012 : =$1F                vcAR3 set $1F
(1)   26/   E9012 : =$1F                vcAR4 set $1F
(1)   27/   E9012 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   27/   E9012 : =$0                 vcAM1 set $00<<7
(1)   27/   E9012 : =$0                 vcAM2 set $00<<7
(1)   27/   E9012 : =$0                 vcAM3 set $00<<7
(1)   27/   E9012 : =$0                 vcAM4 set $00<<7
(1)   28/   E9012 : (MACRO)             	smpsVcDecayRate1    $00, $00, $00, $00
(1)   28/   E9012 : =$0                 vcD1R1 set $00
(1)   28/   E9012 : =$0                 vcD1R2 set $00
(1)   28/   E9012 : =$0                 vcD1R3 set $00
(1)   28/   E9012 : =$0                 vcD1R4 set $00
(1)   29/   E9012 : (MACRO)             	smpsVcDecayRate2    $00, $00, $00, $00
(1)   29/   E9012 : =$0                 vcD2R1 set $00
(1)   29/   E9012 : =$0                 vcD2R2 set $00
(1)   29/   E9012 : =$0                 vcD2R3 set $00
(1)   29/   E9012 : =$0                 vcD2R4 set $00
(1)   30/   E9012 : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   30/   E9012 : =$0                 vcDL1 set $00
(1)   30/   E9012 : =$0                 vcDL2 set $00
(1)   30/   E9012 : =$0                 vcDL3 set $00
(1)   30/   E9012 : =$0                 vcDL4 set $00
(1)   31/   E9012 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   31/   E9012 : =$F                 vcRR1 set $0F
(1)   31/   E9012 : =$F                 vcRR2 set $0F
(1)   31/   E9012 : =$F                 vcRR3 set $0F
(1)   31/   E9012 : =$F                 vcRR4 set $0F
(1)   32/   E9012 : (MACRO)             	smpsVcTotalLevel    $00, $0C, $17, $1F
(1)   32/   E9012 : =$0                 vcTL1 set $00
(1)   32/   E9012 : =$C                 vcTL2 set $0C
(1)   32/   E9012 : =$17                vcTL3 set $17
(1)   32/   E9012 : =$1F                vcTL4 set $1F
(1)   32/   E9012 : 38                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   32/   E9013 :                     ;   0     1     2     3     4     5     6     7
(1)   32/   E9013 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   32/   E9013 : =$0                 vcTLMask4 set 0
(1)   32/   E9013 : =$0                 vcTLMask3 set 0
(1)   32/   E9013 : =$0                 vcTLMask2 set 0
(1)   32/   E9013 : =$0                 vcTLMask1 set 0
(1)   32/   E9013 :                     
(1)   32/   E9013 :                     
(1)   32/   E9013 : 0000 0000                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   32/   E9017 : 1F1F 1F1F                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   32/   E901B : 0000 0000                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   32/   E901F : 0000 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   32/   E9023 : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   32/   E9027 : 1F17 0C00                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   33/   E902B :                     
(1)   34/   E902B :                     
  593/   E902B :                        Sound6E:	include "sfx-improved/EE - Mecha Sonic Buzz.asm"
(1)    1/   E902B :                     Sound6E_MechaSonicBuzz_Header:
(1)    2/   E902B : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E902B :                     
(1)    2/   E902B : =$3                 SourceDriver set 3
(1)    2/   E902B :                     
(1)    2/   E902B : =$0                 SourceSMPS2ASM set 0
(1)    2/   E902B :                     
(1)    2/   E902B : =$E902B             songStart set *
(1)    2/   E902B :                     
(1)    2/   E902B :                     
(1)    3/   E902B : (MACRO)             	smpsHeaderVoice     Sound6E_MechaSonicBuzz_Voices
(1)    3/   E902B : 5090                                dc.w    z80_ptr(SOUND6E_MECHASONICBUZZ_VOICES)
(1)    4/   E902D : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E902D : 01                          dc.b    $01
(1)    5/   E902E : (MACRO)             	smpsHeaderChanSFX   $02
(1)    5/   E902E : 02                          dc.b    $02
(1)    6/   E902F :                     
(1)    7/   E902F : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound6E_MechaSonicBuzz_FM5,	$00, $00
(1)    7/   E902F : 8005                        dc.b    $80,CFM5
(1)    7/   E9031 :  (MACRO-2)                  CheckedChannelPointer SOUND6E_MECHASONICBUZZ_FM5
(1)    7/   E9031 : 3B90                                dc.w    z80_ptr(SOUND6E_MECHASONICBUZZ_FM5)
(1)    7/   E9033 : 00                                  dc.b    $00
(1)    7/   E9034 : 00                          dc.b    $00
(1)    8/   E9035 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound6E_MechaSonicBuzz_PSG3,	$00, $00
(1)    8/   E9035 : 80C0                        dc.b    $80,CPSG3
(1)    8/   E9037 :  (MACRO-2)                  CheckedChannelPointer SOUND6E_MECHASONICBUZZ_PSG3
(1)    8/   E9037 : 4B90                                dc.w    z80_ptr(SOUND6E_MECHASONICBUZZ_PSG3)
(1)    8/   E9039 :  (MACRO-2)                          PSGPitchConvert $00
(1)    8/   E9039 : 00                                  dc.b    $00
(1)    8/   E903A : 00                          dc.b    $00
(1)    9/   E903B :                     
(1)   10/   E903B :                     ; FM5 Data
(1)   11/   E903B :                     Sound6E_MechaSonicBuzz_FM5:
(1)   12/   E903B : (MACRO)             	smpsSetvoice        $00
(1)   12/   E903B :  (MACRO-2)                  smpsFMvoice $00
(1)   12/   E903B : EF00                                dc.b    $EF,$00
(1)   13/   E903D : C624 E7             	dc.b	nA5, $24, smpsNoAttack
(1)   14/   E9040 :                     
(1)   15/   E9040 :                     Sound6E_MechaSonicBuzz_Loop00:
(1)   16/   E9040 : C604 E7             	dc.b	nA5, $04, smpsNoAttack
(1)   17/   E9043 : (MACRO)             	smpsAlterVol        $04
(1)   17/   E9043 : E604                        dc.b    $E6,$04
(1)   18/   E9045 : (MACRO)             	smpsLoop            $00, $08, Sound6E_MechaSonicBuzz_Loop00
(1)   18/   E9045 : F7                          dc.b    $F7
(1)   18/   E9046 : 0008                        dc.b    $00,$08
(1)   18/   E9048 : 4090                                dc.w    z80_ptr(SOUND6E_MECHASONICBUZZ_LOOP00)
(1)   19/   E904A : (MACRO)             	smpsStop
(1)   19/   E904A : F2                          dc.b    $F2
(1)   20/   E904B :                     
(1)   21/   E904B :                     ; PSG3 Data
(1)   22/   E904B :                     Sound6E_MechaSonicBuzz_PSG3:
(1)   23/   E904B : (MACRO)             	smpsPSGform         $E7
(1)   23/   E904B : F3E7                        dc.b    $F3,$E7
(1)   24/   E904D : C744                	dc.b	nBb5, $44
(1)   25/   E904F : (MACRO)             	smpsStop
(1)   25/   E904F : F2                          dc.b    $F2
(1)   26/   E9050 :                     
(1)   27/   E9050 :                     Sound6E_MechaSonicBuzz_Voices:
(1)   28/   E9050 :                     ;	Voice $00
(1)   29/   E9050 :                     ;	$33
(1)   30/   E9050 :                     ;	$00, $00, $10, $31, 	$1F, $1E, $1D, $0E, 	$00, $1D, $0C, $00
(1)   31/   E9050 :                     ;	$00, $01, $00, $00, 	$0F, $0F, $0F, $0F, 	$08, $07, $06, $80
(1)   32/   E9050 : (MACRO)             	smpsVcAlgorithm     $03
(1)   32/   E9050 : =$3                 vcAlgorithm set $03
(1)   33/   E9050 : (MACRO)             	smpsVcFeedback      $06
(1)   33/   E9050 : =$6                 vcFeedback set $06
(1)   34/   E9050 : (MACRO)             	smpsVcUnusedBits    $00
(1)   34/   E9050 : =$0                 vcUnusedBits set $00
(1)   34/   E9050 : =$0                 vcD1R1Unk set 0
(1)   34/   E9050 : =$0                 vcD1R2Unk set 0
(1)   34/   E9050 : =$0                 vcD1R3Unk set 0
(1)   34/   E9050 : =$0                 vcD1R4Unk set 0
(1)   35/   E9050 : (MACRO)             	smpsVcDetune        $03, $01, $00, $00
(1)   35/   E9050 : =$3                 vcDT1 set $03
(1)   35/   E9050 : =$1                 vcDT2 set $01
(1)   35/   E9050 : =$0                 vcDT3 set $00
(1)   35/   E9050 : =$0                 vcDT4 set $00
(1)   36/   E9050 : (MACRO)             	smpsVcCoarseFreq    $01, $00, $00, $00
(1)   36/   E9050 : =$1                 vcCF1 set $01
(1)   36/   E9050 : =$0                 vcCF2 set $00
(1)   36/   E9050 : =$0                 vcCF3 set $00
(1)   36/   E9050 : =$0                 vcCF4 set $00
(1)   37/   E9050 : (MACRO)             	smpsVcRateScale     $00, $00, $00, $00
(1)   37/   E9050 : =$0                 vcRS1 set $00
(1)   37/   E9050 : =$0                 vcRS2 set $00
(1)   37/   E9050 : =$0                 vcRS3 set $00
(1)   37/   E9050 : =$0                 vcRS4 set $00
(1)   38/   E9050 : (MACRO)             	smpsVcAttackRate    $0E, $1D, $1E, $1F
(1)   38/   E9050 : =$E                 vcAR1 set $0E
(1)   38/   E9050 : =$1D                vcAR2 set $1D
(1)   38/   E9050 : =$1E                vcAR3 set $1E
(1)   38/   E9050 : =$1F                vcAR4 set $1F
(1)   39/   E9050 : (MACRO)             	smpsVcAmpMod        $00, $00, $00, $00
(1)   39/   E9050 : =$0                 vcAM1 set $00<<5
(1)   39/   E9050 : =$0                 vcAM2 set $00<<5
(1)   39/   E9050 : =$0                 vcAM3 set $00<<5
(1)   39/   E9050 : =$0                 vcAM4 set $00<<5
(1)   40/   E9050 : (MACRO)             	smpsVcDecayRate1    $00, $0C, $1D, $00
(1)   40/   E9050 : =$0                 vcD1R1 set $00
(1)   40/   E9050 : =$C                 vcD1R2 set $0C
(1)   40/   E9050 : =$1D                vcD1R3 set $1D
(1)   40/   E9050 : =$0                 vcD1R4 set $00
(1)   41/   E9050 : (MACRO)             	smpsVcDecayRate2    $00, $00, $01, $00
(1)   41/   E9050 : =$0                 vcD2R1 set $00
(1)   41/   E9050 : =$0                 vcD2R2 set $00
(1)   41/   E9050 : =$1                 vcD2R3 set $01
(1)   41/   E9050 : =$0                 vcD2R4 set $00
(1)   42/   E9050 : (MACRO)             	smpsVcDecayLevel    $00, $00, $00, $00
(1)   42/   E9050 : =$0                 vcDL1 set $00
(1)   42/   E9050 : =$0                 vcDL2 set $00
(1)   42/   E9050 : =$0                 vcDL3 set $00
(1)   42/   E9050 : =$0                 vcDL4 set $00
(1)   43/   E9050 : (MACRO)             	smpsVcReleaseRate   $0F, $0F, $0F, $0F
(1)   43/   E9050 : =$F                 vcRR1 set $0F
(1)   43/   E9050 : =$F                 vcRR2 set $0F
(1)   43/   E9050 : =$F                 vcRR3 set $0F
(1)   43/   E9050 : =$F                 vcRR4 set $0F
(1)   44/   E9050 : (MACRO)             	smpsVcTotalLevel    $00, $06, $07, $08
(1)   44/   E9050 : =$0                 vcTL1 set $00
(1)   44/   E9050 : =$6                 vcTL2 set $06
(1)   44/   E9050 : =$7                 vcTL3 set $07
(1)   44/   E9050 : =$8                 vcTL4 set $08
(1)   44/   E9050 : 33                          dc.b    (vcUnusedBits<<6)+(vcFeedback<<3)+vcAlgorithm
(1)   44/   E9051 :                     ;   0     1     2     3     4     5     6     7
(1)   44/   E9051 :                     ;%1000,%1000,%1000,%1000,%1010,%1110,%1110,%1111
(1)   44/   E9051 : =$0                 vcTLMask4 set ((vcAlgorithm==7)<<7)
(1)   44/   E9051 : =$0                 vcTLMask3 set ((vcAlgorithm>=4)<<7)
(1)   44/   E9051 : =$0                 vcTLMask2 set ((vcAlgorithm>=5)<<7)
(1)   44/   E9051 : =$80                vcTLMask1 set $80
(1)   44/   E9051 :                     
(1)   44/   E9051 :                     
(1)   44/   E9051 : 0000 1031                           dc.b    (vcDT4<<4)+vcCF4       ,(vcDT3<<4)+vcCF3       ,(vcDT2<<4)+vcCF2       ,(vcDT1<<4)+vcCF1
(1)   44/   E9055 : 1F1E 1D0E                           dc.b    (vcRS4<<6)+vcAR4       ,(vcRS3<<6)+vcAR3       ,(vcRS2<<6)+vcAR2       ,(vcRS1<<6)+vcAR1
(1)   44/   E9059 : 001D 0C00                           dc.b    vcAM4|vcD1R4|vcD1R4Unk ,vcAM3|vcD1R3|vcD1R3Unk ,vcAM2|vcD1R2|vcD1R2Unk ,vcAM1|vcD1R1|vcD1R1Unk
(1)   44/   E905D : 0001 0000                           dc.b    vcD2R4                 ,vcD2R3                 ,vcD2R2                 ,vcD2R1
(1)   44/   E9061 : 0F0F 0F0F                           dc.b    (vcDL4<<4)+vcRR4       ,(vcDL3<<4)+vcRR3       ,(vcDL2<<4)+vcRR2       ,(vcDL1<<4)+vcRR1
(1)   44/   E9065 : 0807 0680                           dc.b    vcTL4|vcTLMask4        ,vcTL3|vcTLMask3        ,vcTL2|vcTLMask2        ,vcTL1|vcTLMask1
(1)   45/   E9069 :                     
(1)   46/   E9069 :                     
  594/   E9069 :                        Sound6F:	include "sfx-improved/EF - Large Laser.asm"
(1)    1/   E9069 :                     Sound6F_LargeLaser_Header:
(1)    2/   E9069 : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E9069 :                     
(1)    2/   E9069 : =$3                 SourceDriver set 3
(1)    2/   E9069 :                     
(1)    2/   E9069 : =$0                 SourceSMPS2ASM set 0
(1)    2/   E9069 :                     
(1)    2/   E9069 : =$E9069             songStart set *
(1)    2/   E9069 :                     
(1)    2/   E9069 :                     
(1)    3/   E9069 : (MACRO)             	smpsHeaderVoice     Sound6A_6F_Laser_Voices
(1)    3/   E9069 : 518F                                dc.w    z80_ptr(SOUND6A_6F_LASER_VOICES)
(1)    4/   E906B : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E906B : 01                          dc.b    $01
(1)    5/   E906C : (MACRO)             	smpsHeaderChanSFX   $03
(1)    5/   E906C : 03                          dc.b    $03
(1)    6/   E906D :                     
(1)    7/   E906D : (MACRO)             	smpsHeaderSFXChannel cFM5, Sound6F_LargeLaser_FM5,	$00, $0B
(1)    7/   E906D : 8005                        dc.b    $80,CFM5
(1)    7/   E906F :  (MACRO-2)                  CheckedChannelPointer SOUND6F_LARGELASER_FM5
(1)    7/   E906F : 8390                                dc.w    z80_ptr(SOUND6F_LARGELASER_FM5)
(1)    7/   E9071 : 00                                  dc.b    $00
(1)    7/   E9072 : 0B                          dc.b    $0B
(1)    8/   E9073 : (MACRO)             	smpsHeaderSFXChannel cFM4, Sound6F_LargeLaser_FM4,	$00, $12
(1)    8/   E9073 : 8004                        dc.b    $80,CFM4
(1)    8/   E9075 :  (MACRO-2)                  CheckedChannelPointer SOUND6F_LARGELASER_FM4
(1)    8/   E9075 : 7F90                                dc.w    z80_ptr(SOUND6F_LARGELASER_FM4)
(1)    8/   E9077 : 00                                  dc.b    $00
(1)    8/   E9078 : 12                          dc.b    $12
(1)    9/   E9079 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound6F_LargeLaser_PSG3,	$00, $00
(1)    9/   E9079 : 80C0                        dc.b    $80,CPSG3
(1)    9/   E907B :  (MACRO-2)                  CheckedChannelPointer SOUND6F_LARGELASER_PSG3
(1)    9/   E907B : 9A90                                dc.w    z80_ptr(SOUND6F_LARGELASER_PSG3)
(1)    9/   E907D :  (MACRO-2)                          PSGPitchConvert $00
(1)    9/   E907D : 00                                  dc.b    $00
(1)    9/   E907E : 00                          dc.b    $00
(1)   10/   E907F :                     
(1)   11/   E907F :                     ; FM4 Data
(1)   12/   E907F :                     Sound6F_LargeLaser_FM4:
(1)   13/   E907F : (MACRO)             	smpsAlterNote       $02
(1)   13/   E907F :  (MACRO-2)                  smpsDetune      $02
(1)   13/   E907F : E102                        dc.b    $E1,$02
(1)   14/   E9081 : 8002                	dc.b	nRst, $02
(1)   15/   E9083 :                     
(1)   16/   E9083 :                     ; FM5 Data
(1)   17/   E9083 :                     Sound6F_LargeLaser_FM5:
(1)   18/   E9083 : (MACRO)             	smpsSetvoice        $00
(1)   18/   E9083 :  (MACRO-2)                  smpsFMvoice $00
(1)   18/   E9083 : EF00                                dc.b    $EF,$00
(1)   19/   E9085 : (MACRO)             	smpsAlterVol        $0C
(1)   19/   E9085 : E60C                        dc.b    $E6,$0C
(1)   20/   E9087 : DF06 E7             	dc.b	nBb7, $06, smpsNoAttack
(1)   21/   E908A : (MACRO)             	smpsAlterVol        $F4
(1)   21/   E908A : E6F4                        dc.b    $E6,$F4
(1)   22/   E908C : 06E7                	dc.b	$06, smpsNoAttack
(1)   23/   E908E : (MACRO)             	smpsAlterVol        $F4
(1)   23/   E908E : E6F4                        dc.b    $E6,$F4
(1)   24/   E9090 : 12E7                	dc.b	$12, smpsNoAttack
(1)   25/   E9092 : (MACRO)             	smpsAlterVol        $0C
(1)   25/   E9092 : E60C                        dc.b    $E6,$0C
(1)   26/   E9094 : 06E7                	dc.b	$06, smpsNoAttack
(1)   27/   E9096 : (MACRO)             	smpsAlterVol        $0C
(1)   27/   E9096 : E60C                        dc.b    $E6,$0C
(1)   28/   E9098 : 06                  	dc.b	$06
(1)   29/   E9099 : (MACRO)             	smpsStop
(1)   29/   E9099 : F2                          dc.b    $F2
(1)   30/   E909A :                     
(1)   31/   E909A :                     ; PSG3 Data
(1)   32/   E909A :                     Sound6F_LargeLaser_PSG3:
(1)   33/   E909A : (MACRO)             	smpsPSGform         $E7
(1)   33/   E909A : F3E7                        dc.b    $F3,$E7
(1)   34/   E909C : C704 C0BA B4AE      	dc.b	nMaxPSG, $04, nEb5, nA4, nEb4, nA3
(1)   35/   E90A2 : (MACRO)             	smpsPSGAlterVol     $01
(1)   35/   E90A2 : EC01                        dc.b    $EC,$01
(1)   36/   E90A4 : AE                  	dc.b	nA3
(1)   37/   E90A5 : (MACRO)             	smpsPSGAlterVol     $01
(1)   37/   E90A5 : EC01                        dc.b    $EC,$01
(1)   38/   E90A7 : AE                  	dc.b	nA3
(1)   39/   E90A8 : (MACRO)             	smpsPSGAlterVol     $01
(1)   39/   E90A8 : EC01                        dc.b    $EC,$01
(1)   40/   E90AA : AE                  	dc.b	nA3
(1)   41/   E90AB : (MACRO)             	smpsStop
(1)   41/   E90AB : F2                          dc.b    $F2
(1)   42/   E90AC :                     
  595/   E90AC :                        Sound70:	include "sfx-improved/F0 - Oil Slide.asm"    
(1)    1/   E90AC :                     Sound70_OilSlide_Header:
(1)    2/   E90AC : (MACRO)             	smpsHeaderStartSong 3
(1)    2/   E90AC :                     
(1)    2/   E90AC : =$3                 SourceDriver set 3
(1)    2/   E90AC :                     
(1)    2/   E90AC : =$0                 SourceSMPS2ASM set 0
(1)    2/   E90AC :                     
(1)    2/   E90AC : =$E90AC             songStart set *
(1)    2/   E90AC :                     
(1)    2/   E90AC :                     
(1)    3/   E90AC : (MACRO)             	smpsHeaderVoiceNull
(1)    3/   E90AC : 0000                        dc.w    $0000
(1)    4/   E90AE : (MACRO)             	smpsHeaderTempoSFX  $01
(1)    4/   E90AE : 01                          dc.b    $01
(1)    5/   E90AF : (MACRO)             	smpsHeaderChanSFX   $01
(1)    5/   E90AF : 01                          dc.b    $01
(1)    6/   E90B0 :                     
(1)    7/   E90B0 : (MACRO)             	smpsHeaderSFXChannel cPSG3, Sound70_OilSlide_PSG3,	$00, $00
(1)    7/   E90B0 : 80C0                        dc.b    $80,CPSG3
(1)    7/   E90B2 :  (MACRO-2)                  CheckedChannelPointer SOUND70_OILSLIDE_PSG3
(1)    7/   E90B2 : B690                                dc.w    z80_ptr(SOUND70_OILSLIDE_PSG3)
(1)    7/   E90B4 :  (MACRO-2)                          PSGPitchConvert $00
(1)    7/   E90B4 : 00                                  dc.b    $00
(1)    7/   E90B5 : 00                          dc.b    $00
(1)    8/   E90B6 :                     
(1)    9/   E90B6 :                     ; PSG3 Data
(1)   10/   E90B6 :                     Sound70_OilSlide_PSG3:
(1)   11/   E90B6 : (MACRO)             	smpsPSGform         $E7
(1)   11/   E90B6 : F3E7                        dc.b    $F3,$E7
(1)   12/   E90B8 : C718                	dc.b	nMaxPSG, $18
(1)   13/   E90BA :                     
(1)   14/   E90BA :                     Sound70_OilSlide_Loop00:
(1)   15/   E90BA : E703                	dc.b	smpsNoAttack, $03
(1)   16/   E90BC : (MACRO)             	smpsPSGAlterVol     $01
(1)   16/   E90BC : EC01                        dc.b    $EC,$01
(1)   17/   E90BE : (MACRO)             	smpsLoop            $00, $08, Sound70_OilSlide_Loop00
(1)   17/   E90BE : F7                          dc.b    $F7
(1)   17/   E90BF : 0008                        dc.b    $00,$08
(1)   17/   E90C1 : BA90                                dc.w    z80_ptr(SOUND70_OILSLIDE_LOOP00)
(1)   18/   E90C3 : (MACRO)             	smpsStop
(1)   18/   E90C3 : F2                          dc.b    $F2
(1)   19/   E90C4 :                     
  596/   E90C4 :                        
  597/   E90C4 :                        ;-------------------------------------------------------------------------------
  598/   E90C4 : (MACRO)                				align	$F0000
  598/   E90C4 :  (MACRO-2)                     cnop 0,$F0000
  598/   E90C4 :   (MACRO-3)                            org (*-1+($F0000)-((*-1+(-(0)))#($F0000)))
  598/   F0000 :                                                !org (*-1+($F0000)-((*-1+(-(0)))#($F0000)))
  599/   F0000 :                        
  600/   F0000 :                        DAC_Table:                                                     ; Offset_0x0F0000
  601/   F0000 : 3680                                   dc.w    (((DAC_81_Ptr>>$08)|(DAC_81_Ptr<<$08))&$FFFF)    ; $8036
  602/   F0002 : 3B80                                   dc.w    (((DAC_82_Ptr>>$08)|(DAC_82_Ptr<<$08))&$FFFF)    ; $803B
  603/   F0004 : 4080                                   dc.w    (((DAC_83_Ptr>>$08)|(DAC_83_Ptr<<$08))&$FFFF)    ; $8040
  604/   F0006 : 4580                                   dc.w    (((DAC_84_Ptr>>$08)|(DAC_84_Ptr<<$08))&$FFFF)    ; $8045
  605/   F0008 : 4A80                                   dc.w    (((DAC_85_Ptr>>$08)|(DAC_85_Ptr<<$08))&$FFFF)    ; $804A
  606/   F000A : 4F80                                   dc.w    (((DAC_86_Ptr>>$08)|(DAC_86_Ptr<<$08))&$FFFF)    ; $804F
  607/   F000C : 5480                                   dc.w    (((DAC_87_Ptr>>$08)|(DAC_87_Ptr<<$08))&$FFFF)    ; $8054
  608/   F000E : 5980                                   dc.w    (((DAC_88_Ptr>>$08)|(DAC_88_Ptr<<$08))&$FFFF)    ; $8059
  609/   F0010 : 5E80                                   dc.w    (((DAC_89_Ptr>>$08)|(DAC_89_Ptr<<$08))&$FFFF)    ; $805E
  610/   F0012 : 6380                                   dc.w    (((DAC_8A_Ptr>>$08)|(DAC_8A_Ptr<<$08))&$FFFF)    ; $8063
  611/   F0014 : 6880                                   dc.w    (((DAC_8B_Ptr>>$08)|(DAC_8B_Ptr<<$08))&$FFFF)    ; $8068
  612/   F0016 : 6D80                                   dc.w    (((DAC_8C_Ptr>>$08)|(DAC_8C_Ptr<<$08))&$FFFF)    ; $806D
  613/   F0018 : 7280                                   dc.w    (((DAC_8D_Ptr>>$08)|(DAC_8D_Ptr<<$08))&$FFFF)    ; $8072
  614/   F001A : 7780                                   dc.w    (((DAC_8E_Ptr>>$08)|(DAC_8E_Ptr<<$08))&$FFFF)    ; $8077
  615/   F001C : 7C80                                   dc.w    (((DAC_8F_Ptr>>$08)|(DAC_8F_Ptr<<$08))&$FFFF)    ; $807C
  616/   F001E : 8180                                   dc.w    (((DAC_90_Ptr>>$08)|(DAC_90_Ptr<<$08))&$FFFF)    ; $8081
  617/   F0020 : 8680                                   dc.w    (((DAC_91_Ptr>>$08)|(DAC_91_Ptr<<$08))&$FFFF)    ; $8086
  618/   F0022 : 8B80                                   dc.w    (((DAC_92_Ptr>>$08)|(DAC_92_Ptr<<$08))&$FFFF)    ; $808B
  619/   F0024 : 9080                                   dc.w    (((DAC_93_Ptr>>$08)|(DAC_93_Ptr<<$08))&$FFFF)    ; $8090
  620/   F0026 : 9580                                   dc.w    (((DAC_94_Ptr>>$08)|(DAC_94_Ptr<<$08))&$FFFF)    ; $8095
  621/   F0028 : 9A80                                   dc.w    (((DAC_95_Ptr>>$08)|(DAC_95_Ptr<<$08))&$FFFF)    ; $809A
  622/   F002A : 9F80                                   dc.w    (((DAC_96_Ptr>>$08)|(DAC_96_Ptr<<$08))&$FFFF)    ; $809F
  623/   F002C : A480                                   dc.w    (((DAC_97_Ptr>>$08)|(DAC_97_Ptr<<$08))&$FFFF)    ; $80A4
  624/   F002E : A980                                   dc.w    (((DAC_98_Ptr>>$08)|(DAC_98_Ptr<<$08))&$FFFF)    ; $80A9
  625/   F0030 : AE80                                   dc.w    (((DAC_99_Ptr>>$08)|(DAC_99_Ptr<<$08))&$FFFF)    ; $80AE
  626/   F0032 : B380                                   dc.w    (((DAC_9A_Ptr>>$08)|(DAC_9A_Ptr<<$08))&$FFFF)    ; $80B3
  627/   F0034 : B880                                   dc.w    (((DAC_9B_Ptr>>$08)|(DAC_9B_Ptr<<$08))&$FFFF)    ; $80B8                    
  628/   F0036 :                                                 
  629/   F0036 :                        DAC_81_Setup:                                                  ; Offset_0x0F0036
  630/   F0036 : 04                                     dc.b    $04
  631/   F0037 : 9007                                   dc.w    (((DAC_81_Size>>$08)|(DAC_81_Size<<$08))&$FFFF)         ; $0790
  632/   F0039 : BD83                                   dc.w    (((DAC_81_Data_Ptr>>$08)|(DAC_81_Data_Ptr<<$08))&$FFFF) ; $83BD                
  633/   F003B :                        DAC_82_Setup:                                                  ; Offset_0x0F003B
  634/   F003B : 0E                                     dc.b    $0E
  635/   F003C : C004                                   dc.w    (((DAC_82_To_85_Size>>$08)|(DAC_82_To_85_Size<<$08))&$FFFF)         ; $04C0
  636/   F003E : 4D8B                                   dc.w    (((DAC_82_To_85_Data_Ptr>>$08)|(DAC_82_To_85_Data_Ptr<<$08))&$FFFF) ; $8B4D
  637/   F0040 :                        DAC_83_Setup:                                                  ; Offset_0x0F0040
  638/   F0040 : 14                                     dc.b    $14
  639/   F0041 : C004                                   dc.w    (((DAC_82_To_85_Size>>$08)|(DAC_82_To_85_Size<<$08))&$FFFF)         ; $04C0
  640/   F0043 : 4D8B                                   dc.w    (((DAC_82_To_85_Data_Ptr>>$08)|(DAC_82_To_85_Data_Ptr<<$08))&$FFFF) ; $8B4D
  641/   F0045 :                        DAC_84_Setup:                                                  ; Offset_0x0F0045
  642/   F0045 : 1A                                     dc.b    $1A
  643/   F0046 : C004                                   dc.w    (((DAC_82_To_85_Size>>$08)|(DAC_82_To_85_Size<<$08))&$FFFF)         ; $04C0
  644/   F0048 : 4D8B                                   dc.w    (((DAC_82_To_85_Data_Ptr>>$08)|(DAC_82_To_85_Data_Ptr<<$08))&$FFFF) ; $8B4D
  645/   F004A :                        DAC_85_Setup:                                                  ; Offset_0x0F004A
  646/   F004A : 20                                     dc.b    $20
  647/   F004B : C004                                   dc.w    (((DAC_82_To_85_Size>>$08)|(DAC_82_To_85_Size<<$08))&$FFFF)         ; $04C0
  648/   F004D : 4D8B                                   dc.w    (((DAC_82_To_85_Data_Ptr>>$08)|(DAC_82_To_85_Data_Ptr<<$08))&$FFFF) ; $8B4D
  649/   F004F :                        DAC_86_Setup:                                                  ; Offset_0x0F004F
  650/   F004F : 04                                     dc.b    $04
  651/   F0050 : 0003                                   dc.w    (((DAC_86_Size>>$08)|(DAC_86_Size<<$08))&$FFFF)         ; $0300
  652/   F0052 : BD80                                   dc.w    (((DAC_86_Data_Ptr>>$08)|(DAC_86_Data_Ptr<<$08))&$FFFF) ; $80BD 
  653/   F0054 :                        DAC_87_Setup:                                                  ; Offset_0x0F0054
  654/   F0054 : 04                                     dc.b    $04
  655/   F0055 : 4007                                   dc.w    (((DAC_87_Size>>$08)|(DAC_87_Size<<$08))&$FFFF)         ; $0740 
  656/   F0057 : D8B8                                   dc.w    (((DAC_87_Data_Ptr>>$08)|(DAC_87_Data_Ptr<<$08))&$FFFF) ; $B8D8
  657/   F0059 :                        DAC_88_Setup:                                                  ; Offset_0x0F0059
  658/   F0059 : 06                                     dc.b    $06
  659/   F005A : 5012                                   dc.w    (((DAC_88_Size>>$08)|(DAC_88_Size<<$08))&$FFFF)         ; $1250
  660/   F005C : ED9F                                   dc.w    (((DAC_88_Data_Ptr>>$08)|(DAC_88_Data_Ptr<<$08))&$FFFF) ; $9FED
  661/   F005E :                        DAC_89_Setup:                                                  ; Offset_0x0F005E
  662/   F005E : 0A                                     dc.b    $0A
  663/   F005F : 200A                                   dc.w    (((DAC_89_Size>>$08)|(DAC_89_Size<<$08))&$FFFF)         ; $0A20 
  664/   F0061 : 28C5                                   dc.w    (((DAC_89_Data_Ptr>>$08)|(DAC_89_Data_Ptr<<$08))&$FFFF) ; $C528
  665/   F0063 :                        DAC_8A_Setup:                                                  ; Offset_0x0F0063
  666/   F0063 : 14                                     dc.b    $14
  667/   F0064 : 6001                                   dc.w    (((DAC_8A_To_8B_Size>>$08)|(DAC_8A_To_8B_Size<<$08))&$FFFF)         ; $0160
  668/   F0066 : 3DB2                                   dc.w    (((DAC_8A_To_8B_Data_Ptr>>$08)|(DAC_8A_To_8B_Data_Ptr<<$08))&$FFFF) ; $B23D
  669/   F0068 :                        DAC_8B_Setup:                                                  ; Offset_0x0F0068
  670/   F0068 : 1B                                     dc.b    $1B
  671/   F0069 : 6001                                   dc.w    (((DAC_8A_To_8B_Size>>$08)|(DAC_8A_To_8B_Size<<$08))&$FFFF)         ; $0160
  672/   F006B : 3DB2                                   dc.w    (((DAC_8A_To_8B_Data_Ptr>>$08)|(DAC_8A_To_8B_Data_Ptr<<$08))&$FFFF) ; $B23D
  673/   F006D :                        DAC_8C_Setup:                                                  ; Offset_0x0F006D
  674/   F006D : 08                                     dc.b    $08
  675/   F006E : 6B00                                   dc.w    (((DAC_8C_Size>>$08)|(DAC_8C_Size<<$08))&$FFFF)         ; $006B
  676/   F0070 : 9DB3                                   dc.w    (((DAC_8C_Data_Ptr>>$08)|(DAC_8C_Data_Ptr<<$08))&$FFFF) ; $B39D
  677/   F0072 :                        DAC_8D_Setup:                                                  ; Offset_0x0F0072
  678/   F0072 : 0B                                     dc.b    $0B
  679/   F0073 : D004                                   dc.w    (((DAC_8D_To_8E_Size>>$08)|(DAC_8D_To_8E_Size<<$08))&$FFFF)         ; $04D0
  680/   F0075 : 08B4                                   dc.w    (((DAC_8D_To_8E_Data_Ptr>>$08)|(DAC_8D_To_8E_Data_Ptr<<$08))&$FFFF) ; $B408
  681/   F0077 :                        DAC_8E_Setup:                                                  ; Offset_0x0F0077
  682/   F0077 : 11                                     dc.b    $11
  683/   F0078 : D004                                   dc.w    (((DAC_8D_To_8E_Size>>$08)|(DAC_8D_To_8E_Size<<$08))&$FFFF)         ; $04D0
  684/   F007A : 08B4                                   dc.w    (((DAC_8D_To_8E_Data_Ptr>>$08)|(DAC_8D_To_8E_Data_Ptr<<$08))&$FFFF) ; $B408
  685/   F007C :                        DAC_8F_Setup:                                                  ; Offset_0x0F007C
  686/   F007C : 08                                     dc.b    $08
  687/   F007D : 1005                                   dc.w    (((DAC_8F_Size>>$08)|(DAC_8F_Size<<$08))&$FFFF)         ; $0510 
  688/   F007F : 18C0                                   dc.w    (((DAC_8F_Data_Ptr>>$08)|(DAC_8F_Data_Ptr<<$08))&$FFFF) ; $C018
  689/   F0081 :                        DAC_90_Setup:                                                  ; Offset_0x0F0081
  690/   F0081 : 03                                     dc.b    $03
  691/   F0082 : 5006                                   dc.w    (((DAC_90_To_93_Size>>$08)|(DAC_90_To_93_Size<<$08))&$FFFF)         ; $0650
  692/   F0084 : 9D99                                   dc.w    (((DAC_90_To_93_Data_Ptr>>$08)|(DAC_90_To_93_Data_Ptr<<$08))&$FFFF) ; $999D
  693/   F0086 :                        DAC_91_Setup:                                                  ; Offset_0x0F0086
  694/   F0086 : 07                                     dc.b    $07
  695/   F0087 : 5006                                   dc.w    (((DAC_90_To_93_Size>>$08)|(DAC_90_To_93_Size<<$08))&$FFFF)         ; $0650
  696/   F0089 : 9D99                                   dc.w    (((DAC_90_To_93_Data_Ptr>>$08)|(DAC_90_To_93_Data_Ptr<<$08))&$FFFF) ; $999D
  697/   F008B :                        DAC_92_Setup:                                                  ; Offset_0x0F008B
  698/   F008B : 0A                                     dc.b    $0A
  699/   F008C : 5006                                   dc.w    (((DAC_90_To_93_Size>>$08)|(DAC_90_To_93_Size<<$08))&$FFFF)         ; $0650
  700/   F008E : 9D99                                   dc.w    (((DAC_90_To_93_Data_Ptr>>$08)|(DAC_90_To_93_Data_Ptr<<$08))&$FFFF) ; $999D
  701/   F0090 :                        DAC_93_Setup:                                                  ; Offset_0x0F0090
  702/   F0090 : 0E                                     dc.b    $0E
  703/   F0091 : 5006                                   dc.w    (((DAC_90_To_93_Size>>$08)|(DAC_90_To_93_Size<<$08))&$FFFF)         ; $0650
  704/   F0093 : 9D99                                   dc.w    (((DAC_90_To_93_Data_Ptr>>$08)|(DAC_90_To_93_Data_Ptr<<$08))&$FFFF) ; $999D
  705/   F0095 :                        DAC_94_Setup:                                                  ; Offset_0x0F0095
  706/   F0095 : 06                                     dc.b    $06
  707/   F0096 : 9009                                   dc.w    (((DAC_94_To_97_Size>>$08)|(DAC_94_To_97_Size<<$08))&$FFFF)         ; $0990
  708/   F0098 : 0D90                                   dc.w    (((DAC_94_To_97_Data_Ptr>>$08)|(DAC_94_To_97_Data_Ptr<<$08))&$FFFF) ; $900D
  709/   F009A :                        DAC_95_Setup:                                                  ; Offset_0x0F009A
  710/   F009A : 0A                                     dc.b    $0A
  711/   F009B : 9009                                   dc.w    (((DAC_94_To_97_Size>>$08)|(DAC_94_To_97_Size<<$08))&$FFFF)         ; $0990
  712/   F009D : 0D90                                   dc.w    (((DAC_94_To_97_Data_Ptr>>$08)|(DAC_94_To_97_Data_Ptr<<$08))&$FFFF) ; $900D
  713/   F009F :                        DAC_96_Setup:                                                  ; Offset_0x0F009F
  714/   F009F : 0D                                     dc.b    $0D
  715/   F00A0 : 9009                                   dc.w    (((DAC_94_To_97_Size>>$08)|(DAC_94_To_97_Size<<$08))&$FFFF)         ; $0990
  716/   F00A2 : 0D90                                   dc.w    (((DAC_94_To_97_Data_Ptr>>$08)|(DAC_94_To_97_Data_Ptr<<$08))&$FFFF) ; $900D
  717/   F00A4 :                        DAC_97_Setup:                                                  ; Offset_0x0F00A4
  718/   F00A4 : 12                                     dc.b    $12
  719/   F00A5 : 9009                                   dc.w    (((DAC_94_To_97_Size>>$08)|(DAC_94_To_97_Size<<$08))&$FFFF)         ; $0990
  720/   F00A7 : 0D90                                   dc.w    (((DAC_94_To_97_Data_Ptr>>$08)|(DAC_94_To_97_Data_Ptr<<$08))&$FFFF) ; $900D
  721/   F00A9 :                        DAC_98_Setup:                                                  ; Offset_0x0F00A9
  722/   F00A9 : 0B                                     dc.b    $0B
  723/   F00AA : 1F0D                                   dc.w    (((DAC_98_To_9A_Size>>$08)|(DAC_98_To_9A_Size<<$08))&$FFFF)         ; $0D1F
  724/   F00AC : 48CF                                   dc.w    (((DAC_98_To_9A_Data_Ptr>>$08)|(DAC_98_To_9A_Data_Ptr<<$08))&$FFFF) ; $CF48
  725/   F00AE :                        DAC_99_Setup:                                                  ; Offset_0x0F00AE
  726/   F00AE : 13                                     dc.b    $13
  727/   F00AF : 1F0D                                   dc.w    (((DAC_98_To_9A_Size>>$08)|(DAC_98_To_9A_Size<<$08))&$FFFF)         ; $0D1F
  728/   F00B1 : 48CF                                   dc.w    (((DAC_98_To_9A_Data_Ptr>>$08)|(DAC_98_To_9A_Data_Ptr<<$08))&$FFFF) ; $CF48
  729/   F00B3 :                        DAC_9A_Setup:                                                  ; Offset_0x0F00B3
  730/   F00B3 : 16                                     dc.b    $16
  731/   F00B4 : 1F0D                                   dc.w    (((DAC_98_To_9A_Size>>$08)|(DAC_98_To_9A_Size<<$08))&$FFFF)         ; $0D1F
  732/   F00B6 : 48CF                                   dc.w    (((DAC_98_To_9A_Data_Ptr>>$08)|(DAC_98_To_9A_Data_Ptr<<$08))&$FFFF) ; $CF48
  733/   F00B8 :                        DAC_9B_Setup:                                                  ; Offset_0x0F00B8
  734/   F00B8 : 12                                     dc.b    $12
  735/   F00B9 : 9D16                                   dc.w    (((DAC_9B_Size>>$08)|(DAC_9B_Size<<$08))&$FFFF)         ; $169D  
  736/   F00BB : 67DC                                   dc.w    (((DAC_9B_Data_Ptr>>$08)|(DAC_9B_Data_Ptr<<$08))&$FFFF) ; $DC67
  737/   F00BD :                                        
  738/   F00BD :                        ;-------------------------------------------------------------------------------
  739/   F00BD :                        DAC_86_Data:                                                   ; Offset_0x0F00BD
  740/   F00BD :                                        binclude  "sounds\dacs\dac_86.bin"
  741/   F03BD :                        DAC_86_Data_End:                  
  742/   F03BD :                        ;-------------------------------------------------------------------------------                          
  743/   F03BD :                        DAC_81_Data:                                                   ; Offset_0x0F03BD
  744/   F03BD :                                        binclude  "sounds\dacs\dac_81.bin" 
  745/   F0B4D :                        DAC_81_Data_End:  
  746/   F0B4D :                        ;-------------------------------------------------------------------------------
  747/   F0B4D :                        DAC_82_To_85_Data:                                             ; Offset_0x0F0B4D
  748/   F0B4D :                                        binclude  "sounds\dacs\dac82-85.bin" 
  749/   F100D :                        DAC_82_To_85_Data_End:  
  750/   F100D :                        ;-------------------------------------------------------------------------------
  751/   F100D :                        DAC_94_To_97_Data:                                             ; Offset_0x0F100D
  752/   F100D :                                        binclude  "sounds\dacs\dac94-97.bin" 
  753/   F199D :                        DAC_94_To_97_Data_End: 
  754/   F199D :                        ;-------------------------------------------------------------------------------
  755/   F199D :                        DAC_90_To_93_Data:                                             ; Offset_0x0F199D
  756/   F199D :                                        binclude  "sounds\dacs\dac90-93.bin" 
  757/   F1FED :                        DAC_90_To_93_Data_End:       
  758/   F1FED :                        ;-------------------------------------------------------------------------------
  759/   F1FED :                        DAC_88_Data:                                                   ; Offset_0x0F1FED
  760/   F1FED :                                        binclude  "sounds\dacs\dac_88.bin" 
  761/   F323D :                        DAC_88_Data_End:  
  762/   F323D :                        ;-------------------------------------------------------------------------------
  763/   F323D :                        DAC_8A_To_8B_Data:                                             ; Offset_0x0F323D
  764/   F323D :                                        binclude  "sounds\dacs\dac8A-8B.bin" 
  765/   F339D :                        DAC_8A_To_8B_Data_End:     
  766/   F339D :                        ;-------------------------------------------------------------------------------
  767/   F339D :                        DAC_8C_Data:                                                   ; Offset_0x0F339D
  768/   F339D :                                        binclude  "sounds\dacs\dac_8C.bin" 
  769/   F3408 :                        DAC_8C_Data_End:   
  770/   F3408 :                        ;-------------------------------------------------------------------------------
  771/   F3408 :                        DAC_8D_To_8E_Data:                                             ; Offset_0x0F3408
  772/   F3408 :                                        binclude  "sounds\dacs\dac8D-8E.bin" 
  773/   F38D8 :                        DAC_8D_To_8E_Data_End:                    
  774/   F38D8 :                        ;-------------------------------------------------------------------------------
  775/   F38D8 :                        DAC_87_Data:                                                   ; Offset_0x0F38D8
  776/   F38D8 :                                        binclude  "sounds\dacs\dac_87.bin" 
  777/   F4018 :                        DAC_87_Data_End:   
  778/   F4018 :                        ;-------------------------------------------------------------------------------
  779/   F4018 :                        DAC_8F_Data:                                                   ; Offset_0x0F4018
  780/   F4018 :                                        binclude  "sounds\dacs\dac_8F.bin" 
  781/   F4528 :                        DAC_8F_Data_End:
  782/   F4528 :                        ;-------------------------------------------------------------------------------
  783/   F4528 :                        DAC_89_Data:                                                   ; Offset_0x0F4528
  784/   F4528 :                                        binclude  "sounds\dacs\dac_89.bin" 
  785/   F4F48 :                        DAC_89_Data_End:
  786/   F4F48 :                        ;-------------------------------------------------------------------------------
  787/   F4F48 :                        DAC_98_To_9A_Data:                                             ; Offset_0x0F4F48
  788/   F4F48 :                                        binclude  "sounds\dacs\dac98-9A.bin" 
  789/   F5C67 :                        DAC_98_To_9A_Data_End:  
  790/   F5C67 :                        ;-------------------------------------------------------------------------------
  791/   F5C67 :                        DAC_9B_Data:                                                   ; Offset_0x0F5C67
  792/   F5C67 :                                        binclude  "sounds\dacs\dac_9B.bin" 
  793/   F7304 :                        DAC_9B_Data_End:
  794/   F7304 :                        ;-------------------------------------------------------------------------------
  795/   F7304 :                        Offset_0x0F7304:
  796/   F7304 : (MACRO)                                align	$8000
  796/   F7304 :  (MACRO-2)                     cnop 0,$8000
  796/   F7304 :   (MACRO-3)                            org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  796/   F8000 :                                                !org (*-1+($8000)-((*-1+(-(0)))#($8000)))
  797/   F8000 :                        ;-------------------------------------------------------------------------------                   
  798/   F8000 :                        SEGA_PCM_Data:                                                 ; Offset_0x0F8000
  799/   F8000 :                                        binclude  "sounds\sega.pcm"
 AS V1.42 Beta [Bld 251] - Source File Music.asm - Page 2 - 2/19/2024 10:3:17


  Symbol Table (* = unused):
  --------------------------

 ANGEL_ISLAND_1_SND_DATA :    B0000 C |  ANGEL_ISLAND_2_SND_DATA :    B2210 C |
*ARCHITECTURE :                                        "i386-unknown-win32" - |
*ASM_CODE_3 :                 CF962 C |  AZURE_LAKE_SND_DATA :        CBE82 C |
 BALLOON_PARK_SND_DATA :      CC988 C |  BOSS_SND_DATA :              C8742 C |
 CARNIVAL_NIGHT_1_SND_DATA :  B8000 C |  CARNIVAL_NIGHT_2_SND_DATA :  B9BBB C |
*CASESENSITIVE :                  0 - |  CFM3 :                           2 - |
 CFM4 :                           4 - |  CFM5 :                           5 - |
 CFM6 :                           6 - |  CHROME_GADGET_SND_DATA :     D0000 C |
 CNOISE :                        E0 - |  COMPETITION_MENU_SND_DATA :  D4CB8 C |
*CONSTPI :        3.141592653589793 - |  CONTINUE_SND_DATA :          D3A99 C |
 CPSG1 :                         80 - |  CPSG2 :                         A0 - |
 CPSG3 :                         C0 - |  CREDITS_SND_DATA :           D2DCC C |
 DAC_81_DATA :                F03BD C |  DAC_81_DATA_END :            F0B4D C |
 DAC_81_DATA_PTR :             83BD - |  DAC_81_PTR :                  8036 - |
 DAC_81_SETUP :               F0036 C |  DAC_81_SIZE :                  790 - |
 DAC_82_PTR :                  803B - |  DAC_82_SETUP :               F003B C |
 DAC_82_TO_85_DATA :          F0B4D C |  DAC_82_TO_85_DATA_END :      F100D C |
 DAC_82_TO_85_DATA_PTR :       8B4D - |  DAC_82_TO_85_SIZE :            4C0 - |
 DAC_83_PTR :                  8040 - |  DAC_83_SETUP :               F0040 C |
 DAC_84_PTR :                  8045 - |  DAC_84_SETUP :               F0045 C |
 DAC_85_PTR :                  804A - |  DAC_85_SETUP :               F004A C |
 DAC_86_DATA :                F00BD C |  DAC_86_DATA_END :            F03BD C |
 DAC_86_DATA_PTR :             80BD - |  DAC_86_PTR :                  804F - |
 DAC_86_SETUP :               F004F C |  DAC_86_SIZE :                  300 - |
 DAC_87_DATA :                F38D8 C |  DAC_87_DATA_END :            F4018 C |
 DAC_87_DATA_PTR :             B8D8 - |  DAC_87_PTR :                  8054 - |
 DAC_87_SETUP :               F0054 C |  DAC_87_SIZE :                  740 - |
 DAC_88_DATA :                F1FED C |  DAC_88_DATA_END :            F323D C |
 DAC_88_DATA_PTR :             9FED - |  DAC_88_PTR :                  8059 - |
 DAC_88_SETUP :               F0059 C |  DAC_88_SIZE :                 1250 - |
 DAC_89_DATA :                F4528 C |  DAC_89_DATA_END :            F4F48 C |
 DAC_89_DATA_PTR :             C528 - |  DAC_89_PTR :                  805E - |
 DAC_89_SETUP :               F005E C |  DAC_89_SIZE :                  A20 - |
 DAC_8A_PTR :                  8063 - |  DAC_8A_SETUP :               F0063 C |
 DAC_8A_TO_8B_DATA :          F323D C |  DAC_8A_TO_8B_DATA_END :      F339D C |
 DAC_8A_TO_8B_DATA_PTR :       B23D - |  DAC_8A_TO_8B_SIZE :            160 - |
 DAC_8B_PTR :                  8068 - |  DAC_8B_SETUP :               F0068 C |
 DAC_8C_DATA :                F339D C |  DAC_8C_DATA_END :            F3408 C |
 DAC_8C_DATA_PTR :             B39D - |  DAC_8C_PTR :                  806D - |
 DAC_8C_SETUP :               F006D C |  DAC_8C_SIZE :                   6B - |
 DAC_8D_PTR :                  8072 - |  DAC_8D_SETUP :               F0072 C |
 DAC_8D_TO_8E_DATA :          F3408 C |  DAC_8D_TO_8E_DATA_END :      F38D8 C |
 DAC_8D_TO_8E_DATA_PTR :       B408 - |  DAC_8D_TO_8E_SIZE :            4D0 - |
 DAC_8E_PTR :                  8077 - |  DAC_8E_SETUP :               F0077 C |
 DAC_8F_DATA :                F4018 C |  DAC_8F_DATA_END :            F4528 C |
 DAC_8F_DATA_PTR :             C018 - |  DAC_8F_PTR :                  807C - |
 DAC_8F_SETUP :               F007C C |  DAC_8F_SIZE :                  510 - |
 DAC_90_PTR :                  8081 - |  DAC_90_SETUP :               F0081 C |
 DAC_90_TO_93_DATA :          F199D C |  DAC_90_TO_93_DATA_END :      F1FED C |
 DAC_90_TO_93_DATA_PTR :       999D - |  DAC_90_TO_93_SIZE :            650 - |
 DAC_91_PTR :                  8086 - |  DAC_91_SETUP :               F0086 C |
 DAC_92_PTR :                  808B - |  DAC_92_SETUP :               F008B C |
 DAC_93_PTR :                  8090 - |  DAC_93_SETUP :               F0090 C |
 DAC_94_PTR :                  8095 - |  DAC_94_SETUP :               F0095 C |
 DAC_94_TO_97_DATA :          F100D C |  DAC_94_TO_97_DATA_END :      F199D C |
 DAC_94_TO_97_DATA_PTR :       900D - |  DAC_94_TO_97_SIZE :            990 - |
 DAC_95_PTR :                  809A - |  DAC_95_SETUP :               F009A C |
 DAC_96_PTR :                  809F - |  DAC_96_SETUP :               F009F C |
 DAC_97_PTR :                  80A4 - |  DAC_97_SETUP :               F00A4 C |
 DAC_98_PTR :                  80A9 - |  DAC_98_SETUP :               F00A9 C |
 DAC_98_TO_9A_DATA :          F4F48 C |  DAC_98_TO_9A_DATA_END :      F5C67 C |
 DAC_98_TO_9A_DATA_PTR :       CF48 - |  DAC_98_TO_9A_SIZE :            D1F - |
 DAC_99_PTR :                  80AE - |  DAC_99_SETUP :               F00AE C |
 DAC_9A_PTR :                  80B3 - |  DAC_9A_SETUP :               F00B3 C |
 DAC_9B_DATA :                F5C67 C |  DAC_9B_DATA_END :            F7304 C |
 DAC_9B_DATA_PTR :             DC67 - |  DAC_9B_PTR :                  80B8 - |
 DAC_9B_SETUP :               F00B8 C |  DAC_9B_SIZE :                 169D - |
*DAC_TABLE :                  F0000 C |  DATA_SELECT_MENU_SND_DATA :  D695E C |
*DATE :                 "2/19/2024" - | *DCRACKERHAA :                   87 - |
*DCRACKERKICK :                  81 - | *DCRACKERLESSGO :                86 - |
*DCRACKERSNARE :                 82 - | *DCRACKERTIMPANIHI :             83 - |
*DCRACKERTIMPANILOW :            85 - | *DCRACKERTIMPANIMID :            84 - |
 DEATH_EGG_1_SND_DATA :       C7954 C |  DEATH_EGG_2_SND_DATA :       C8000 C |
 DESERT_PALACE_SND_DATA :     CD620 C |  ENDLESS_MINE_SND_DATA :      D224B C |
 EXTRA_LIFE_SND_DATA :        D476A C | *FALSE :                          0 - |
 FINAL_BOSS_SND_DATA :        D8000 C |  FLYING_BATTERY_1_SND_DATA :  BB99E C |
 FLYING_BATTERY_2_SND_DATA :  BBF36 C |  FTONE_01 :                       1 - |
 FTONE_02 :                       2 - |  FTONE_03 :                       3 - |
 FTONE_04 :                       4 - | *FTONE_05 :                       5 - |
 FTONE_06 :                       6 - |  FTONE_07 :                       7 - |
*FTONE_08 :                       8 - |  FTONE_09 :                       9 - |
*FTONE_0A :                       A - | *FTONE_0B :                       B - |
 FTONE_0C :                       C - | *FTONE_0D :                       D - |
*FULLPMMU :                       1 - |
 GLOWING_SPHERES_BONUS_STAGE_SND_DATA :                               C9521 C |
 GOT_EMERALD_SND_DATA :       D496A C |
 GUMBALL_MACHINE_BONUS_STAGE_SND_DATA :                               CAE04 C |
*HAS64 :                          0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HYDROCITY_1_SND_DATA :       B3F24 C |
 HYDROCITY_2_SND_DATA :       B5492 C |  ICECAP_1_SND_DATA :          BC499 C |
 ICECAP_2_SND_DATA :          BCA37 C | *INSUPMODE :                      1 - |
 INVINCIBILITY_SND_DATA :     D4A38 C |  KNUCKLES_THEME_SND_DATA :    CBB19 C |
 LAUNCH_BASE_1_SND_DATA :     BD04B C |  LAUNCH_BASE_2_SND_DATA :     C0000 C |
 LAVA_REEF_1_SND_DATA :       C3C62 C |  LAVA_REEF_2_SND_DATA :       C504F C |
 LEVEL_RESULTS_SND_DATA :     D427A C | *LISTON :                         3 - |
*MACEXP :                         7 - |  MARBLE_GARDEN_1_SND_DATA :   B6E51 C |
 MARBLE_GARDEN_2_SND_DATA :   B7468 C |  MINI_BOSS_SND_DATA :         C8412 C |
 MOMCPU :                     68008 - | *MOMCPUNAME :               "68008" - |
 MUSHROOM_VALLEY_1_SND_DATA : C252A C |  MUSHROOM_VALLEY_2_SND_DATA : C2A9C C |
 MUSIC_01_PTR :                8000 - |  MUSIC_02_PTR :                A210 - |
 MUSIC_03_PTR :                BF24 - |  MUSIC_04_PTR :                D492 - |
 MUSIC_05_PTR :                EE51 - |  MUSIC_06_PTR :                F468 - |
 MUSIC_07_PTR :                8000 - |  MUSIC_08_PTR :                9BBB - |
 MUSIC_09_PTR :                B99E - |  MUSIC_0A_PTR :                BF36 - |
 MUSIC_0B_PTR :                C499 - |  MUSIC_0C_PTR :                CA37 - |
 MUSIC_0D_PTR :                D04B - |  MUSIC_0E_PTR :                8000 - |
 MUSIC_0F_PTR :                A52A - |  MUSIC_10_PTR :                AA9C - |
 MUSIC_11_PTR :                B005 - |  MUSIC_12_PTR :                B66F - |
 MUSIC_13_PTR :                BC62 - |  MUSIC_14_PTR :                D04F - |
 MUSIC_15_PTR :                E642 - |  MUSIC_16_PTR :                F954 - |
 MUSIC_17_PTR :                8000 - |  MUSIC_18_PTR :                8412 - |
 MUSIC_19_PTR :                8742 - |  MUSIC_1A_PTR :                8C3E - |
 MUSIC_1B_PTR :                9521 - |  MUSIC_1C_PTR :                9A84 - |
 MUSIC_1D_PTR :                A31C - |  MUSIC_1E_PTR :                AE04 - |
 MUSIC_1F_PTR :                BB19 - |  MUSIC_20_PTR :                BE82 - |
 MUSIC_21_PTR :                C988 - |  MUSIC_22_PTR :                D620 - |
 MUSIC_23_PTR :                8000 - |  MUSIC_24_PTR :                A24B - |
 MUSIC_25_PTR :                A993 - |  MUSIC_26_PTR :                ADCC - |
 MUSIC_27_PTR :                B83C - |  MUSIC_28_PTR :                BA99 - |
 MUSIC_29_PTR :                C27A - |  MUSIC_2A_PTR :                C76A - |
 MUSIC_2B_PTR :                C96A - |  MUSIC_2C_PTR :                CA38 - |
 MUSIC_2D_PTR :                CCB8 - |  MUSIC_2E_PTR :                DEAA - |
 MUSIC_2F_PTR :                E95E - |  MUSIC_30_PTR :                8000 - |
 MUSIC_31_PTR :                8592 - |  NA0 :                           8A - |
*NA1 :                           96 - |  NA2 :                           A2 - |
 NA3 :                           AE - |  NA4 :                           BA - |
 NA5 :                           C6 - |  NA6 :                           D2 - |
*NA7 :                           DE - |  NAB0 :                          89 - |
 NAB1 :                          95 - | *NAB2 :                          A1 - |
 NAB3 :                          AD - |  NAB4 :                          B9 - |
 NAB5 :                          C5 - | *NAB6 :                          D1 - |
*NAB7 :                          DD - | *NB0 :                           8C - |
 NB1 :                           98 - |  NB2 :                           A4 - |
 NB3 :                           B0 - | *NB4 :                           BC - |
*NB5 :                           C8 - |  NB6 :                           D4 - |
 NBB0 :                          8B - | *NBB1 :                          97 - |
 NBB2 :                          A3 - |  NBB3 :                          AF - |
 NBB4 :                          BB - |  NBB5 :                          C7 - |
 NBB6 :                          D3 - |  NBB7 :                          DF - |
 NC0 :                           81 - |  NC1 :                           8D - |
*NC2 :                           99 - |  NC3 :                           A5 - |
*NC4 :                           B1 - |  NC5 :                           BD - |
 NC6 :                           C9 - |  NC7 :                           D5 - |
 NCS0 :                          82 - |  NCS1 :                          8E - |
 NCS2 :                          9A - |  NCS3 :                          A6 - |
*NCS4 :                          B2 - |  NCS5 :                          BE - |
 NCS6 :                          CA - | *NCS7 :                          D6 - |
 ND0 :                           83 - |  ND1 :                           8F - |
 ND2 :                           9B - |  ND3 :                           A7 - |
 ND4 :                           B3 - |  ND5 :                           BF - |
 ND6 :                           CB - |  ND7 :                           D7 - |
 NE0 :                           85 - | *NE1 :                           91 - |
*NE2 :                           9D - | *NE3 :                           A9 - |
 NE4 :                           B5 - |  NE5 :                           C1 - |
 NE6 :                           CD - | *NE7 :                           D9 - |
 NEB0 :                          84 - |  NEB1 :                          90 - |
 NEB2 :                          9C - |  NEB3 :                          A8 - |
 NEB4 :                          B4 - |  NEB5 :                          C0 - |
 NEB6 :                          CC - | *NEB7 :                          D8 - |
*NESTMAX :                      100 - |  NF0 :                           86 - |
 NF1 :                           92 - |  NF2 :                           9E - |
 NF3 :                           AA - |  NF4 :                           B6 - |
 NF5 :                           C2 - |  NF6 :                           CE - |
*NF7 :                           DA - | *NFS0 :                          87 - |
*NFS1 :                          93 - |  NFS2 :                          9F - |
*NFS3 :                          AB - | *NFS4 :                          B7 - |
 NFS5 :                          C3 - |  NFS6 :                          CF - |
*NFS7 :                          DB - |  NG0 :                           88 - |
 NG1 :                           94 - |  NG2 :                           A0 - |
 NG3 :                           AC - | *NG4 :                           B8 - |
 NG5 :                           C4 - |  NG6 :                           D0 - |
*NG7 :                           DC - |  NMAXPSG :                       C7 - |
*NMAXPSG1 :                      D3 - | *NMAXPSG2 :                      D4 - |
 NRST :                          80 - | *OFFSET_0X0F7304 :            F7304 C |
*PADDING :                        0 - | *PANCENTER :                     C0 - |
*PANCENTRE :                     C0 - |  PANIC_SND_DATA :             D8592 C |
 PANLEFT :                       80 - | *PANNONE :                        0 - |
 PANRIGHT :                      40 - |  PSGDELTA :                       C - |
*RELAXED :                        0 - |  SANDOPOLIS_1_SND_DATA :      C3005 C |
 SANDOPOLIS_2_SND_DATA :      C366F C | *SEGA_PCM_DATA :              F8000 C |
 SFX_20_PTR :                  800B - |  SFX_21_PTR :                  8021 - |
 SFX_22_PTR :                  804B - |  SFX_23_PTR :                  806A - |
 SFX_24_PTR :                  809C - |  SFX_25_PTR :                  80D1 - |
 SFX_26_PTR :                  80FD - |  SFX_27_PTR :                  812C - |
 SFX_28_PTR :                  8158 - |  SFX_29_PTR :                  8167 - |
 SFX_2A_PTR :                  8179 - |  SFX_2B_PTR :                  81BA - |
 SFX_2C_PTR :                  81D9 - |  SFX_2D_PTR :                  820D - |
 SFX_2E_PTR :                  8243 - |  SFX_2F_PTR :                  828D - |
 SFX_30_PTR :                  82BA - |  SFX_31_PTR :                  82EB - |
 SFX_32_PTR :                  8317 - |  SFX_33_PTR :                  8366 - |
 SFX_34_PTR :                  8397 - |  SFX_35_PTR :                  83F2 - |
 SFX_36_PTR :                  8407 - |  SFX_37_PTR :                  8424 - |
 SFX_38_PTR :                  845F - |  SFX_39_PTR :                  847C - |
 SFX_3A_PTR :                  84C6 - |  SFX_3B_PTR :                  84EE - |
 SFX_3C_PTR :                  8519 - |  SFX_3D_PTR :                  855A - |
 SFX_3E_PTR :                  85AD - |  SFX_3F_PTR :                  85E7 - |
 SFX_40_PTR :                  8659 - |  SFX_41_PTR :                  8672 - |
 SFX_42_PTR :                  86AC - |  SFX_43_PTR :                  86BD - |
 SFX_44_PTR :                  8737 - |  SFX_45_PTR :                  875F - |
 SFX_46_PTR :                  87C6 - |  SFX_47_PTR :                  87EE - |
 SFX_48_PTR :                  881C - |  SFX_49_PTR :                  882D - |
 SFX_4A_PTR :                  885A - |  SFX_4B_PTR :                  8887 - |
 SFX_4C_PTR :                  88BA - |  SFX_4D_PTR :                  88F4 - |
 SFX_4E_PTR :                  8901 - |  SFX_4F_PTR :                  8916 - |
 SFX_50_PTR :                  894D - |  SFX_51_PTR :                  8980 - |
 SFX_52_PTR :                  89B9 - |  SFX_53_PTR :                  89F6 - |
 SFX_54_PTR :                  8A35 - |  SFX_55_PTR :                  8A76 - |
 SFX_56_PTR :                  8AA0 - |  SFX_57_PTR :                  8AE5 - |
 SFX_58_PTR :                  8B0D - |  SFX_59_PTR :                  8B37 - |
 SFX_5A_PTR :                  8B90 - |  SFX_5B_PTR :                  8BBD - |
 SFX_5C_PTR :                  8BF1 - |  SFX_5D_PTR :                  8C38 - |
 SFX_5E_PTR :                  8C60 - |  SFX_5F_PTR :                  8C9A - |
 SFX_60_PTR :                  8D36 - |  SFX_61_PTR :                  8D71 - |
 SFX_62_PTR :                  8DCE - |  SFX_63_PTR :                  8E05 - |
 SFX_64_PTR :                  8E34 - |  SFX_65_PTR :                  8E5C - |
 SFX_66_PTR :                  8E7D - |  SFX_67_PTR :                  8EB7 - |
 SFX_68_PTR :                  8ED8 - |  SFX_69_PTR :                  8F02 - |
 SFX_6A_PTR :                  8F3F - |  SFX_6B_PTR :                  8F6A - |
 SFX_6C_PTR :                  8F94 - |  SFX_6D_PTR :                  8FFF - |
 SFX_6E_PTR :                  902B - |  SFX_6F_PTR :                  9069 - |
 SFX_70_PTR :                  90AC - |  SFX_NN_PTR :                  8000 - |
 SKY_SANCTUARY_SND_DATA :     C6642 C |
 SLOT_MACHINE_BONUS_STAGE_SND_DATA :                                  CA31C C |
 SMPS2ASMVER :                    1 - |  SMPSNOATTACK :                  E7 - |
*SMPSPITCH00 :                    0 - | *SMPSPITCH01HI :                  C - |
*SMPSPITCH01LO :                 F4 - | *SMPSPITCH02HI :                 18 - |
*SMPSPITCH02LO :                 E8 - | *SMPSPITCH03HI :                 24 - |
*SMPSPITCH03LO :                 DC - | *SMPSPITCH04HI :                 30 - |
*SMPSPITCH04LO :                 D0 - | *SMPSPITCH05HI :                 3C - |
*SMPSPITCH05LO :                 C4 - | *SMPSPITCH06HI :                 48 - |
*SMPSPITCH06LO :                 B8 - | *SMPSPITCH07HI :                 54 - |
*SMPSPITCH07LO :                 AC - | *SMPSPITCH08HI :                 60 - |
*SMPSPITCH08LO :                 A0 - | *SMPSPITCH09HI :                 6C - |
*SMPSPITCH09LO :                 94 - | *SMPSPITCH10HI :                 78 - |
*SMPSPITCH10LO :                 88 - |  SONGSTART :                  E90AC - |
 SONICDRIVERVER :                 3 - |  SOUND20 :                    E800B C |
*SOUND20_JUMP_HEADER :        E800B C |  SOUND20_JUMP_PSG1 :          E8015 C |
*SOUND20_NULL_HEADER :        E8000 C |  SOUND20_NULL_PSG1 :          E800A C |
 SOUND21 :                    E8021 C |  SOUND21_CHECKPOINT_FM5 :     E8044 C |
*SOUND21_CHECKPOINT_HEADER :  E8021 C |  SOUND21_CHECKPOINT_VOICES :  E802B C |
 SOUND22 :                    E804B C | *SOUND22_SPIKESWITCH_HEADER : E804B C |
 SOUND22_SPIKESWITCH_LOOP00 : E8060 C |  SOUND22_SPIKESWITCH_PSG3 :   E8055 C |
 SOUND23 :                    E806A C |  SOUND23_HURT_FM5 :           E8074 C |
*SOUND23_HURT_HEADER :        E806A C |  SOUND23_HURT_LOOP00 :        E807A C |
 SOUND23_HURT_VOICES :        E8083 C |  SOUND24 :                    E809C C |
*SOUND24_SKIDDING_HEADER :    E809C C |  SOUND24_SKIDDING_LOOP00 :    E80C7 C |
 SOUND24_SKIDDING_LOOP01 :    E80B4 C |  SOUND24_SKIDDING_PSG2 :      E80AC C |
 SOUND24_SKIDDING_PSG3 :      E80BE C |  SOUND25 :                    E80D1 C |
 SOUND25_BLOCKPUSH_FM5 :      E80DB C | *SOUND25_BLOCKPUSH_HEADER :   E80D1 C |
 SOUND25_BLOCKPUSH_VOICES :   E80E4 C |  SOUND26 :                    E80FD C |
 SOUND26_HURTBYSPIKES_FM5 :   E8107 C |
*SOUND26_HURTBYSPIKES_HEADER :                                        E80FD C |
 SOUND26_HURTBYSPIKES_VOICES :                                        E8113 C |
 SOUND27 :                    E812C C |  SOUND27_SPARKLE_FM4 :        E8136 C |
*SOUND27_SPARKLE_HEADER :     E812C C |  SOUND27_SPARKLE_VOICES :     E813F C |
 SOUND28 :                    E8158 C | *SOUND28_BEEP_HEADER :        E8158 C |
 SOUND28_BEEP_PSG1 :          E8162 C |  SOUND29 :                    E8167 C |
*SOUND29_BWOOP_HEADER :       E8167 C |  SOUND29_BWOOP_PSG2 :         E8171 C |
 SOUND2A :                    E8179 C |  SOUND2A_SPLASH_FM5 :         E819C C |
*SOUND2A_SPLASH_HEADER :      E8179 C |  SOUND2A_SPLASH_LOOP00 :      E8192 C |
 SOUND2A_SPLASH_PSG3 :        E8189 C |  SOUND2A_SPLASH_VOICES :      E81A1 C |
 SOUND2B :                    E81BA C | *SOUND2B_SWISH_HEADER :       E81BA C |
 SOUND2B_SWISH_LOOP00 :       E81CF C |  SOUND2B_SWISH_PSG3 :         E81C4 C |
 SOUND2C :                    E81D9 C |  SOUND2C_39_4B_VOICES :       E81F4 C |
 SOUND2C_BOSSHIT_FM5 :        E81E3 C | *SOUND2C_BOSSHIT_HEADER :     E81D9 C |
 SOUND2C_BOSSHIT_LOOP00 :     E81EA C |  SOUND2D :                    E820D C |
 SOUND2D_INHALINGBUBBLE_FM5 : E8217 C |
*SOUND2D_INHALINGBUBBLE_HEADER :                                      E820D C |
 SOUND2D_INHALINGBUBBLE_VOICES :                                      E822A C |
 SOUND2E :                    E8243 C |  SOUND2E_33_VOICES :          E8274 C |
 SOUND2E_LAVABALL_FM5 :       E8253 C | *SOUND2E_LAVABALL_HEADER :    E8243 C |
 SOUND2E_LAVABALL_LOOP00 :    E826A C |  SOUND2E_LAVABALL_PSG3 :      E8261 C |
 SOUND2F :                    E828D C |  SOUND2F_SHIELD_FM5 :         E8297 C |
*SOUND2F_SHIELD_HEADER :      E828D C |  SOUND2F_SHIELD_VOICES :      E82A1 C |
 SOUND30 :                    E82BA C |  SOUND30_LASERBEAM_FM5 :      E82C4 C |
*SOUND30_LASERBEAM_HEADER :   E82BA C |  SOUND30_LASERBEAM_LOOP00 :   E82C8 C |
 SOUND30_LASERBEAM_VOICES :   E82D2 C |  SOUND31 :                    E82EB C |
 SOUND31_ZAP_FM5 :            E82F5 C | *SOUND31_ZAP_HEADER :         E82EB C |
 SOUND31_ZAP_VOICES :         E82FE C |  SOUND32 :                    E8317 C |
 SOUND32_DROWN_FM4 :          E8339 C |  SOUND32_DROWN_FM5 :          E8327 C |
*SOUND32_DROWN_HEADER :       E8317 C |  SOUND32_DROWN_LOOP00 :       E8342 C |
 SOUND32_DROWN_LOOP01 :       E832E C |  SOUND32_DROWN_VOICES :       E834D C |
 SOUND33 :                    E8366 C |  SOUND33_FIREBURN_FM5 :       E8376 C |
*SOUND33_FIREBURN_HEADER :    E8366 C |  SOUND33_FIREBURN_LOOP00 :    E838D C |
 SOUND33_FIREBURN_PSG3 :      E8384 C |  SOUND34 :                    E8397 C |
 SOUND34_BUMPER_FM3 :         E83BB C |  SOUND34_BUMPER_FM4 :         E83B2 C |
 SOUND34_BUMPER_FM5 :         E83AD C | *SOUND34_BUMPER_HEADER :      E8397 C |
 SOUND34_BUMPER_JUMP00 :      E83B8 C |  SOUND34_BUMPER_VOICES :      E83C0 C |
 SOUND35 :                    E83F2 C |  SOUND35_RINGRIGHT_FM5 :      E83FC C |
*SOUND35_RINGRIGHT_HEADER :   E83F2 C |  SOUND36 :                    E8407 C |
*SOUND36_SPIKESMOVE_HEADER :  E8407 C |  SOUND36_SPIKESMOVE_LOOP00 :  E841A C |
 SOUND36_SPIKESMOVE_PSG3 :    E8411 C |  SOUND37 :                    E8424 C |
 SOUND37_RUMBLING_FM5 :       E842E C | *SOUND37_RUMBLING_HEADER :    E8424 C |
 SOUND37_RUMBLING_LOOP00 :    E8435 C |  SOUND37_RUMBLING_LOOP01 :    E843C C |
 SOUND37_RUMBLING_VOICES :    E8446 C |  SOUND38 :                    E845F C |
*SOUND38_HEADER :             E845F C |  SOUND38_LOOP00 :             E8472 C |
 SOUND38_PSG3 :               E8469 C |  SOUND39 :                    E847C C |
 SOUND39_SMASH_FM3 :          E8498 C |  SOUND39_SMASH_FM4 :          E84A3 C |
 SOUND39_SMASH_FM5 :          E849F C | *SOUND39_SMASH_HEADER :       E847C C |
 SOUND39_SMASH_LOOP00 :       E84AA C |  SOUND39_SMASH_LOOP01 :       E84BB C |
 SOUND39_SMASH_PSG3 :         E84B4 C |  SOUND3A :                    E84C6 C |
 SOUND3A_FM5 :                E84D0 C | *SOUND3A_HEADER :             E84C6 C |
 SOUND3A_VOICES :             E84D5 C |  SOUND3B :                    E84EE C |
 SOUND3B_DOORSLAM_FM5 :       E84F8 C | *SOUND3B_DOORSLAM_HEADER :    E84EE C |
 SOUND3B_DOORSLAM_VOICES :    E8500 C |  SOUND3C :                    E8519 C |
 SOUND3C_SPINDASHRELEASE_FM5 :                                        E8529 C |
*SOUND3C_SPINDASHRELEASE_HEADER :                                     E8519 C |
 SOUND3C_SPINDASHRELEASE_PSG3 :                                       E8533 C |
 SOUND3C_SPINDASHRELEASE_VOICES :                                     E8541 C |
 SOUND3D :                    E855A C |  SOUND3D_HAMMER_FM4 :         E8574 C |
 SOUND3D_HAMMER_FM5 :         E856A C | *SOUND3D_HAMMER_HEADER :      E855A C |
 SOUND3D_HAMMER_VOICES :      E857B C |  SOUND3E :                    E85AD C |
 SOUND3E_ROLL_FM4 :           E85B7 C | *SOUND3E_ROLL_HEADER :        E85AD C |
 SOUND3E_ROLL_LOOP00 :        E85C3 C |  SOUND3E_ROLL_VOICES :        E85CE C |
 SOUND3F :                    E85E7 C |  SOUND3F_40_42_VOICES :       E8640 C |
 SOUND3F_CONTINUEJINGLE_FM3 : E85FD C |  SOUND3F_CONTINUEJINGLE_FM4 : E8618 C |
 SOUND3F_CONTINUEJINGLE_FM5 : E862D C |
*SOUND3F_CONTINUEJINGLE_HEADER :                                      E85E7 C |
 SOUND3F_CONTINUEJINGLE_LOOP00 :                                      E8636 C |
 SOUND3F_CONTINUEJINGLE_LOOP01 :                                      E8623 C |
 SOUND3F_CONTINUEJINGLE_LOOP02 :                                      E860C C |
 SOUND40 :                    E8659 C |  SOUND40_CASINOBONUS_FM4 :    E8669 C |
 SOUND40_CASINOBONUS_FM5 :    E866D C | *SOUND40_CASINOBONUS_HEADER : E8659 C |
 SOUND41 :                    E8672 C |  SOUND41_EXPLOSION_FM5 :      E8682 C |
*SOUND41_EXPLOSION_HEADER :   E8672 C |  SOUND41_EXPLOSION_PSG3 :     E868C C |
 SOUND41_EXPLOSION_VOICES :   E8693 C |  SOUND42 :                    E86AC C |
 SOUND42_WATERWARNING_FM5 :   E86B6 C |
*SOUND42_WATERWARNING_HEADER :                                        E86AC C |
 SOUND43 :                    E86BD C |  SOUND43_ENTERGIANTRING_FM4 : E86CD C |
 SOUND43_ENTERGIANTRING_FM5 : E86D9 C |
*SOUND43_ENTERGIANTRING_HEADER :                                      E86BD C |
 SOUND43_ENTERGIANTRING_LOOP00 :                                      E86E2 C |
 SOUND43_ENTERGIANTRING_VOICES :                                      E86EC C |
 SOUND44 :                    E8737 C |  SOUND44_BOSSEXPLOSION_FM5 :  E8741 C |
*SOUND44_BOSSEXPLOSION_HEADER :                                       E8737 C |
 SOUND44_BOSSEXPLOSION_VOICES :                                       E8746 C |
 SOUND45 :                    E875F C |  SOUND45_TALLYEND_FM4 :       E877E C |
 SOUND45_TALLYEND_FM5 :       E8775 C | *SOUND45_TALLYEND_HEADER :    E875F C |
 SOUND45_TALLYEND_PSG3 :      E8785 C |  SOUND45_TALLYEND_VOICES :    E8794 C |
 SOUND46 :                    E87C6 C |  SOUND46_RINGSPILL_FM4 :      E87D6 C |
 SOUND46_RINGSPILL_FM5 :      E87E2 C | *SOUND46_RINGSPILL_HEADER :   E87C6 C |
 SOUND47 :                    E87EE C |  SOUND47_FM5 :                E87F8 C |
*SOUND47_HEADER :             E87EE C |  SOUND47_VOICES :             E8803 C |
 SOUND48 :                    E881C C |
*SOUND48_FLAMETHROWER_HEADER :                                        E881C C |
 SOUND48_FLAMETHROWER_PSG3 :  E8826 C |  SOUND49 :                    E882D C |
 SOUND49_BONUS_FM5 :          E8837 C | *SOUND49_BONUS_HEADER :       E882D C |
 SOUND49_BONUS_VOICES :       E8841 C |  SOUND4A :                    E885A C |
 SOUND4A_SPECSTAGEENTRY_FM5 : E8864 C |
*SOUND4A_SPECSTAGEENTRY_HEADER :                                      E885A C |
 SOUND4A_SPECSTAGEENTRY_VOICES :                                      E886E C |
 SOUND4B :                    E8887 C |  SOUND4B_SLOWSMASH_FM5 :      E8897 C |
*SOUND4B_SLOWSMASH_HEADER :   E8887 C |  SOUND4B_SLOWSMASH_LOOP00 :   E889E C |
 SOUND4B_SLOWSMASH_LOOP01 :   E88AF C |  SOUND4B_SLOWSMASH_PSG3 :     E88A8 C |
 SOUND4C :                    E88BA C |  SOUND4C_SPRING_FM4 :         E88C4 C |
*SOUND4C_SPRING_HEADER :      E88BA C |  SOUND4C_SPRING_LOOP00 :      E88D0 C |
 SOUND4C_SPRING_VOICES :      E88DB C |  SOUND4D :                    E88F4 C |
*SOUND4D_BLIP_HEADER :        E88F4 C |  SOUND4D_BLIP_PSG3 :          E88FE C |
 SOUND4E :                    E8901 C |  SOUND4E_RINGLEFT_FM4 :       E890B C |
*SOUND4E_RINGLEFT_HEADER :    E8901 C |  SOUND4F :                    E8916 C |
 SOUND4F_SIGNPOST_FM4 :       E8926 C |  SOUND4F_SIGNPOST_FM5 :       E8928 C |
*SOUND4F_SIGNPOST_HEADER :    E8916 C |  SOUND4F_SIGNPOST_LOOP00 :    E892A C |
 SOUND4F_SIGNPOST_VOICES :    E8934 C |  SOUND50 :                    E894D C |
 SOUND50_CNZBOSSZAP_FM5 :     E8957 C | *SOUND50_CNZBOSSZAP_HEADER :  E894D C |
 SOUND50_CNZBOSSZAP_LOOP00 :  E895D C |  SOUND50_CNZBOSSZAP_VOICES :  E8967 C |
 SOUND51 :                    E8980 C |  SOUND51_FM5 :                E8999 C |
*SOUND51_HEADER :             E8980 C |  SOUND51_PSG3 :               E8990 C |
 SOUND51_VOICES :             E89A0 C |  SOUND52 :                    E89B9 C |
 SOUND52_FM5 :                E89C3 C | *SOUND52_HEADER :             E89B9 C |
 SOUND52_LOOP00 :             E89CA C |  SOUND52_LOOP01 :             E89D2 C |
 SOUND52_VOICES :             E89DD C |  SOUND53 :                    E89F6 C |
 SOUND53_SIGNPOST2P_FM5 :     E8A00 C | *SOUND53_SIGNPOST2P_HEADER :  E89F6 C |
 SOUND53_SIGNPOST2P_VOICES :  E8A1C C |  SOUND54 :                    E8A35 C |
 SOUND54_OOZLIDPOP_FM5 :      E8A45 C | *SOUND54_OOZLIDPOP_HEADER :   E8A35 C |
 SOUND54_OOZLIDPOP_PSG3 :     E8A4A C |  SOUND54_OOZLIDPOP_VOICES :   E8A5D C |
 SOUND55 :                    E8A76 C |  SOUND55_SLIDINGSPIKE_FM5 :   E8A80 C |
*SOUND55_SLIDINGSPIKE_HEADER :                                        E8A76 C |
 SOUND55_SLIDINGSPIKE_VOICES :                                        E8A87 C |
 SOUND56 :                    E8AA0 C |  SOUND56_CNZELEVATOR_FM5 :    E8AAA C |
*SOUND56_CNZELEVATOR_HEADER : E8AA0 C |  SOUND56_CNZELEVATOR_LOOP00 : E8AB4 C |
 SOUND56_CNZELEVATOR_LOOP01 : E8ABC C |  SOUND56_CNZELEVATOR_VOICES : E8ACC C |
 SOUND57 :                    E8AE5 C |  SOUND57_PLATFORMKNOCK_FM5 :  E8AEF C |
*SOUND57_PLATFORMKNOCK_HEADER :                                       E8AE5 C |
 SOUND57_PLATFORMKNOCK_VOICES :                                       E8AF4 C |
 SOUND58 :                    E8B0D C |  SOUND58_BONUSBUMPER_FM5 :    E8B17 C |
*SOUND58_BONUSBUMPER_HEADER : E8B0D C |  SOUND58_BONUSBUMPER_VOICES : E8B1E C |
 SOUND59 :                    E8B37 C |  SOUND59_LARGEBUMPER_FM3 :    E8B54 C |
 SOUND59_LARGEBUMPER_FM4 :    E8B4D C |  SOUND59_LARGEBUMPER_FM5 :    E8B59 C |
*SOUND59_LARGEBUMPER_HEADER : E8B37 C |  SOUND59_LARGEBUMPER_VOICES : E8B5E C |
 SOUND5A :                    E8B90 C |  SOUND5A_GLOOP_FM5 :          E8B9A C |
*SOUND5A_GLOOP_HEADER :       E8B90 C |  SOUND5A_GLOOP_VOICES :       E8BA4 C |
 SOUND5B :                    E8BBD C |  SOUND5B_PREARROWFIRING_FM5 : E8BC7 C |
*SOUND5B_PREARROWFIRING_HEADER :                                      E8BBD C |
 SOUND5B_PREARROWFIRING_LOOP00 :                                      E8BCE C |
 SOUND5B_PREARROWFIRING_VOICES :                                      E8BD8 C |
 SOUND5C :                    E8BF1 C |  SOUND5C_FIRE_FM4 :           E8C01 C |
*SOUND5C_FIRE_HEADER :        E8BF1 C |  SOUND5C_FIRE_LOOP00 :        E8C05 C |
 SOUND5C_FIRE_LOOP01 :        E8C15 C |  SOUND5C_FIRE_PSG3 :          E8C0F C |
 SOUND5C_FIRE_VOICES :        E8C1F C |  SOUND5D :                    E8C38 C |
 SOUND5D_ARROWSTICK_FM5 :     E8C42 C | *SOUND5D_ARROWSTICK_HEADER :  E8C38 C |
 SOUND5D_ARROWSTICK_VOICES :  E8C47 C |  SOUND5E :                    E8C60 C |
 SOUND5E_WINGFORTRESS_FM3 :   E8C6A C |
*SOUND5E_WINGFORTRESS_HEADER :                                        E8C60 C |
 SOUND5E_WINGFORTRESS_LOOP00 :                                        E8C6C C |
 SOUND5E_WINGFORTRESS_LOOP01 :                                        E8C75 C |
 SOUND5E_WINGFORTRESS_VOICES :                                        E8C81 C |
 SOUND5F :                    E8C9A C |  SOUND5F_6C_PSG2 :            E8CE5 C |
 SOUND5F_6C_PSG3 :            E8CD0 C |  SOUND5F_SUPERTRANSFORM_FM5 : E8CB0 C |
*SOUND5F_SUPERTRANSFORM_HEADER :                                      E8C9A C |
 SOUND5F_SUPERTRANSFORM_LOOP00 :                                      E8CC6 C |
 SOUND5F_SUPERTRANSFORM_LOOP01 :                                      E8CE9 C |
 SOUND5F_SUPERTRANSFORM_LOOP02 :                                      E8CF6 C |
 SOUND5F_SUPERTRANSFORM_LOOP03 :                                      E8CDB C |
 SOUND5F_SUPERTRANSFORM_VOICES :                                      E8D04 C |
 SOUND60 :                    E8D36 C |  SOUND60_SPINDASHREV_FM5 :    E8D40 C |
*SOUND60_SPINDASHREV_HEADER : E8D36 C |  SOUND60_SPINDASHREV_LOOP00 : E8D4E C |
 SOUND60_SPINDASHREV_VOICES : E8D58 C |  SOUND61 :                    E8D71 C |
 SOUND61_RUMBLING2_FM4 :      E8D7B C | *SOUND61_RUMBLING2_HEADER :   E8D71 C |
 SOUND61_RUMBLING2_VOICES :   E8DB5 C |  SOUND62 :                    E8DCE C |
 SOUND62_CNZLAUNCH_FM5 :      E8DD8 C | *SOUND62_CNZLAUNCH_HEADER :   E8DCE C |
 SOUND62_CNZLAUNCH_LOOP00 :   E8DE1 C |  SOUND62_CNZLAUNCH_VOICES :   E8DEC C |
 SOUND63 :                    E8E05 C |  SOUND63_FLIPPER_FM5 :        E8E0F C |
*SOUND63_FLIPPER_HEADER :     E8E05 C |  SOUND63_FLIPPER_VOICES :     E8E1B C |
 SOUND64 :                    E8E34 C |  SOUND64_HTZLIFTCLICK_FM5 :   E8E3E C |
*SOUND64_HTZLIFTCLICK_HEADER :                                        E8E34 C |
 SOUND64_HTZLIFTCLICK_VOICES :                                        E8E43 C |
 SOUND65 :                    E8E5C C | *SOUND65_LEAVES_HEADER :      E8E5C C |
 SOUND65_LEAVES_PSG3 :        E8E66 C |  SOUND65_LEAVES_VOICES :      E8E7D C |
 SOUND66 :                    E8E7D C |  SOUND66_MEGAMACKDROP_FM5 :   E8E94 C |
*SOUND66_MEGAMACKDROP_HEADER :                                        E8E7D C |
 SOUND66_MEGAMACKDROP_PSG3 :  E8E8D C |
 SOUND66_MEGAMACKDROP_VOICES :                                        E8E9E C |
 SOUND67 :                    E8EB7 C |
*SOUND67_DRAWBRIDGEMOVE_HEADER :                                      E8EB7 C |
 SOUND67_DRAWBRIDGEMOVE_PSG3 :                                        E8EC1 C |
 SOUND67_DRAWBRIDGEMOVE_VOICES :                                      E8ED8 C |
 SOUND68 :                    E8ED8 C |  SOUND68_QUICKDOORSLAM_FM5 :  E8EE2 C |
*SOUND68_QUICKDOORSLAM_HEADER :                                       E8ED8 C |
 SOUND68_QUICKDOORSLAM_VOICES :                                       E8EE9 C |
 SOUND69 :                    E8F02 C |  SOUND69_DRAWBRIDGEDOWN_FM5 : E8F12 C |
*SOUND69_DRAWBRIDGEDOWN_HEADER :                                      E8F02 C |
 SOUND69_DRAWBRIDGEDOWN_PSG3 :                                        E8F1B C |
 SOUND69_DRAWBRIDGEDOWN_VOICES :                                      E8F26 C |
 SOUND6A :                    E8F3F C |  SOUND6A_6F_LASER_VOICES :    E8F51 C |
 SOUND6A_LASERBURST_FM5 :     E8F49 C | *SOUND6A_LASERBURST_HEADER :  E8F3F C |
 SOUND6B :                    E8F6A C |  SOUND6B_LASERFLOOR_FM4 :     E8F74 C |
*SOUND6B_LASERFLOOR_HEADER :  E8F6A C |  SOUND6B_LASERFLOOR_VOICES :  E8F7B C |
 SOUND6C :                    E8F94 C |  SOUND6C_TELEPORT_FM4 :       E8FB0 C |
 SOUND6C_TELEPORT_FM5 :       E8FB2 C | *SOUND6C_TELEPORT_HEADER :    E8F94 C |
 SOUND6C_TELEPORT_LOOP00 :    E8FC0 C |  SOUND6C_TELEPORT_VOICES :    E8FCD C |
 SOUND6D :                    E8FFF C |  SOUND6D_ERROR_FM5 :          E9009 C |
*SOUND6D_ERROR_HEADER :       E8FFF C |  SOUND6D_ERROR_VOICES :       E9012 C |
 SOUND6E :                    E902B C |  SOUND6E_MECHASONICBUZZ_FM5 : E903B C |
*SOUND6E_MECHASONICBUZZ_HEADER :                                      E902B C |
 SOUND6E_MECHASONICBUZZ_LOOP00 :                                      E9040 C |
 SOUND6E_MECHASONICBUZZ_PSG3 :                                        E904B C |
 SOUND6E_MECHASONICBUZZ_VOICES :                                      E9050 C |
 SOUND6F :                    E9069 C |  SOUND6F_LARGELASER_FM4 :     E907F C |
 SOUND6F_LARGELASER_FM5 :     E9083 C | *SOUND6F_LARGELASER_HEADER :  E9069 C |
 SOUND6F_LARGELASER_PSG3 :    E909A C |  SOUND70 :                    E90AC C |
*SOUND70_OILSLIDE_HEADER :    E90AC C |  SOUND70_OILSLIDE_LOOP00 :    E90BA C |
 SOUND70_OILSLIDE_PSG3 :      E90B6 C |  SOUNDNN :                    E8000 C |
 SOUND_RING_VOICES :          E87AD C |  SOURCEDRIVER :                   3 - |
 SOURCESMPS2ASM :                 0 - |  SPECIAL_STAGE_SND_DATA :     C9A84 C |
 SUPER_SONIC_THEME_SND_DATA : D5EAA C |  THE_DOOMSDAY_SND_DATA :      C8C3E C |
*TIME :                   "10:3:17" - |  TIME_GAME_OVER_SND_DATA :    D383C C |
 TITLE_SCREEN_SND_DATA :      D2993 C | *TRACENUM :                       0 - |
*TRUE :                           1 - | *USE_S2_SAMPLES :                 1 - |
*USE_S3D_SAMPLES :                1 - | *USE_S3_SAMPLES :                 1 - |
*USE_SK_SAMPLES :                 1 - |  VCALGORITHM :                    3 - |
 VCAM1 :                          0 - |  VCAM2 :                          0 - |
 VCAM3 :                          0 - |  VCAM4 :                          0 - |
 VCAR1 :                          E - |  VCAR2 :                         1D - |
 VCAR3 :                         1E - |  VCAR4 :                         1F - |
 VCCF1 :                          1 - |  VCCF2 :                          0 - |
 VCCF3 :                          0 - |  VCCF4 :                          0 - |
 VCD1R1 :                         0 - |  VCD1R1UNK :                      0 - |
 VCD1R2 :                         C - |  VCD1R2UNK :                      0 - |
 VCD1R3 :                        1D - |  VCD1R3UNK :                      0 - |
 VCD1R4 :                         0 - |  VCD1R4UNK :                      0 - |
 VCD2R1 :                         0 - |  VCD2R2 :                         0 - |
 VCD2R3 :                         1 - |  VCD2R4 :                         0 - |
 VCDL1 :                          0 - |  VCDL2 :                          0 - |
 VCDL3 :                          0 - |  VCDL4 :                          0 - |
 VCDT1 :                          3 - |  VCDT2 :                          1 - |
 VCDT3 :                          0 - |  VCDT4 :                          0 - |
 VCFEEDBACK :                     6 - |  VCRR1 :                          F - |
 VCRR2 :                          F - |  VCRR3 :                          F - |
 VCRR4 :                          F - |  VCRS1 :                          0 - |
 VCRS2 :                          0 - |  VCRS3 :                          0 - |
 VCRS4 :                          0 - |  VCTL1 :                          0 - |
 VCTL2 :                          6 - |  VCTL3 :                          7 - |
 VCTL4 :                          8 - |  VCTLMASK1 :                     80 - |
 VCTLMASK2 :                      0 - |  VCTLMASK3 :                      0 - |
 VCTLMASK4 :                      0 - |  VCUNUSEDBITS :                   0 - |
*VERSION :                     142F - | *Z80_DRIVER :                 E0000 C |
 ZEROOFFSETOPTIMIZATION :         0 - |

    922 symbols
    175 unused symbols

 AS V1.42 Beta [Bld 251] - Source File Music.asm - Page 3 - 2/19/2024 10:3:17


  Defined Macros:
  ---------------

ALIGN                                 | ALIGN0                               
CHECKEDCHANNELPOINTER                 | CNOP                                 
CNOP0                                 | CONVERTMAINTEMPOMOD                  
DS                                    | EVEN                                 
INSN1OP                               | INSN2OP                              
ORG                                   | ORG0                                 
PSGPITCHCONVERT                       | SMPSALTERNATESMPS                    
SMPSALTERNOTE                         | SMPSALTERPITCH                       
SMPSALTERVOL                          | SMPSCALL                             
SMPSCHANGETRANSPOSITION               | SMPSCHANTEMPODIV                     
SMPSCLEARPUSH                         | SMPSCONDITIONALJUMP                  
SMPSCONTINUOUSLOOP                    | SMPSCOPYDATA                         
SMPSDETUNE                            | SMPSFADE                             
SMPSFM3SPECIALMODE                    | SMPSFMALTERVOL                       
SMPSFMFLUTTER                         | SMPSFMICOMMAND                       
SMPSFMVOICE                           | SMPSFMVOLENV                         
SMPSHALTMUSIC                         | SMPSHEADERCHAN                       
SMPSHEADERCHANSFX                     | SMPSHEADERDAC                        
SMPSHEADERFM                          | SMPSHEADERPSG                        
SMPSHEADERSFXCHANNEL                  | SMPSHEADERSTARTSONG                  
SMPSHEADERTEMPO                       | SMPSHEADERTEMPOSFX                   
SMPSHEADERVOICE                       | SMPSHEADERVOICENULL                  
SMPSHEADERVOICEUVB                    | SMPSJUMP                             
SMPSLOOP                              | SMPSMAXRELRATE                       
SMPSMODCHANGE                         | SMPSMODCHANGE2                       
SMPSMODOFF                            | SMPSMODON                            
SMPSMODSET                            | SMPSNOP                              
SMPSNOTEFILL                          | SMPSPAN                              
SMPSPLAYDACSAMPLE                     | SMPSPLAYSOUND                        
SMPSPSGALTERVOL                       | SMPSPSGFORM                          
SMPSPSGVOICE                          | SMPSRESETSPINDASHREV                 
SMPSRETURN                            | SMPSSETNOTE                          
SMPSSETTEMPODIV                       | SMPSSETTEMPOMOD                      
SMPSSETVOICE                          | SMPSSETVOL                           
SMPSSPINDASHREV                       | SMPSSSGEG                            
SMPSSTOP                              | SMPSSTOPFM                           
SMPSSTOPSPECIAL                       | SMPSVCALGORITHM                      
SMPSVCAMPMOD                          | SMPSVCATTACKRATE                     
SMPSVCCOARSEFREQ                      | SMPSVCDECAYLEVEL                     
SMPSVCDECAYRATE1                      | SMPSVCDECAYRATE2                     
SMPSVCDETUNE                          | SMPSVCFEEDBACK                       
SMPSVCRATESCALE                       | SMPSVCRELEASERATE                    
SMPSVCTOTALLEVEL                      | SMPSVCUNUSEDBITS                     
SMPSWEIRDD1LRR                        | STARTZ80                             
STOPZ80                               | TRACE                                
WAITZ80                               | _ADD                                 
_ADDQ                                 | _CLR                                 
_CMP                                  | _CMPI                                
_MOVE                                 | _TST                                 

     98 macros

 AS V1.42 Beta [Bld 251] - Source File Music.asm - Page 4 - 2/19/2024 10:3:17


  Defined Functions:
  ------------------

S3TEMPOTOS2                           | S3TEMPOTOS1                          
S1TEMPOTOS3                           | S1TEMPOTOS2                          
S2TEMPOTOS3                           | S2TEMPOTOS1                          
CONV0TO256                            | SIGNEXTENDB                          
SIGNEXTEND                            | SIGNMASK                             
BIT                                   | CHKOP                                
NOTZ80                                | Z80_PTR                              

 AS V1.42 Beta [Bld 251] - Source File Music.asm - Page 5 - 2/19/2024 10:3:17


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.35 seconds assembly time

   5041 lines source file
  19333 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
